{:functions ({:args [{:spelling "src", :type "const int *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_wide_t *"} {:spelling "copy", :type "int"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/int] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_wide_t] :coffi.mem/int], :symbol "cef_string_wide_set", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_wide_set, :raw-comment "///\n/// These functions set string values. If |copy| is true (1) the value will be\n/// copied instead of referenced. It is up to the user to properly manage\n/// the lifespan of references.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_wide_set"} {:args [{:spelling "src", :type "const char *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf8_t *"} {:spelling "copy", :type "int"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf8_t] :coffi.mem/int], :symbol "cef_string_utf8_set", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf8_set, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf8_set"} {:args [{:spelling "src", :type "const unsigned short *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"} {:spelling "copy", :type "int"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/short] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int], :symbol "cef_string_utf16_set", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_set, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_set"} {:args [{:spelling "str", :type "struct _cef_string_wide_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_wide_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_wide_clear, :raw-comment "///\n/// These functions clear string values. The structure itself is not freed.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_wide_clear"} {:args [{:spelling "str", :type "struct _cef_string_utf8_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf8_t]], :symbol "cef_string_utf8_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf8_clear, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf8_clear"} {:args [{:spelling "str", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_utf16_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_clear, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_clear"} {:args [{:spelling "str1", :type "const struct _cef_string_wide_t *"} {:spelling "str2", :type "const struct _cef_string_wide_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_wide_t] [:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_wide_cmp", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_wide_cmp, :raw-comment "///\n/// These functions compare two string values with the same results as strcmp().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_wide_cmp"} {:args [{:spelling "str1", :type "const struct _cef_string_utf8_t *"} {:spelling "str2", :type "const struct _cef_string_utf8_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf8_t] [:coffi.mem/pointer :clong/_cef_string_utf8_t]], :symbol "cef_string_utf8_cmp", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf8_cmp, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf8_cmp"} {:args [{:spelling "str1", :type "const struct _cef_string_utf16_t *"} {:spelling "str2", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_utf16_cmp", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_cmp, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_cmp"} {:args [{:spelling "src", :type "const int *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf8_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/int] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf8_t]], :symbol "cef_string_wide_to_utf8", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_wide_to_utf8, :raw-comment "///\n/// These functions convert between UTF-8, -16, and -32 strings. They are\n/// potentially slow so unnecessary conversions should be avoided. The best\n/// possible result will always be written to |output| with the boolean return\n/// value indicating whether the conversion is 100% valid.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_wide_to_utf8"} {:args [{:spelling "src", :type "const char *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_wide_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_utf8_to_wide", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf8_to_wide, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf8_to_wide"} {:args [{:spelling "src", :type "const int *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/int] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_wide_to_utf16", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_wide_to_utf16, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_wide_to_utf16"} {:args [{:spelling "src", :type "const unsigned short *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_wide_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/short] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_utf16_to_wide", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_to_wide, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_to_wide"} {:args [{:spelling "src", :type "const char *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_utf8_to_utf16", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf8_to_utf16, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf8_to_utf16"} {:args [{:spelling "src", :type "const unsigned short *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf8_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/short] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf8_t]], :symbol "cef_string_utf16_to_utf8", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_to_utf8, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_to_utf8"} {:args [{:spelling "src", :type "const char *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_wide_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_ascii_to_wide", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_ascii_to_wide, :raw-comment "///\n/// These functions convert an ASCII string, typically a hardcoded constant, to\n/// a Wide/UTF16 string. Use instead of the UTF8 conversion routines if you know\n/// the string is ASCII.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_ascii_to_wide"} {:args [{:spelling "src", :type "const char *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_ascii_to_utf16", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_ascii_to_utf16, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_ascii_to_utf16"} {:args [], :ret {:spelling "struct _cef_string_wide_t *"}, :function/args [], :symbol "cef_string_userfree_wide_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_wide_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_wide_alloc, :raw-comment "///\n/// These functions allocate a new string structure. They must be freed by\n/// calling the associated free function.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_wide_alloc"} {:args [], :ret {:spelling "struct _cef_string_utf8_t *"}, :function/args [], :symbol "cef_string_userfree_utf8_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_utf8_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_utf8_alloc, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_utf8_alloc"} {:args [], :ret {:spelling "struct _cef_string_utf16_t *"}, :function/args [], :symbol "cef_string_userfree_utf16_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_utf16_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_utf16_alloc, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_utf16_alloc"} {:args [{:spelling "str", :type "struct _cef_string_wide_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_wide_t]], :symbol "cef_string_userfree_wide_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_wide_free, :raw-comment "///\n/// These functions free the string structure allocated by the associated\n/// alloc function. Any string contents will first be cleared.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_wide_free"} {:args [{:spelling "str", :type "struct _cef_string_utf8_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf8_t]], :symbol "cef_string_userfree_utf8_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_utf8_free, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_utf8_free"} {:args [{:spelling "str", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_userfree_utf16_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_userfree_utf16_free, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_userfree_utf16_free"} {:args [{:spelling "src", :type "const unsigned short *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/short] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_utf16_to_lower", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_to_lower, :raw-comment "///\n/// These functions convert utf16 string case using the current ICU locale. This\n/// may change the length of the string in some cases.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_to_lower"} {:args [{:spelling "src", :type "const unsigned short *"} {:spelling "src_len", :type "unsigned long"} {:spelling "output", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :coffi.mem/short] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_utf16_to_upper", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_utf16_to_upper, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_string_utf16_to_upper"} {:args [], :ret {:spelling "struct _cef_string_list_t *"}, :function/args [], :symbol "cef_string_list_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_list_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_alloc, :raw-comment "///\n/// Allocate a new string map.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_alloc"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"}], :ret {:spelling "unsigned long"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t]], :symbol "cef_string_list_size", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_size, :raw-comment "///\n/// Return the number of elements in the string list.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_size"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"} {:spelling "index", :type "unsigned long"} {:spelling "value", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_list_value", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_value, :raw-comment "///\n/// Retrieve the value at the specified zero-based string list index. Returns\n/// true (1) if the value was successfully retrieved.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_value"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"} {:spelling "value", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_list_append", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_append, :raw-comment "///\n/// Append a new value at the end of the string list.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_append"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t]], :symbol "cef_string_list_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_clear, :raw-comment "///\n/// Clear the string list.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_clear"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t]], :symbol "cef_string_list_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_free, :raw-comment "///\n/// Free the string list.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_free"} {:args [{:spelling "list", :type "struct _cef_string_list_t *"}], :ret {:spelling "struct _cef_string_list_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_list_t]], :symbol "cef_string_list_copy", :function/ret [:coffi.mem/pointer :clong/_cef_string_list_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_list_copy, :raw-comment "///\n/// Creates a copy of an existing string list.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_list_copy"} {:args [], :ret {:spelling "struct _cef_string_map_t *"}, :function/args [], :symbol "cef_string_map_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_map_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_alloc, :raw-comment "///\n/// Allocate a new string map.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_alloc"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"}], :ret {:spelling "unsigned long"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t]], :symbol "cef_string_map_size", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_size, :raw-comment "///\n/// Return the number of elements in the string map.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_size"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"} {:spelling "key", :type "const struct _cef_string_utf16_t *"} {:spelling "value", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_map_find", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_find, :raw-comment "///\n/// Return the value assigned to the specified key.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_find"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"} {:spelling "index", :type "unsigned long"} {:spelling "key", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_map_key", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_key, :raw-comment "///\n/// Return the key at the specified zero-based string map index.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_key"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"} {:spelling "index", :type "unsigned long"} {:spelling "value", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_map_value", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_value, :raw-comment "///\n/// Return the value at the specified zero-based string map index.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_value"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"} {:spelling "key", :type "const struct _cef_string_utf16_t *"} {:spelling "value", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_map_append", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_append, :raw-comment "///\n/// Append a new key/value pair at the end of the string map. If the key exists,\n/// overwrite the existing value with a new value w/o changing the pair order.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_append"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t]], :symbol "cef_string_map_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_clear, :raw-comment "///\n/// Clear the string map.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_clear"} {:args [{:spelling "map", :type "struct _cef_string_map_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_map_t]], :symbol "cef_string_map_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_map_free, :raw-comment "///\n/// Free the string map.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_map_free"} {:args [], :ret {:spelling "struct _cef_string_multimap_t *"}, :function/args [], :symbol "cef_string_multimap_alloc", :function/ret [:coffi.mem/pointer :clong/_cef_string_multimap_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_alloc, :raw-comment "///\n/// Allocate a new string multimap.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_alloc"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"}], :ret {:spelling "unsigned long"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t]], :symbol "cef_string_multimap_size", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_size, :raw-comment "///\n/// Return the number of elements in the string multimap.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_size"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"} {:spelling "key", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "unsigned long"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_multimap_find_count", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_find_count, :raw-comment "///\n/// Return the number of values with the specified key.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_find_count"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"} {:spelling "key", :type "const struct _cef_string_utf16_t *"} {:spelling "value_index", :type "unsigned long"} {:spelling "value", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_multimap_enumerate", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_enumerate, :raw-comment "///\n/// Return the value_index-th value with the specified key.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_enumerate"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"} {:spelling "index", :type "unsigned long"} {:spelling "key", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_multimap_key", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_key, :raw-comment "///\n/// Return the key at the specified zero-based string multimap index.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_key"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"} {:spelling "index", :type "unsigned long"} {:spelling "value", :type "struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_multimap_value", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_value, :raw-comment "///\n/// Return the value at the specified zero-based string multimap index.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_value"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"} {:spelling "key", :type "const struct _cef_string_utf16_t *"} {:spelling "value", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_string_multimap_append", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_append, :raw-comment "///\n/// Append a new key/value pair at the end of the string multimap.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_append"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t]], :symbol "cef_string_multimap_clear", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_clear, :raw-comment "///\n/// Clear the string multimap.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_clear"} {:args [{:spelling "map", :type "struct _cef_string_multimap_t *"}], :ret {:spelling "void"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_multimap_t]], :symbol "cef_string_multimap_free", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_string_multimap_free, :raw-comment "///\n/// Free the string multimap.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_string_multimap_free"} {:args [{:spelling "", :type "const struct tm *"}], :ret {:spelling "char *"}, :function/args [[:coffi.mem/pointer :clong/tm]], :symbol "asctime", :function/ret [:coffi.mem/pointer :coffi.mem/char], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :asctime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "asctime"} {:args [], :ret {:spelling "unsigned long"}, :function/args [], :symbol "clock", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :clock, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "clock"} {:args [{:spelling "", :type "const long *"}], :ret {:spelling "char *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long]], :symbol "ctime", :function/ret [:coffi.mem/pointer :coffi.mem/char], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :ctime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "ctime"} {:args [{:spelling "", :type "long"} {:spelling "", :type "long"}], :ret {:spelling "double"}, :function/args [:coffi.mem/long :coffi.mem/long], :symbol "difftime", :function/ret :coffi.mem/double, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :difftime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "difftime"} {:args [{:spelling "", :type "const char *"}], :ret {:spelling "struct tm *"}, :function/args [[:coffi.mem/pointer :coffi.mem/char]], :symbol "getdate", :function/ret [:coffi.mem/pointer :clong/tm], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :getdate, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "getdate"} {:args [{:spelling "", :type "const long *"}], :ret {:spelling "struct tm *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long]], :symbol "gmtime", :function/ret [:coffi.mem/pointer :clong/tm], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :gmtime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "gmtime"} {:args [{:spelling "", :type "const long *"}], :ret {:spelling "struct tm *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long]], :symbol "localtime", :function/ret [:coffi.mem/pointer :clong/tm], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :localtime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "localtime"} {:args [{:spelling "", :type "struct tm *"}], :ret {:spelling "long"}, :function/args [[:coffi.mem/pointer :clong/tm]], :symbol "mktime", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :mktime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "mktime"} {:args [{:spelling "", :type "char *restrict"} {:spelling "", :type "unsigned long"} {:spelling "", :type "const char *restrict"} {:spelling "", :type "const struct tm *restrict"}], :ret {:spelling "unsigned long"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] :coffi.mem/long [:coffi.mem/pointer :coffi.mem/char] [:coffi.mem/pointer :clong/tm]], :symbol "strftime", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :strftime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "strftime"} {:args [{:spelling "", :type "const char *restrict"} {:spelling "", :type "const char *restrict"} {:spelling "", :type "struct tm *restrict"}], :ret {:spelling "char *"}, :function/args [[:coffi.mem/pointer :coffi.mem/char] [:coffi.mem/pointer :coffi.mem/char] [:coffi.mem/pointer :clong/tm]], :symbol "strptime", :function/ret [:coffi.mem/pointer :coffi.mem/char], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :strptime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "strptime"} {:args [{:spelling "", :type "long *"}], :ret {:spelling "long"}, :function/args [[:coffi.mem/pointer :coffi.mem/long]], :symbol "time", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :time, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "time"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "tzset", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :tzset, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "tzset"} {:args [{:spelling "", :type "const struct tm *restrict"} {:spelling "", :type "char *restrict"}], :ret {:spelling "char *"}, :function/args [[:coffi.mem/pointer :clong/tm] [:coffi.mem/pointer :coffi.mem/char]], :symbol "asctime_r", :function/ret [:coffi.mem/pointer :coffi.mem/char], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :asctime_r, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "asctime_r"} {:args [{:spelling "", :type "const long *"} {:spelling "", :type "char *"}], :ret {:spelling "char *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :coffi.mem/char]], :symbol "ctime_r", :function/ret [:coffi.mem/pointer :coffi.mem/char], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :ctime_r, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "ctime_r"} {:args [{:spelling "", :type "const long *restrict"} {:spelling "", :type "struct tm *restrict"}], :ret {:spelling "struct tm *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :clong/tm]], :symbol "gmtime_r", :function/ret [:coffi.mem/pointer :clong/tm], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :gmtime_r, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "gmtime_r"} {:args [{:spelling "", :type "const long *restrict"} {:spelling "", :type "struct tm *restrict"}], :ret {:spelling "struct tm *"}, :function/args [[:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :clong/tm]], :symbol "localtime_r", :function/ret [:coffi.mem/pointer :clong/tm], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :localtime_r, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "localtime_r"} {:args [{:spelling "", :type "long"}], :ret {:spelling "long"}, :function/args [:coffi.mem/long], :symbol "posix2time", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :posix2time, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "posix2time"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "tzsetwall", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :tzsetwall, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "tzsetwall"} {:args [{:spelling "", :type "long"}], :ret {:spelling "long"}, :function/args [:coffi.mem/long], :symbol "time2posix", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :time2posix, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "time2posix"} {:args [{:spelling "", :type "struct tm *const"}], :ret {:spelling "long"}, :function/args [[:coffi.mem/pointer :clong/tm]], :symbol "timelocal", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :timelocal, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "timelocal"} {:args [{:spelling "", :type "struct tm *const"}], :ret {:spelling "long"}, :function/args [[:coffi.mem/pointer :clong/tm]], :symbol "timegm", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :timegm, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "timegm"} {:args [{:spelling "__rqtp", :type "const struct timespec *"} {:spelling "__rmtp", :type "struct timespec *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/timespec] [:coffi.mem/pointer :clong/timespec]], :symbol "nanosleep", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :nanosleep, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "nanosleep"} {:args [{:spelling "__clock_id", :type "clockid_t"} {:spelling "__res", :type "struct timespec *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int [:coffi.mem/pointer :clong/timespec]], :symbol "clock_getres", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :clock_getres, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "clock_getres"} {:args [{:spelling "__clock_id", :type "clockid_t"} {:spelling "__tp", :type "struct timespec *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int [:coffi.mem/pointer :clong/timespec]], :symbol "clock_gettime", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :clock_gettime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "clock_gettime"} {:args [{:spelling "__clock_id", :type "clockid_t"}], :ret {:spelling "unsigned long long"}, :function/args [:coffi.mem/int], :symbol "clock_gettime_nsec_np", :function/ret :coffi.mem/long, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :clock_gettime_nsec_np, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "clock_gettime_nsec_np"} {:args [{:spelling "__clock_id", :type "clockid_t"} {:spelling "__tp", :type "const struct timespec *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int [:coffi.mem/pointer :clong/timespec]], :symbol "clock_settime", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :clock_settime, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "clock_settime"} {:args [{:spelling "ts", :type "struct timespec *"} {:spelling "base", :type "int"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/timespec] :coffi.mem/int], :symbol "timespec_get", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :timespec_get, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "timespec_get"} {:args [{:spelling "cef_time", :type "const struct _cef_time_t *"} {:spelling "time", :type "long *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_time_t] [:coffi.mem/pointer :coffi.mem/long]], :symbol "cef_time_to_timet", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_to_timet, :raw-comment "///\n/// Converts cef_time_t to/from time_t. Returns true (1) on success and false\n/// (0) on failure.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_time_to_timet"} {:args [{:spelling "time", :type "long"} {:spelling "cef_time", :type "struct _cef_time_t *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/long [:coffi.mem/pointer :clong/_cef_time_t]], :symbol "cef_time_from_timet", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_from_timet, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_time_from_timet"} {:args [{:spelling "cef_time", :type "const struct _cef_time_t *"} {:spelling "time", :type "double *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_time_t] [:coffi.mem/pointer :coffi.mem/double]], :symbol "cef_time_to_doublet", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_to_doublet, :raw-comment "///\n/// Converts cef_time_t to/from a double which is the number of seconds since\n/// epoch (Jan 1, 1970). Webkit uses this format to represent time. A value of 0\n/// means \"not initialized\". Returns true (1) on success and false (0) on\n/// failure.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_time_to_doublet"} {:args [{:spelling "time", :type "double"} {:spelling "cef_time", :type "struct _cef_time_t *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/double [:coffi.mem/pointer :clong/_cef_time_t]], :symbol "cef_time_from_doublet", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_from_doublet, :raw-comment nil, :kind "CXCursor_FunctionDecl", :spelling "cef_time_from_doublet"} {:args [{:spelling "cef_time", :type "struct _cef_time_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_time_t]], :symbol "cef_time_now", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_now, :raw-comment "///\n/// Retrieve the current system time. Returns true (1) on success and false (0)\n/// on failure.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_time_now"} {:args [], :ret {:spelling "struct _cef_basetime_t"}, :function/args [], :symbol "cef_basetime_now", :function/ret :clong/_cef_basetime_t, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_basetime_now, :raw-comment "///\n/// Retrieve the current system time.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_basetime_now"} {:args [{:spelling "cef_time1", :type "const struct _cef_time_t *"} {:spelling "cef_time2", :type "const struct _cef_time_t *"} {:spelling "delta", :type "long long *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_time_t] [:coffi.mem/pointer :clong/_cef_time_t] [:coffi.mem/pointer :coffi.mem/long]], :symbol "cef_time_delta", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_delta, :raw-comment "///\n/// Retrieve the delta in milliseconds between two time values. Returns true (1)\n/// on success and false (0) on failure.", :kind "CXCursor_FunctionDecl", :spelling "cef_time_delta"} {:args [{:spelling "from", :type "const struct _cef_time_t *"} {:spelling "to", :type "struct _cef_basetime_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_time_t] [:coffi.mem/pointer :clong/_cef_basetime_t]], :symbol "cef_time_to_basetime", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_to_basetime, :raw-comment "///\n/// Converts cef_time_t to cef_basetime_t. Returns true (1) on success and\n/// false (0) on failure.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_time_to_basetime"} {:args [{:spelling "from", :type "const struct _cef_basetime_t"} {:spelling "to", :type "struct _cef_time_t *"}], :ret {:spelling "int"}, :function/args [:clong/_cef_basetime_t [:coffi.mem/pointer :clong/_cef_time_t]], :symbol "cef_time_from_basetime", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_time_from_basetime, :raw-comment "///\n/// Converts cef_basetime_t to cef_time_t. Returns true (1) on success and\n/// false (0) on failure.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_time_from_basetime"} {:args [], :ret {:spelling "struct _cef_value_t *"}, :function/args [], :symbol "cef_value_create", :function/ret [:coffi.mem/pointer :clong/_cef_value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_value_create, :raw-comment "///\n/// Creates a new object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_value_create"} {:args [{:spelling "data", :type "const void *"} {:spelling "data_size", :type "unsigned long"}], :ret {:spelling "struct _cef_binary_value_t *"}, :function/args [:coffi.mem/pointer :coffi.mem/long], :symbol "cef_binary_value_create", :function/ret [:coffi.mem/pointer :clong/_cef_binary_value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_binary_value_create, :raw-comment "///\n/// Creates a new object that is not owned by any other object. The specified\n/// |data| will be copied.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_binary_value_create"} {:args [], :ret {:spelling "struct _cef_dictionary_value_t *"}, :function/args [], :symbol "cef_dictionary_value_create", :function/ret [:coffi.mem/pointer :clong/_cef_dictionary_value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_dictionary_value_create, :raw-comment "///\n/// Creates a new object that is not owned by any other object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_dictionary_value_create"} {:args [], :ret {:spelling "struct _cef_list_value_t *"}, :function/args [], :symbol "cef_list_value_create", :function/ret [:coffi.mem/pointer :clong/_cef_list_value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_list_value_create, :raw-comment "///\n/// Creates a new object that is not owned by any other object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_list_value_create"} {:args [], :ret {:spelling "struct _cef_image_t *"}, :function/args [], :symbol "cef_image_create", :function/ret [:coffi.mem/pointer :clong/_cef_image_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_image_create, :raw-comment "///\n/// Create a new cef_image_t. It will initially be NULL. Use the Add*()\n/// functions to add representations at different scale factors.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_image_create"} {:args [{:spelling "fileName", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "struct _cef_stream_reader_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_stream_reader_create_for_file", :function/ret [:coffi.mem/pointer :clong/_cef_stream_reader_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_stream_reader_create_for_file, :raw-comment "///\n/// Create a new cef_stream_reader_t object from a file.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_stream_reader_create_for_file"} {:args [{:spelling "data", :type "void *"} {:spelling "size", :type "unsigned long"}], :ret {:spelling "struct _cef_stream_reader_t *"}, :function/args [:coffi.mem/pointer :coffi.mem/long], :symbol "cef_stream_reader_create_for_data", :function/ret [:coffi.mem/pointer :clong/_cef_stream_reader_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_stream_reader_create_for_data, :raw-comment "///\n/// Create a new cef_stream_reader_t object from data.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_stream_reader_create_for_data"} {:args [{:spelling "handler", :type "struct _cef_read_handler_t *"}], :ret {:spelling "struct _cef_stream_reader_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_read_handler_t]], :symbol "cef_stream_reader_create_for_handler", :function/ret [:coffi.mem/pointer :clong/_cef_stream_reader_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_stream_reader_create_for_handler, :raw-comment "///\n/// Create a new cef_stream_reader_t object from a custom handler.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_stream_reader_create_for_handler"} {:args [{:spelling "fileName", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "struct _cef_stream_writer_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_stream_writer_create_for_file", :function/ret [:coffi.mem/pointer :clong/_cef_stream_writer_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_stream_writer_create_for_file, :raw-comment "///\n/// Create a new cef_stream_writer_t object for a file.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_stream_writer_create_for_file"} {:args [{:spelling "handler", :type "struct _cef_write_handler_t *"}], :ret {:spelling "struct _cef_stream_writer_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_write_handler_t]], :symbol "cef_stream_writer_create_for_handler", :function/ret [:coffi.mem/pointer :clong/_cef_stream_writer_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_stream_writer_create_for_handler, :raw-comment "///\n/// Create a new cef_stream_writer_t object for a custom handler.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_stream_writer_create_for_handler"} {:args [], :ret {:spelling "struct _cef_drag_data_t *"}, :function/args [], :symbol "cef_drag_data_create", :function/ret [:coffi.mem/pointer :clong/_cef_drag_data_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_drag_data_create, :raw-comment "///\n/// Create a new cef_drag_data_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_drag_data_create"} {:args [{:spelling "name", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "struct _cef_process_message_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_process_message_create", :function/ret [:coffi.mem/pointer :clong/_cef_process_message_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_process_message_create, :raw-comment "///\n/// Create a new cef_process_message_t object with the specified name.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_process_message_create"} {:args [], :ret {:spelling "struct _cef_request_t *"}, :function/args [], :symbol "cef_request_create", :function/ret [:coffi.mem/pointer :clong/_cef_request_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_request_create, :raw-comment "///\n/// Create a new cef_request_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_request_create"} {:args [], :ret {:spelling "struct _cef_post_data_t *"}, :function/args [], :symbol "cef_post_data_create", :function/ret [:coffi.mem/pointer :clong/_cef_post_data_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_post_data_create, :raw-comment "///\n/// Create a new cef_post_data_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_post_data_create"} {:args [], :ret {:spelling "struct _cef_post_data_element_t *"}, :function/args [], :symbol "cef_post_data_element_create", :function/ret [:coffi.mem/pointer :clong/_cef_post_data_element_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_post_data_element_create, :raw-comment "///\n/// Create a new cef_post_data_element_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_post_data_element_create"} {:args [{:spelling "callback", :type "struct _cef_completion_callback_t *"}], :ret {:spelling "struct _cef_cookie_manager_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_completion_callback_t]], :symbol "cef_cookie_manager_get_global_manager", :function/ret [:coffi.mem/pointer :clong/_cef_cookie_manager_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_cookie_manager_get_global_manager, :raw-comment "///\n/// Returns the global cookie manager. By default data will be stored at\n/// cef_settings_t.cache_path if specified or in memory otherwise. If |callback|\n/// is non-NULL it will be executed asnychronously on the UI thread after the\n/// manager's storage has been initialized. Using this function is equivalent to\n/// calling cef_request_context_t::cef_request_context_get_global_context()->Get\n/// DefaultCookieManager().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_cookie_manager_get_global_manager"} {:args [{:spelling "callback", :type "struct _cef_completion_callback_t *"}], :ret {:spelling "struct _cef_media_router_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_completion_callback_t]], :symbol "cef_media_router_get_global", :function/ret [:coffi.mem/pointer :clong/_cef_media_router_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_media_router_get_global, :raw-comment "///\n/// Returns the MediaRouter object associated with the global request context.\n/// If |callback| is non-NULL it will be executed asnychronously on the UI\n/// thread after the manager's storage has been initialized. Equivalent to\n/// calling cef_request_context_t::cef_request_context_get_global_context()->get\n/// _media_router().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_media_router_get_global"} {:args [], :ret {:spelling "struct _cef_preference_manager_t *"}, :function/args [], :symbol "cef_preference_manager_get_global", :function/ret [:coffi.mem/pointer :clong/_cef_preference_manager_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_preference_manager_get_global, :raw-comment "///\n/// Returns the global preference manager object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_preference_manager_get_global"} {:args [], :ret {:spelling "struct _cef_request_context_t *"}, :function/args [], :symbol "cef_request_context_get_global_context", :function/ret [:coffi.mem/pointer :clong/_cef_request_context_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_request_context_get_global_context, :raw-comment "///\n/// Returns the global context object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_request_context_get_global_context"} {:args [{:spelling "settings", :type "const struct _cef_request_context_settings_t *"} {:spelling "handler", :type "struct _cef_request_context_handler_t *"}], :ret {:spelling "struct _cef_request_context_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_request_context_settings_t] [:coffi.mem/pointer :clong/_cef_request_context_handler_t]], :symbol "cef_request_context_create_context", :function/ret [:coffi.mem/pointer :clong/_cef_request_context_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_request_context_create_context, :raw-comment "///\n/// Creates a new context object with the specified |settings| and optional\n/// |handler|.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_request_context_create_context"} {:args [{:spelling "other", :type "struct _cef_request_context_t *"} {:spelling "handler", :type "struct _cef_request_context_handler_t *"}], :ret {:spelling "struct _cef_request_context_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_request_context_handler_t]], :symbol "cef_create_context_shared", :function/ret [:coffi.mem/pointer :clong/_cef_request_context_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_create_context_shared, :raw-comment "///\n/// Creates a new context object that shares storage with |other| and uses an\n/// optional |handler|.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_create_context_shared"} {:args [{:spelling "windowInfo", :type "const struct _cef_window_info_t *"} {:spelling "client", :type "struct _cef_client_t *"} {:spelling "url", :type "const struct _cef_string_utf16_t *"} {:spelling "settings", :type "const struct _cef_browser_settings_t *"} {:spelling "extra_info", :type "struct _cef_dictionary_value_t *"} {:spelling "request_context", :type "struct _cef_request_context_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_window_info_t] [:coffi.mem/pointer :clong/_cef_client_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_browser_settings_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_request_context_t]], :symbol "cef_browser_host_create_browser", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_browser_host_create_browser, :raw-comment "///\n/// Create a new browser using the window parameters specified by |windowInfo|.\n/// All values will be copied internally and the actual window (if any) will be\n/// created on the UI thread. If |request_context| is NULL the global request\n/// context will be used. This function can be called on any browser process\n/// thread and will not block. The optional |extra_info| parameter provides an\n/// opportunity to specify extra information specific to the created browser\n/// that will be passed to cef_render_process_handler_t::on_browser_created() in\n/// the render process.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_browser_host_create_browser"} {:args [{:spelling "windowInfo", :type "const struct _cef_window_info_t *"} {:spelling "client", :type "struct _cef_client_t *"} {:spelling "url", :type "const struct _cef_string_utf16_t *"} {:spelling "settings", :type "const struct _cef_browser_settings_t *"} {:spelling "extra_info", :type "struct _cef_dictionary_value_t *"} {:spelling "request_context", :type "struct _cef_request_context_t *"}], :ret {:spelling "struct _cef_browser_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_window_info_t] [:coffi.mem/pointer :clong/_cef_client_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_browser_settings_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_request_context_t]], :symbol "cef_browser_host_create_browser_sync", :function/ret [:coffi.mem/pointer :clong/_cef_browser_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_browser_host_create_browser_sync, :raw-comment "///\n/// Create a new browser using the window parameters specified by |windowInfo|.\n/// If |request_context| is NULL the global request context will be used. This\n/// function can only be called on the browser process UI thread. The optional\n/// |extra_info| parameter provides an opportunity to specify extra information\n/// specific to the created browser that will be passed to\n/// cef_render_process_handler_t::on_browser_created() in the render process.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_browser_host_create_browser_sync"} {:args [{:spelling "delegate", :type "struct _cef_menu_model_delegate_t *"}], :ret {:spelling "struct _cef_menu_model_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t]], :symbol "cef_menu_model_create", :function/ret [:coffi.mem/pointer :clong/_cef_menu_model_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_menu_model_create, :raw-comment "///\n/// Create a new MenuModel with the specified |delegate|.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_menu_model_create"} {:args [], :ret {:spelling "struct _cef_print_settings_t *"}, :function/args [], :symbol "cef_print_settings_create", :function/ret [:coffi.mem/pointer :clong/_cef_print_settings_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_print_settings_create, :raw-comment "///\n/// Create a new cef_print_settings_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_print_settings_create"} {:args [], :ret {:spelling "struct _cef_response_t *"}, :function/args [], :symbol "cef_response_create", :function/ret [:coffi.mem/pointer :clong/_cef_response_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_response_create, :raw-comment "///\n/// Create a new cef_response_t object.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_response_create"} {:args [{:spelling "status", :type "cef_cert_status_t"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int], :symbol "cef_is_cert_status_error", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_is_cert_status_error, :raw-comment "///\n/// Returns true (1) if the certificate status represents an error.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_is_cert_status_error"} {:args [], :ret {:spelling "struct _cef_command_line_t *"}, :function/args [], :symbol "cef_command_line_create", :function/ret [:coffi.mem/pointer :clong/_cef_command_line_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_command_line_create, :raw-comment "///\n/// Create a new cef_command_line_t instance.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_command_line_create"} {:args [], :ret {:spelling "struct _cef_command_line_t *"}, :function/args [], :symbol "cef_command_line_get_global", :function/ret [:coffi.mem/pointer :clong/_cef_command_line_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_command_line_get_global, :raw-comment "///\n/// Returns the singleton global cef_command_line_t object. The returned object\n/// will be read-only.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_command_line_get_global"} {:args [], :ret {:spelling "struct _cef_task_runner_t *"}, :function/args [], :symbol "cef_task_runner_get_for_current_thread", :function/ret [:coffi.mem/pointer :clong/_cef_task_runner_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_task_runner_get_for_current_thread, :raw-comment "///\n/// Returns the task runner for the current thread. Only CEF threads will have\n/// task runners. An NULL reference will be returned if this function is called\n/// on an invalid thread.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_task_runner_get_for_current_thread"} {:args [{:spelling "threadId", :type "cef_thread_id_t"}], :ret {:spelling "struct _cef_task_runner_t *"}, :function/args [:coffi.mem/int], :symbol "cef_task_runner_get_for_thread", :function/ret [:coffi.mem/pointer :clong/_cef_task_runner_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_task_runner_get_for_thread, :raw-comment "///\n/// Returns the task runner for the specified CEF thread.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_task_runner_get_for_thread"} {:args [{:spelling "threadId", :type "cef_thread_id_t"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int], :symbol "cef_currently_on", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_currently_on, :raw-comment "///\n/// Returns true (1) if called on the specified thread. Equivalent to using\n/// cef_task_runner_t::GetForThread(threadId)->belongs_to_current_thread().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_currently_on"} {:args [{:spelling "threadId", :type "cef_thread_id_t"} {:spelling "task", :type "struct _cef_task_t *"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int [:coffi.mem/pointer :clong/_cef_task_t]], :symbol "cef_post_task", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_post_task, :raw-comment "///\n/// Post a task for execution on the specified thread. Equivalent to using\n/// cef_task_runner_t::GetForThread(threadId)->PostTask(task).\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_post_task"} {:args [{:spelling "threadId", :type "cef_thread_id_t"} {:spelling "task", :type "struct _cef_task_t *"} {:spelling "delay_ms", :type "long long"}], :ret {:spelling "int"}, :function/args [:coffi.mem/int [:coffi.mem/pointer :clong/_cef_task_t] :coffi.mem/long], :symbol "cef_post_delayed_task", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_post_delayed_task, :raw-comment "///\n/// Post a task for delayed execution on the specified thread. Equivalent to\n/// using cef_task_runner_t::GetForThread(threadId)->PostDelayedTask(task,\n/// delay_ms).\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_post_delayed_task"} {:args [], :ret {:spelling "struct _cef_v8context_t *"}, :function/args [], :symbol "cef_v8context_get_current_context", :function/ret [:coffi.mem/pointer :clong/_cef_v8context_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8context_get_current_context, :raw-comment "///\n/// Returns the current (top) context object in the V8 context stack.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8context_get_current_context"} {:args [], :ret {:spelling "struct _cef_v8context_t *"}, :function/args [], :symbol "cef_v8context_get_entered_context", :function/ret [:coffi.mem/pointer :clong/_cef_v8context_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8context_get_entered_context, :raw-comment "///\n/// Returns the entered (bottom) context object in the V8 context stack.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8context_get_entered_context"} {:args [], :ret {:spelling "int"}, :function/args [], :symbol "cef_v8context_in_context", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8context_in_context, :raw-comment "///\n/// Returns true (1) if V8 is currently inside a context.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8context_in_context"} {:args [], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [], :symbol "cef_v8value_create_undefined", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_undefined, :raw-comment "///\n/// Create a new cef_v8value_t object of type undefined.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_undefined"} {:args [], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [], :symbol "cef_v8value_create_null", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_null, :raw-comment "///\n/// Create a new cef_v8value_t object of type null.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_null"} {:args [{:spelling "value", :type "int"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/int], :symbol "cef_v8value_create_bool", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_bool, :raw-comment "///\n/// Create a new cef_v8value_t object of type bool.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_bool"} {:args [{:spelling "value", :type "int"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/int], :symbol "cef_v8value_create_int", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_int, :raw-comment "///\n/// Create a new cef_v8value_t object of type int.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_int"} {:args [{:spelling "value", :type "unsigned int"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/int], :symbol "cef_v8value_create_uint", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_uint, :raw-comment "///\n/// Create a new cef_v8value_t object of type unsigned int.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_uint"} {:args [{:spelling "value", :type "double"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/double], :symbol "cef_v8value_create_double", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_double, :raw-comment "///\n/// Create a new cef_v8value_t object of type double.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_double"} {:args [{:spelling "date", :type "struct _cef_basetime_t"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:clong/_cef_basetime_t], :symbol "cef_v8value_create_date", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_date, :raw-comment "///\n/// Create a new cef_v8value_t object of type Date. This function should only be\n/// called from within the scope of a cef_render_process_handler_t,\n/// cef_v8handler_t or cef_v8accessor_t callback, or in combination with calling\n/// enter() and exit() on a stored cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_date"} {:args [{:spelling "value", :type "const struct _cef_string_utf16_t *"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t]], :symbol "cef_v8value_create_string", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_string, :raw-comment "///\n/// Create a new cef_v8value_t object of type string.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_string"} {:args [{:spelling "accessor", :type "struct _cef_v8accessor_t *"} {:spelling "interceptor", :type "struct _cef_v8interceptor_t *"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_v8accessor_t] [:coffi.mem/pointer :clong/_cef_v8interceptor_t]], :symbol "cef_v8value_create_object", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_object, :raw-comment "///\n/// Create a new cef_v8value_t object of type object with optional accessor\n/// and/or interceptor. This function should only be called from within the\n/// scope of a cef_render_process_handler_t, cef_v8handler_t or cef_v8accessor_t\n/// callback, or in combination with calling enter() and exit() on a stored\n/// cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_object"} {:args [{:spelling "length", :type "int"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/int], :symbol "cef_v8value_create_array", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_array, :raw-comment "///\n/// Create a new cef_v8value_t object of type array with the specified |length|.\n/// If |length| is negative the returned array will have length 0. This function\n/// should only be called from within the scope of a\n/// cef_render_process_handler_t, cef_v8handler_t or cef_v8accessor_t callback,\n/// or in combination with calling enter() and exit() on a stored\n/// cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_array"} {:args [{:spelling "buffer", :type "void *"} {:spelling "length", :type "unsigned long"} {:spelling "release_callback", :type "struct _cef_v8array_buffer_release_callback_t *"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [:coffi.mem/pointer :coffi.mem/long [:coffi.mem/pointer :clong/_cef_v8array_buffer_release_callback_t]], :symbol "cef_v8value_create_array_buffer", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_array_buffer, :raw-comment "///\n/// Create a new cef_v8value_t object of type ArrayBuffer which wraps the\n/// provided |buffer| of size |length| bytes. The ArrayBuffer is externalized,\n/// meaning that it does not own |buffer|. The caller is responsible for freeing\n/// |buffer| when requested via a call to\n/// cef_v8array_buffer_release_callback_t::ReleaseBuffer. This function should\n/// only be called from within the scope of a cef_render_process_handler_t,\n/// cef_v8handler_t or cef_v8accessor_t callback, or in combination with calling\n/// enter() and exit() on a stored cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_array_buffer"} {:args [{:spelling "name", :type "const struct _cef_string_utf16_t *"} {:spelling "handler", :type "struct _cef_v8handler_t *"}], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8handler_t]], :symbol "cef_v8value_create_function", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_function, :raw-comment "///\n/// Create a new cef_v8value_t object of type function. This function should\n/// only be called from within the scope of a cef_render_process_handler_t,\n/// cef_v8handler_t or cef_v8accessor_t callback, or in combination with calling\n/// enter() and exit() on a stored cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_function"} {:args [], :ret {:spelling "struct _cef_v8value_t *"}, :function/args [], :symbol "cef_v8value_create_promise", :function/ret [:coffi.mem/pointer :clong/_cef_v8value_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8value_create_promise, :raw-comment "///\n/// Create a new cef_v8value_t object of type Promise. This function should only\n/// be called from within the scope of a cef_render_process_handler_t,\n/// cef_v8handler_t or cef_v8accessor_t callback, or in combination with calling\n/// enter() and exit() on a stored cef_v8context_t reference.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8value_create_promise"} {:args [{:spelling "frame_limit", :type "int"}], :ret {:spelling "struct _cef_v8stack_trace_t *"}, :function/args [:coffi.mem/int], :symbol "cef_v8stack_trace_get_current", :function/ret [:coffi.mem/pointer :clong/_cef_v8stack_trace_t], :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_v8stack_trace_get_current, :raw-comment "///\n/// Returns the stack trace for the currently active context. |frame_limit| is\n/// the maximum number of frames that will be captured.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_v8stack_trace_get_current"} {:args [{:spelling "extension_name", :type "const struct _cef_string_utf16_t *"} {:spelling "javascript_code", :type "const struct _cef_string_utf16_t *"} {:spelling "handler", :type "struct _cef_v8handler_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8handler_t]], :symbol "cef_register_extension", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_register_extension, :raw-comment "///\n/// Register a new V8 extension with the specified JavaScript extension code and\n/// handler. Functions implemented by the handler are prototyped using the\n/// keyword 'native'. The calling of a native function is restricted to the\n/// scope in which the prototype of the native function is defined. This\n/// function may only be called on the render process main thread.\n///\n/// Example JavaScript extension code: <pre>\n///   // create the 'example' global object if it doesn't already exist.\n///   if (!example)\n///     example = {};\n///   // create the 'example.test' global object if it doesn't already exist.\n///   if (!example.test)\n///     example.test = {};\n///   (function() {\n///     // Define the function 'example.test.myfunction'.\n///     example.test.myfunction = function() {\n///       // Call CefV8Handler::Execute() with the function name 'MyFunction'\n///       // and no arguments.\n///       native function MyFunction();\n///       return MyFunction();\n///     };\n///     // Define the getter function for parameter 'example.test.myparam'.\n///     example.test.__defineGetter__('myparam', function() {\n///       // Call CefV8Handler::Execute() with the function name 'GetMyParam'\n///       // and no arguments.\n///       native function GetMyParam();\n///       return GetMyParam();\n///     });\n///     // Define the setter function for parameter 'example.test.myparam'.\n///     example.test.__defineSetter__('myparam', function(b) {\n///       // Call CefV8Handler::Execute() with the function name 'SetMyParam'\n///       // and a single argument.\n///       native function SetMyParam();\n///       if(b) SetMyParam(b);\n///     });\n///\n///     // Extension definitions can also contain normal JavaScript variables\n///     // and functions.\n///     var myint = 0;\n///     example.test.increment = function() {\n///       myint += 1;\n///       return myint;\n///     };\n///   })();\n/// </pre>\n///\n/// Example usage in the page: <pre>\n///   // Call the function.\n///   example.test.myfunction();\n///   // Set the parameter.\n///   example.test.myparam = value;\n///   // Get the parameter.\n///   value = example.test.myparam;\n///   // Call another function.\n///   example.test.increment();\n/// </pre>\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_register_extension"} {:args [{:spelling "scheme_name", :type "const struct _cef_string_utf16_t *"} {:spelling "domain_name", :type "const struct _cef_string_utf16_t *"} {:spelling "factory", :type "struct _cef_scheme_handler_factory_t *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_scheme_handler_factory_t]], :symbol "cef_register_scheme_handler_factory", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_register_scheme_handler_factory, :raw-comment "///\n/// Register a scheme handler factory with the global request context. An NULL\n/// |domain_name| value for a standard scheme will cause the factory to match\n/// all domain names. The |domain_name| value will be ignored for non-standard\n/// schemes. If |scheme_name| is a built-in scheme and no handler is returned by\n/// |factory| then the built-in scheme handler factory will be called. If\n/// |scheme_name| is a custom scheme then you must also implement the\n/// cef_app_t::on_register_custom_schemes() function in all processes. This\n/// function may be called multiple times to change or remove the factory that\n/// matches the specified |scheme_name| and optional |domain_name|. Returns\n/// false (0) if an error occurs. This function may be called on any thread in\n/// the browser process. Using this function is equivalent to calling cef_reques\n/// t_context_t::cef_request_context_get_global_context()->register_scheme_handl\n/// er_factory().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_register_scheme_handler_factory"} {:args [], :ret {:spelling "int"}, :function/args [], :symbol "cef_clear_scheme_handler_factories", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_clear_scheme_handler_factories, :raw-comment "///\n/// Clear all scheme handler factories registered with the global request\n/// context. Returns false (0) on error. This function may be called on any\n/// thread in the browser process. Using this function is equivalent to calling\n/// cef_request_context_t::cef_request_context_get_global_context()->clear_schem\n/// e_handler_factories().\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_clear_scheme_handler_factories"} {:args [{:spelling "args", :type "const struct _cef_main_args_t *"} {:spelling "application", :type "struct _cef_app_t *"} {:spelling "windows_sandbox_info", :type "void *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_main_args_t] [:coffi.mem/pointer :clong/_cef_app_t] :coffi.mem/pointer], :symbol "cef_execute_process", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_execute_process, :raw-comment "///\n/// This function should be called from the application entry point function to\n/// execute a secondary process. It can be used to run secondary processes from\n/// the browser client executable (default behavior) or from a separate\n/// executable specified by the cef_settings_t.browser_subprocess_path value. If\n/// called for the browser process (identified by no \"type\" command-line value)\n/// it will return immediately with a value of -1. If called for a recognized\n/// secondary process it will block until the process should exit and then\n/// return the process exit code. The |application| parameter may be NULL. The\n/// |windows_sandbox_info| parameter is only used on Windows and may be NULL\n/// (see cef_sandbox_win.h for details).\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_execute_process"} {:args [{:spelling "args", :type "const struct _cef_main_args_t *"} {:spelling "settings", :type "const struct _cef_settings_t *"} {:spelling "application", :type "struct _cef_app_t *"} {:spelling "windows_sandbox_info", :type "void *"}], :ret {:spelling "int"}, :function/args [[:coffi.mem/pointer :clong/_cef_main_args_t] [:coffi.mem/pointer :clong/_cef_settings_t] [:coffi.mem/pointer :clong/_cef_app_t] :coffi.mem/pointer], :symbol "cef_initialize", :function/ret :coffi.mem/int, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_initialize, :raw-comment "///\n/// This function should be called on the main application thread to initialize\n/// the CEF browser process. The |application| parameter may be NULL. A return\n/// value of true (1) indicates that it succeeded and false (0) indicates that\n/// it failed. The |windows_sandbox_info| parameter is only used on Windows and\n/// may be NULL (see cef_sandbox_win.h for details).\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_initialize"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "cef_shutdown", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_shutdown, :raw-comment "///\n/// This function should be called on the main application thread to shut down\n/// the CEF browser process before the application exits.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_shutdown"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "cef_do_message_loop_work", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_do_message_loop_work, :raw-comment "///\n/// Perform a single iteration of CEF message loop processing. This function is\n/// provided for cases where the CEF message loop must be integrated into an\n/// existing application message loop. Use of this function is not recommended\n/// for most users; use either the cef_run_message_loop() function or\n/// cef_settings_t.multi_threaded_message_loop if possible. When using this\n/// function care must be taken to balance performance against excessive CPU\n/// usage. It is recommended to enable the cef_settings_t.external_message_pump\n/// option when using this function so that\n/// cef_browser_process_handler_t::on_schedule_message_pump_work() callbacks can\n/// facilitate the scheduling process. This function should only be called on\n/// the main application thread and only if cef_initialize() is called with a\n/// cef_settings_t.multi_threaded_message_loop value of false (0). This function\n/// will not block.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_do_message_loop_work"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "cef_run_message_loop", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_run_message_loop, :raw-comment "///\n/// Run the CEF message loop. Use this function instead of an application-\n/// provided message loop to get the best balance between performance and CPU\n/// usage. This function should only be called on the main application thread\n/// and only if cef_initialize() is called with a\n/// cef_settings_t.multi_threaded_message_loop value of false (0). This function\n/// will block until a quit message is received by the system.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_run_message_loop"} {:args [], :ret {:spelling "void"}, :function/args [], :symbol "cef_quit_message_loop", :function/ret :coffi.mem/void, :type "CXType_FunctionProto", :linkage "CXLinkage_External", :id :cef_quit_message_loop, :raw-comment "///\n/// Quit the CEF message loop that was started by calling\n/// cef_run_message_loop(). This function should only be called on the main\n/// application thread and only if cef_run_message_loop() was used.\n///", :kind "CXCursor_FunctionDecl", :spelling "cef_quit_message_loop"}), :structs ({:kind "CXCursor_StructDecl", :spelling "struct _cef_size_t", :type "CXType_Record", :id :clong/_cef_size_t, :size-in-bytes 8, :fields [{:type "int", :datatype :coffi.mem/int, :name "width", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "height", :bitfield? false, :calculated-offset 32}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_cond_t", :type "CXType_Record", :id :clong/_opaque_pthread_cond_t, :size-in-bytes 48, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[40]", :datatype [:coffi.mem/array :coffi.mem/char 40], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_key_event_t", :type "CXType_Record", :id :clong/_cef_key_event_t, :size-in-bytes 28, :fields [{:type "cef_key_event_type_t", :datatype :coffi.mem/int, :name "type", :bitfield? false, :calculated-offset 0} {:type "unsigned int", :datatype :coffi.mem/int, :name "modifiers", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "windows_key_code", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "native_key_code", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "is_system_key", :bitfield? false, :calculated-offset 128} {:type "unsigned short", :datatype :coffi.mem/short, :name "character", :bitfield? false, :calculated-offset 160} {:type "unsigned short", :datatype :coffi.mem/short, :name "unmodified_character", :bitfield? false, :calculated-offset 176} {:type "int", :datatype :coffi.mem/int, :name "focus_on_editable_field", :bitfield? false, :calculated-offset 192}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_t", :type "CXType_Record", :id :clong/_opaque_pthread_t, :size-in-bytes 8192, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "struct __darwin_pthread_handler_rec *", :datatype [:coffi.mem/pointer :clong/__darwin_pthread_handler_rec], :name "__cleanup_stack", :bitfield? false, :calculated-offset 64} {:type "char[8176]", :datatype [:coffi.mem/array :coffi.mem/char 8176], :name "__opaque", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_audio_parameters_t", :type "CXType_Record", :id :clong/_cef_audio_parameters_t, :size-in-bytes 12, :fields [{:type "cef_channel_layout_t", :datatype :coffi.mem/int, :name "channel_layout", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "sample_rate", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "frames_per_buffer", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_string_wide_t", :type "CXType_Record", :id :clong/_cef_string_wide_t, :size-in-bytes 24, :fields [{:type "int *", :datatype [:coffi.mem/pointer :coffi.mem/int], :name "str", :bitfield? false, :calculated-offset 0} {:type "unsigned long", :datatype :coffi.mem/long, :name "length", :bitfield? false, :calculated-offset 64} {:type "void (*)(int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/void], :name "dtor", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_mutex_t", :type "CXType_Record", :id :clong/_opaque_pthread_mutex_t, :size-in-bytes 64, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[56]", :datatype [:coffi.mem/array :coffi.mem/char 56], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct __darwin_pthread_handler_rec", :type "CXType_Record", :id :clong/__darwin_pthread_handler_rec, :size-in-bytes 24, :fields [{:type "void (*)(void *)", :datatype [:coffi.ffi/fn [:coffi.mem/pointer] :coffi.mem/void], :name "__routine", :bitfield? false, :calculated-offset 0} {:type "void *", :datatype :coffi.mem/pointer, :name "__arg", :bitfield? false, :calculated-offset 64} {:type "struct __darwin_pthread_handler_rec *", :datatype [:coffi.mem/pointer :clong/__darwin_pthread_handler_rec], :name "__next", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_attr_t", :type "CXType_Record", :id :clong/_opaque_pthread_attr_t, :size-in-bytes 64, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[56]", :datatype [:coffi.mem/array :coffi.mem/char 56], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_mouse_event_t", :type "CXType_Record", :id :clong/_cef_mouse_event_t, :size-in-bytes 12, :fields [{:type "int", :datatype :coffi.mem/int, :name "x", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "y", :bitfield? false, :calculated-offset 32} {:type "unsigned int", :datatype :coffi.mem/int, :name "modifiers", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_string_utf16_t", :type "CXType_Record", :id :clong/_cef_string_utf16_t, :size-in-bytes 24, :fields [{:type "unsigned short *", :datatype [:coffi.mem/pointer :coffi.mem/short], :name "str", :bitfield? false, :calculated-offset 0} {:type "unsigned long", :datatype :coffi.mem/long, :name "length", :bitfield? false, :calculated-offset 64} {:type "void (*)(unsigned short *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :coffi.mem/short]] :coffi.mem/void], :name "dtor", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_pdf_print_settings_t", :type "CXType_Record", :id :clong/_cef_pdf_print_settings_t, :size-in-bytes 160, :fields [{:type "int", :datatype :coffi.mem/int, :name "landscape", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "print_background", :bitfield? false, :calculated-offset 32} {:type "double", :datatype :coffi.mem/double, :name "scale", :bitfield? false, :calculated-offset 64} {:type "double", :datatype :coffi.mem/double, :name "paper_width", :bitfield? false, :calculated-offset 128} {:type "double", :datatype :coffi.mem/double, :name "paper_height", :bitfield? false, :calculated-offset 192} {:type "int", :datatype :coffi.mem/int, :name "prefer_css_page_size", :bitfield? false, :calculated-offset 256} {:type "cef_pdf_print_margin_type_t", :datatype :coffi.mem/int, :name "margin_type", :bitfield? false, :calculated-offset 288} {:type "double", :datatype :coffi.mem/double, :name "margin_top", :bitfield? false, :calculated-offset 320} {:type "double", :datatype :coffi.mem/double, :name "margin_right", :bitfield? false, :calculated-offset 384} {:type "double", :datatype :coffi.mem/double, :name "margin_bottom", :bitfield? false, :calculated-offset 448} {:type "double", :datatype :coffi.mem/double, :name "margin_left", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "page_ranges", :bitfield? false, :calculated-offset 576} {:type "int", :datatype :coffi.mem/int, :name "display_header_footer", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "header_template", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "footer_template", :bitfield? false, :calculated-offset 1024} {:type "int", :datatype :coffi.mem/int, :name "generate_tagged_pdf", :bitfield? false, :calculated-offset 1216}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_insets_t", :type "CXType_Record", :id :clong/_cef_insets_t, :size-in-bytes 16, :fields [{:type "int", :datatype :coffi.mem/int, :name "top", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "left", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "bottom", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "right", :bitfield? false, :calculated-offset 96}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_base_scoped_t", :type "CXType_Record", :id :clong/_cef_base_scoped_t, :size-in-bytes 16, :fields [{:type "unsigned long", :datatype :coffi.mem/long, :name "size", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_base_scoped_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_base_scoped_t]] :coffi.mem/void], :name "del", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_popup_features_t", :type "CXType_Record", :id :clong/_cef_popup_features_t, :size-in-bytes 36, :fields [{:type "int", :datatype :coffi.mem/int, :name "x", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "xSet", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "y", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "ySet", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "width", :bitfield? false, :calculated-offset 128} {:type "int", :datatype :coffi.mem/int, :name "widthSet", :bitfield? false, :calculated-offset 160} {:type "int", :datatype :coffi.mem/int, :name "height", :bitfield? false, :calculated-offset 192} {:type "int", :datatype :coffi.mem/int, :name "heightSet", :bitfield? false, :calculated-offset 224} {:type "int", :datatype :coffi.mem/int, :name "isPopup", :bitfield? false, :calculated-offset 256}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_range_t", :type "CXType_Record", :id :clong/_cef_range_t, :size-in-bytes 8, :fields [{:type "unsigned int", :datatype :coffi.mem/int, :name "from", :bitfield? false, :calculated-offset 0} {:type "unsigned int", :datatype :coffi.mem/int, :name "to", :bitfield? false, :calculated-offset 32}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_mutexattr_t", :type "CXType_Record", :id :clong/_opaque_pthread_mutexattr_t, :size-in-bytes 16, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[8]", :datatype [:coffi.mem/array :coffi.mem/char 8], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_request_context_settings_t", :type "CXType_Record", :id :clong/_cef_request_context_settings_t, :size-in-bytes 96, :fields [{:type "unsigned long", :datatype :coffi.mem/long, :name "size", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "cache_path", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "persist_session_cookies", :bitfield? false, :calculated-offset 256} {:type "int", :datatype :coffi.mem/int, :name "persist_user_preferences", :bitfield? false, :calculated-offset 288} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "accept_language_list", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "cookieable_schemes_list", :bitfield? false, :calculated-offset 512} {:type "int", :datatype :coffi.mem/int, :name "cookieable_schemes_exclude_defaults", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_scheme_registrar_t", :type "CXType_Record", :id :clong/_cef_scheme_registrar_t, :size-in-bytes 24, :fields [{:type "struct _cef_base_scoped_t", :datatype :clong/_cef_base_scoped_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_scheme_registrar_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_scheme_registrar_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "add_custom_scheme", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_urlparts_t", :type "CXType_Record", :id :clong/_cef_urlparts_t, :size-in-bytes 240, :fields [{:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "spec", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "scheme", :bitfield? false, :calculated-offset 192} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "username", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "password", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "host", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "port", :bitfield? false, :calculated-offset 960} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "origin", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "path", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "query", :bitfield? false, :calculated-offset 1536} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "fragment", :bitfield? false, :calculated-offset 1728}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_time_t", :type "CXType_Record", :id :clong/_cef_time_t, :size-in-bytes 32, :fields [{:type "int", :datatype :coffi.mem/int, :name "year", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "month", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "day_of_week", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "day_of_month", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "hour", :bitfield? false, :calculated-offset 128} {:type "int", :datatype :coffi.mem/int, :name "minute", :bitfield? false, :calculated-offset 160} {:type "int", :datatype :coffi.mem/int, :name "second", :bitfield? false, :calculated-offset 192} {:type "int", :datatype :coffi.mem/int, :name "millisecond", :bitfield? false, :calculated-offset 224}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_rect_t", :type "CXType_Record", :id :clong/_cef_rect_t, :size-in-bytes 16, :fields [{:type "int", :datatype :coffi.mem/int, :name "x", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "y", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "width", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "height", :bitfield? false, :calculated-offset 96}]} {:kind "CXCursor_StructDecl", :spelling "struct timespec", :type "CXType_Record", :id :clong/timespec, :size-in-bytes 16, :fields [{:type "long", :datatype :coffi.mem/long, :name "tv_sec", :bitfield? false, :calculated-offset 0} {:type "long", :datatype :coffi.mem/long, :name "tv_nsec", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_string_utf8_t", :type "CXType_Record", :id :clong/_cef_string_utf8_t, :size-in-bytes 24, :fields [{:type "char *", :datatype [:coffi.mem/pointer :coffi.mem/char], :name "str", :bitfield? false, :calculated-offset 0} {:type "unsigned long", :datatype :coffi.mem/long, :name "length", :bitfield? false, :calculated-offset 64} {:type "void (*)(char *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :coffi.mem/char]] :coffi.mem/void], :name "dtor", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_main_args_t", :type "CXType_Record", :id :clong/_cef_main_args_t, :size-in-bytes 16, :fields [{:type "int", :datatype :coffi.mem/int, :name "argc", :bitfield? false, :calculated-offset 0} {:type "char **", :datatype [:coffi.mem/pointer [:coffi.mem/pointer :coffi.mem/char]], :name "argv", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_screen_info_t", :type "CXType_Record", :id :clong/_cef_screen_info_t, :size-in-bytes 48, :fields [{:type "float", :datatype :coffi.mem/float, :name "device_scale_factor", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "depth", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "depth_per_component", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "is_monochrome", :bitfield? false, :calculated-offset 96} {:type "struct _cef_rect_t", :datatype :clong/_cef_rect_t, :name "rect", :bitfield? false, :calculated-offset 128} {:type "struct _cef_rect_t", :datatype :clong/_cef_rect_t, :name "available_rect", :bitfield? false, :calculated-offset 256}]} {:kind "CXCursor_StructDecl", :spelling "struct tm", :type "CXType_Record", :id :clong/tm, :size-in-bytes 56, :fields [{:type "int", :datatype :coffi.mem/int, :name "tm_sec", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "tm_min", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "tm_hour", :bitfield? false, :calculated-offset 64} {:type "int", :datatype :coffi.mem/int, :name "tm_mday", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "tm_mon", :bitfield? false, :calculated-offset 128} {:type "int", :datatype :coffi.mem/int, :name "tm_year", :bitfield? false, :calculated-offset 160} {:type "int", :datatype :coffi.mem/int, :name "tm_wday", :bitfield? false, :calculated-offset 192} {:type "int", :datatype :coffi.mem/int, :name "tm_yday", :bitfield? false, :calculated-offset 224} {:type "int", :datatype :coffi.mem/int, :name "tm_isdst", :bitfield? false, :calculated-offset 256} {:type "long", :datatype :coffi.mem/long, :name "tm_gmtoff", :bitfield? false, :calculated-offset 320} {:type "char *", :datatype [:coffi.mem/pointer :coffi.mem/char], :name "tm_zone", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_basetime_t", :type "CXType_Record", :id :clong/_cef_basetime_t, :size-in-bytes 8, :fields [{:type "long long", :datatype :coffi.mem/long, :name "val", :bitfield? false, :calculated-offset 0}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_cookie_t", :type "CXType_Record", :id :clong/_cef_cookie_t, :size-in-bytes 144, :fields [{:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "name", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "value", :bitfield? false, :calculated-offset 192} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "domain", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "path", :bitfield? false, :calculated-offset 576} {:type "int", :datatype :coffi.mem/int, :name "secure", :bitfield? false, :calculated-offset 768} {:type "int", :datatype :coffi.mem/int, :name "httponly", :bitfield? false, :calculated-offset 800} {:type "struct _cef_basetime_t", :datatype :clong/_cef_basetime_t, :name "creation", :bitfield? false, :calculated-offset 832} {:type "struct _cef_basetime_t", :datatype :clong/_cef_basetime_t, :name "last_access", :bitfield? false, :calculated-offset 896} {:type "int", :datatype :coffi.mem/int, :name "has_expires", :bitfield? false, :calculated-offset 960} {:type "struct _cef_basetime_t", :datatype :clong/_cef_basetime_t, :name "expires", :bitfield? false, :calculated-offset 1024} {:type "cef_cookie_same_site_t", :datatype :coffi.mem/int, :name "same_site", :bitfield? false, :calculated-offset 1088} {:type "cef_cookie_priority_t", :datatype :coffi.mem/int, :name "priority", :bitfield? false, :calculated-offset 1120}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_touch_event_t", :type "CXType_Record", :id :clong/_cef_touch_event_t, :size-in-bytes 40, :fields [{:type "int", :datatype :coffi.mem/int, :name "id", :bitfield? false, :calculated-offset 0} {:type "float", :datatype :coffi.mem/float, :name "x", :bitfield? false, :calculated-offset 32} {:type "float", :datatype :coffi.mem/float, :name "y", :bitfield? false, :calculated-offset 64} {:type "float", :datatype :coffi.mem/float, :name "radius_x", :bitfield? false, :calculated-offset 96} {:type "float", :datatype :coffi.mem/float, :name "radius_y", :bitfield? false, :calculated-offset 128} {:type "float", :datatype :coffi.mem/float, :name "rotation_angle", :bitfield? false, :calculated-offset 160} {:type "float", :datatype :coffi.mem/float, :name "pressure", :bitfield? false, :calculated-offset 192} {:type "cef_touch_event_type_t", :datatype :coffi.mem/int, :name "type", :bitfield? false, :calculated-offset 224} {:type "unsigned int", :datatype :coffi.mem/int, :name "modifiers", :bitfield? false, :calculated-offset 256} {:type "cef_pointer_type_t", :datatype :coffi.mem/int, :name "pointer_type", :bitfield? false, :calculated-offset 288}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_window_info_t", :type "CXType_Record", :id :clong/_cef_window_info_t, :size-in-bytes 80, :fields [{:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "window_name", :bitfield? false, :calculated-offset 0} {:type "struct _cef_rect_t", :datatype :clong/_cef_rect_t, :name "bounds", :bitfield? false, :calculated-offset 192} {:type "int", :datatype :coffi.mem/int, :name "hidden", :bitfield? false, :calculated-offset 320} {:type "void *", :datatype :coffi.mem/pointer, :name "parent_view", :bitfield? false, :calculated-offset 384} {:type "int", :datatype :coffi.mem/int, :name "windowless_rendering_enabled", :bitfield? false, :calculated-offset 448} {:type "int", :datatype :coffi.mem/int, :name "shared_texture_enabled", :bitfield? false, :calculated-offset 480} {:type "int", :datatype :coffi.mem/int, :name "external_begin_frame_enabled", :bitfield? false, :calculated-offset 512} {:type "void *", :datatype :coffi.mem/pointer, :name "view", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_preference_registrar_t", :type "CXType_Record", :id :clong/_cef_preference_registrar_t, :size-in-bytes 24, :fields [{:type "struct _cef_base_scoped_t", :datatype :clong/_cef_base_scoped_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_preference_registrar_t *, const struct _cef_string_utf16_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_registrar_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "add_preference", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_sink_device_info_t", :type "CXType_Record", :id :clong/_cef_media_sink_device_info_t, :size-in-bytes 56, :fields [{:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "ip_address", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "port", :bitfield? false, :calculated-offset 192} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "model_name", :bitfield? false, :calculated-offset 256}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_point_t", :type "CXType_Record", :id :clong/_cef_point_t, :size-in-bytes 8, :fields [{:type "int", :datatype :coffi.mem/int, :name "x", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "y", :bitfield? false, :calculated-offset 32}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_touch_handle_state_t", :type "CXType_Record", :id :clong/_cef_touch_handle_state_t, :size-in-bytes 36, :fields [{:type "int", :datatype :coffi.mem/int, :name "touch_handle_id", :bitfield? false, :calculated-offset 0} {:type "unsigned int", :datatype :coffi.mem/int, :name "flags", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "enabled", :bitfield? false, :calculated-offset 64} {:type "cef_horizontal_alignment_t", :datatype :coffi.mem/int, :name "orientation", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "mirror_vertical", :bitfield? false, :calculated-offset 128} {:type "int", :datatype :coffi.mem/int, :name "mirror_horizontal", :bitfield? false, :calculated-offset 160} {:type "struct _cef_point_t", :datatype :clong/_cef_point_t, :name "origin", :bitfield? false, :calculated-offset 192} {:type "float", :datatype :coffi.mem/float, :name "alpha", :bitfield? false, :calculated-offset 256}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_cursor_info_t", :type "CXType_Record", :id :clong/_cef_cursor_info_t, :size-in-bytes 32, :fields [{:type "struct _cef_point_t", :datatype :clong/_cef_point_t, :name "hotspot", :bitfield? false, :calculated-offset 0} {:type "float", :datatype :coffi.mem/float, :name "image_scale_factor", :bitfield? false, :calculated-offset 64} {:type "void *", :datatype :coffi.mem/pointer, :name "buffer", :bitfield? false, :calculated-offset 128} {:type "struct _cef_size_t", :datatype :clong/_cef_size_t, :name "size", :bitfield? false, :calculated-offset 192}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_once_t", :type "CXType_Record", :id :clong/_opaque_pthread_once_t, :size-in-bytes 16, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[8]", :datatype [:coffi.mem/array :coffi.mem/char 8], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_browser_settings_t", :type "CXType_Record", :id :clong/_cef_browser_settings_t, :size-in-bytes 288, :fields [{:type "unsigned long", :datatype :coffi.mem/long, :name "size", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "windowless_frame_rate", :bitfield? false, :calculated-offset 64} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "standard_font_family", :bitfield? false, :calculated-offset 128} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "fixed_font_family", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "serif_font_family", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "sans_serif_font_family", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "cursive_font_family", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "fantasy_font_family", :bitfield? false, :calculated-offset 1088} {:type "int", :datatype :coffi.mem/int, :name "default_font_size", :bitfield? false, :calculated-offset 1280} {:type "int", :datatype :coffi.mem/int, :name "default_fixed_font_size", :bitfield? false, :calculated-offset 1312} {:type "int", :datatype :coffi.mem/int, :name "minimum_font_size", :bitfield? false, :calculated-offset 1344} {:type "int", :datatype :coffi.mem/int, :name "minimum_logical_font_size", :bitfield? false, :calculated-offset 1376} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "default_encoding", :bitfield? false, :calculated-offset 1408} {:type "cef_state_t", :datatype :coffi.mem/int, :name "remote_fonts", :bitfield? false, :calculated-offset 1600} {:type "cef_state_t", :datatype :coffi.mem/int, :name "javascript", :bitfield? false, :calculated-offset 1632} {:type "cef_state_t", :datatype :coffi.mem/int, :name "javascript_close_windows", :bitfield? false, :calculated-offset 1664} {:type "cef_state_t", :datatype :coffi.mem/int, :name "javascript_access_clipboard", :bitfield? false, :calculated-offset 1696} {:type "cef_state_t", :datatype :coffi.mem/int, :name "javascript_dom_paste", :bitfield? false, :calculated-offset 1728} {:type "cef_state_t", :datatype :coffi.mem/int, :name "image_loading", :bitfield? false, :calculated-offset 1760} {:type "cef_state_t", :datatype :coffi.mem/int, :name "image_shrink_standalone_to_fit", :bitfield? false, :calculated-offset 1792} {:type "cef_state_t", :datatype :coffi.mem/int, :name "text_area_resize", :bitfield? false, :calculated-offset 1824} {:type "cef_state_t", :datatype :coffi.mem/int, :name "tab_to_links", :bitfield? false, :calculated-offset 1856} {:type "cef_state_t", :datatype :coffi.mem/int, :name "local_storage", :bitfield? false, :calculated-offset 1888} {:type "cef_state_t", :datatype :coffi.mem/int, :name "databases", :bitfield? false, :calculated-offset 1920} {:type "cef_state_t", :datatype :coffi.mem/int, :name "webgl", :bitfield? false, :calculated-offset 1952} {:type "unsigned int", :datatype :coffi.mem/int, :name "background_color", :bitfield? false, :calculated-offset 1984} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "accept_language_list", :bitfield? false, :calculated-offset 2048} {:type "cef_state_t", :datatype :coffi.mem/int, :name "chrome_status_bubble", :bitfield? false, :calculated-offset 2240}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_rwlock_t", :type "CXType_Record", :id :clong/_opaque_pthread_rwlock_t, :size-in-bytes 200, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[192]", :datatype [:coffi.mem/array :coffi.mem/char 192], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_settings_t", :type "CXType_Record", :id :clong/_cef_settings_t, :size-in-bytes 416, :fields [{:type "unsigned long", :datatype :coffi.mem/long, :name "size", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "no_sandbox", :bitfield? false, :calculated-offset 64} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "browser_subprocess_path", :bitfield? false, :calculated-offset 128} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "framework_dir_path", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "main_bundle_path", :bitfield? false, :calculated-offset 512} {:type "int", :datatype :coffi.mem/int, :name "chrome_runtime", :bitfield? false, :calculated-offset 704} {:type "int", :datatype :coffi.mem/int, :name "multi_threaded_message_loop", :bitfield? false, :calculated-offset 736} {:type "int", :datatype :coffi.mem/int, :name "external_message_pump", :bitfield? false, :calculated-offset 768} {:type "int", :datatype :coffi.mem/int, :name "windowless_rendering_enabled", :bitfield? false, :calculated-offset 800} {:type "int", :datatype :coffi.mem/int, :name "command_line_args_disabled", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "cache_path", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "root_cache_path", :bitfield? false, :calculated-offset 1088} {:type "int", :datatype :coffi.mem/int, :name "persist_session_cookies", :bitfield? false, :calculated-offset 1280} {:type "int", :datatype :coffi.mem/int, :name "persist_user_preferences", :bitfield? false, :calculated-offset 1312} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "user_agent", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "user_agent_product", :bitfield? false, :calculated-offset 1536} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "locale", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "log_file", :bitfield? false, :calculated-offset 1920} {:type "cef_log_severity_t", :datatype :coffi.mem/int, :name "log_severity", :bitfield? false, :calculated-offset 2112} {:type "cef_log_items_t", :datatype :coffi.mem/int, :name "log_items", :bitfield? false, :calculated-offset 2144} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "javascript_flags", :bitfield? false, :calculated-offset 2176} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "resources_dir_path", :bitfield? false, :calculated-offset 2368} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "locales_dir_path", :bitfield? false, :calculated-offset 2560} {:type "int", :datatype :coffi.mem/int, :name "pack_loading_disabled", :bitfield? false, :calculated-offset 2752} {:type "int", :datatype :coffi.mem/int, :name "remote_debugging_port", :bitfield? false, :calculated-offset 2784} {:type "int", :datatype :coffi.mem/int, :name "uncaught_exception_stack_size", :bitfield? false, :calculated-offset 2816} {:type "unsigned int", :datatype :coffi.mem/int, :name "background_color", :bitfield? false, :calculated-offset 2848} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "accept_language_list", :bitfield? false, :calculated-offset 2880} {:type "struct _cef_string_utf16_t", :datatype :clong/_cef_string_utf16_t, :name "cookieable_schemes_list", :bitfield? false, :calculated-offset 3072} {:type "int", :datatype :coffi.mem/int, :name "cookieable_schemes_exclude_defaults", :bitfield? false, :calculated-offset 3264}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_composition_underline_t", :type "CXType_Record", :id :clong/_cef_composition_underline_t, :size-in-bytes 24, :fields [{:type "struct _cef_range_t", :datatype :clong/_cef_range_t, :name "range", :bitfield? false, :calculated-offset 0} {:type "unsigned int", :datatype :coffi.mem/int, :name "color", :bitfield? false, :calculated-offset 64} {:type "unsigned int", :datatype :coffi.mem/int, :name "background_color", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "thick", :bitfield? false, :calculated-offset 128} {:type "cef_composition_underline_style_t", :datatype :coffi.mem/int, :name "style", :bitfield? false, :calculated-offset 160}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_condattr_t", :type "CXType_Record", :id :clong/_opaque_pthread_condattr_t, :size-in-bytes 16, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[8]", :datatype [:coffi.mem/array :coffi.mem/char 8], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_base_ref_counted_t", :type "CXType_Record", :id :clong/_cef_base_ref_counted_t, :size-in-bytes 40, :fields [{:type "unsigned long", :datatype :coffi.mem/long, :name "size", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_base_ref_counted_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_base_ref_counted_t]] :coffi.mem/void], :name "add_ref", :bitfield? false, :calculated-offset 64} {:type "int (*)(struct _cef_base_ref_counted_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_base_ref_counted_t]] :coffi.mem/int], :name "release", :bitfield? false, :calculated-offset 128} {:type "int (*)(struct _cef_base_ref_counted_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_base_ref_counted_t]] :coffi.mem/int], :name "has_one_ref", :bitfield? false, :calculated-offset 192} {:type "int (*)(struct _cef_base_ref_counted_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_base_ref_counted_t]] :coffi.mem/int], :name "has_at_least_one_ref", :bitfield? false, :calculated-offset 256}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_focus_handler_t", :type "CXType_Record", :id :clong/_cef_focus_handler_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_focus_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_focus_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "on_take_focus", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_focus_handler_t *, struct _cef_browser_t *, cef_focus_source_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_focus_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/int], :name "on_set_focus", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_focus_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_focus_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_got_focus", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_dialog_handler_t", :type "CXType_Record", :id :clong/_cef_dialog_handler_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_dialog_handler_t *, struct _cef_browser_t *, cef_file_dialog_mode_t, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_string_list_t *, struct _cef_file_dialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dialog_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_list_t] [:coffi.mem/pointer :clong/_cef_file_dialog_callback_t]] :coffi.mem/int], :name "on_file_dialog", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_display_handler_t", :type "CXType_Record", :id :clong/_cef_display_handler_t, :size-in-bytes 128, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_address_change", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_title_change", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "on_favicon_urlchange", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "on_fullscreen_mode_change", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "on_tooltip", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_status_message", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, cef_log_severity_t, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "on_console_message", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, const struct _cef_size_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_size_t]] :coffi.mem/int], :name "on_auto_resize", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/double] :coffi.mem/void], :name "on_loading_progress_change", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, void *, cef_cursor_type_t, const struct _cef_cursor_info_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/pointer :coffi.mem/int [:coffi.mem/pointer :clong/_cef_cursor_info_t]] :coffi.mem/int], :name "on_cursor_change", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_display_handler_t *, struct _cef_browser_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_display_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "on_media_access_change", :bitfield? false, :calculated-offset 960}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resolve_callback_t", :type "CXType_Record", :id :clong/_cef_resolve_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_resolve_callback_t *, cef_errorcode_t, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resolve_callback_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "on_resolve_completed", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_pdf_print_callback_t", :type "CXType_Record", :id :clong/_cef_pdf_print_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_pdf_print_callback_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_pdf_print_callback_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "on_pdf_print_finished", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_frame_t", :type "CXType_Record", :id :clong/_cef_frame_t, :size-in-bytes 240, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "undo", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "redo", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "cut", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "copy", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "paste", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "del", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "select_all", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "view_source", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_frame_t *, struct _cef_string_visitor_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_visitor_t]] :coffi.mem/void], :name "get_source", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_frame_t *, struct _cef_string_visitor_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_visitor_t]] :coffi.mem/void], :name "get_text", :bitfield? false, :calculated-offset 960} {:type "void (*)(struct _cef_frame_t *, struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/void], :name "load_request", :bitfield? false, :calculated-offset 1024} {:type "void (*)(struct _cef_frame_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "load_url", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_frame_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "execute_java_script", :bitfield? false, :calculated-offset 1152} {:type "int (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/int], :name "is_main", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/int], :name "is_focused", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_string_utf16_t *(*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_name", :bitfield? false, :calculated-offset 1344} {:type "long long (*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/long], :name "get_identifier", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_frame_t *(*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_parent", :bitfield? false, :calculated-offset 1472} {:type "struct _cef_string_utf16_t *(*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_url", :bitfield? false, :calculated-offset 1536} {:type "struct _cef_browser_t *(*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] [:coffi.mem/pointer :clong/_cef_browser_t]], :name "get_browser", :bitfield? false, :calculated-offset 1600} {:type "struct _cef_v8context_t *(*)(struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t]] [:coffi.mem/pointer :clong/_cef_v8context_t]], :name "get_v8context", :bitfield? false, :calculated-offset 1664} {:type "void (*)(struct _cef_frame_t *, struct _cef_domvisitor_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_domvisitor_t]] :coffi.mem/void], :name "visit_dom", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_urlrequest_t *(*)(struct _cef_frame_t *, struct _cef_request_t *, struct _cef_urlrequest_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_urlrequest_client_t]] [:coffi.mem/pointer :clong/_cef_urlrequest_t]], :name "create_urlrequest", :bitfield? false, :calculated-offset 1792} {:type "void (*)(struct _cef_frame_t *, cef_process_id_t, struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_process_message_t]] :coffi.mem/void], :name "send_process_message", :bitfield? false, :calculated-offset 1856}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_context_menu_params_t", :type "CXType_Record", :id :clong/_cef_context_menu_params_t, :size-in-bytes 200, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_xcoord", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_ycoord", :bitfield? false, :calculated-offset 384} {:type "cef_context_menu_type_flags_t (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_type_flags", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_link_url", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_unfiltered_link_url", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_source_url", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "has_image_contents", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_title_text", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_page_url", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_frame_url", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_frame_charset", :bitfield? false, :calculated-offset 960} {:type "cef_context_menu_media_type_t (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_media_type", :bitfield? false, :calculated-offset 1024} {:type "cef_context_menu_media_state_flags_t (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_media_state_flags", :bitfield? false, :calculated-offset 1088} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_selection_text", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_string_utf16_t *(*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_misspelled_word", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_context_menu_params_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/int], :name "get_dictionary_suggestions", :bitfield? false, :calculated-offset 1280} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "is_editable", :bitfield? false, :calculated-offset 1344} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "is_spell_check_enabled", :bitfield? false, :calculated-offset 1408} {:type "cef_context_menu_edit_state_flags_t (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "get_edit_state_flags", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_context_menu_params_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_params_t]] :coffi.mem/int], :name "is_custom_menu", :bitfield? false, :calculated-offset 1536}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_jsdialog_callback_t", :type "CXType_Record", :id :clong/_cef_jsdialog_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_jsdialog_callback_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_jsdialog_callback_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_run_file_dialog_callback_t", :type "CXType_Record", :id :clong/_cef_run_file_dialog_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_run_file_dialog_callback_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_run_file_dialog_callback_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "on_file_dialog_dismissed", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_print_settings_t", :type "CXType_Record", :id :clong/_cef_print_settings_t, :size-in-bytes 216, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_orientation", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "is_landscape", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_print_settings_t *, const struct _cef_size_t *, const struct _cef_rect_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] [:coffi.mem/pointer :clong/_cef_size_t] [:coffi.mem/pointer :clong/_cef_rect_t] :coffi.mem/int] :coffi.mem/void], :name "set_printer_printable_area", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_print_settings_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_device_name", :bitfield? false, :calculated-offset 640} {:type "struct _cef_string_utf16_t *(*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_device_name", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_dpi", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "get_dpi", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_print_settings_t *, unsigned long, const struct _cef_range_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_range_t]] :coffi.mem/void], :name "set_page_ranges", :bitfield? false, :calculated-offset 896} {:type "unsigned long (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/long], :name "get_page_ranges_count", :bitfield? false, :calculated-offset 960} {:type "void (*)(struct _cef_print_settings_t *, unsigned long *, struct _cef_range_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_range_t]] :coffi.mem/void], :name "get_page_ranges", :bitfield? false, :calculated-offset 1024} {:type "void (*)(struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_selection_only", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "is_selection_only", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_collate", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "will_collate", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_print_settings_t *, cef_color_model_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_color_model", :bitfield? false, :calculated-offset 1344} {:type "cef_color_model_t (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "get_color_model", :bitfield? false, :calculated-offset 1408} {:type "void (*)(struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_copies", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "get_copies", :bitfield? false, :calculated-offset 1536} {:type "void (*)(struct _cef_print_settings_t *, cef_duplex_mode_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "set_duplex_mode", :bitfield? false, :calculated-offset 1600} {:type "cef_duplex_mode_t (*)(struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/int], :name "get_duplex_mode", :bitfield? false, :calculated-offset 1664}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_command_handler_t", :type "CXType_Record", :id :clong/_cef_command_handler_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_command_handler_t *, struct _cef_browser_t *, int, cef_window_open_disposition_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "on_chrome_command", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_command_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/int], :name "is_chrome_app_menu_item_visible", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_command_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/int], :name "is_chrome_app_menu_item_enabled", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_command_handler_t *, cef_chrome_page_action_icon_type_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_handler_t] :coffi.mem/int] :coffi.mem/int], :name "is_chrome_page_action_icon_visible", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_command_handler_t *, cef_chrome_toolbar_button_type_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_handler_t] :coffi.mem/int] :coffi.mem/int], :name "is_chrome_toolbar_button_visible", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_client_t", :type "CXType_Record", :id :clong/_cef_client_t, :size-in-bytes 192, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_audio_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_audio_handler_t]], :name "get_audio_handler", :bitfield? false, :calculated-offset 320} {:type "struct _cef_command_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_command_handler_t]], :name "get_command_handler", :bitfield? false, :calculated-offset 384} {:type "struct _cef_context_menu_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_context_menu_handler_t]], :name "get_context_menu_handler", :bitfield? false, :calculated-offset 448} {:type "struct _cef_dialog_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_dialog_handler_t]], :name "get_dialog_handler", :bitfield? false, :calculated-offset 512} {:type "struct _cef_display_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_display_handler_t]], :name "get_display_handler", :bitfield? false, :calculated-offset 576} {:type "struct _cef_download_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_download_handler_t]], :name "get_download_handler", :bitfield? false, :calculated-offset 640} {:type "struct _cef_drag_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_drag_handler_t]], :name "get_drag_handler", :bitfield? false, :calculated-offset 704} {:type "struct _cef_find_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_find_handler_t]], :name "get_find_handler", :bitfield? false, :calculated-offset 768} {:type "struct _cef_focus_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_focus_handler_t]], :name "get_focus_handler", :bitfield? false, :calculated-offset 832} {:type "struct _cef_frame_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_frame_handler_t]], :name "get_frame_handler", :bitfield? false, :calculated-offset 896} {:type "struct _cef_permission_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_permission_handler_t]], :name "get_permission_handler", :bitfield? false, :calculated-offset 960} {:type "struct _cef_jsdialog_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_jsdialog_handler_t]], :name "get_jsdialog_handler", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_keyboard_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_keyboard_handler_t]], :name "get_keyboard_handler", :bitfield? false, :calculated-offset 1088} {:type "struct _cef_life_span_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_life_span_handler_t]], :name "get_life_span_handler", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_load_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_load_handler_t]], :name "get_load_handler", :bitfield? false, :calculated-offset 1216} {:type "struct _cef_print_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_print_handler_t]], :name "get_print_handler", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_render_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_render_handler_t]], :name "get_render_handler", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_request_handler_t *(*)(struct _cef_client_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_request_handler_t]], :name "get_request_handler", :bitfield? false, :calculated-offset 1408} {:type "int (*)(struct _cef_client_t *, struct _cef_browser_t *, struct _cef_frame_t *, cef_process_id_t, struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_client_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_process_message_t]] :coffi.mem/int], :name "on_process_message_received", :bitfield? false, :calculated-offset 1472}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8handler_t", :type "CXType_Record", :id :clong/_cef_v8handler_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8handler_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, unsigned long, struct _cef_v8value_t *const *, struct _cef_v8value_t **, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8handler_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "execute", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resource_handler_t", :type "CXType_Record", :id :clong/_cef_resource_handler_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_resource_handler_t *, struct _cef_request_t *, int *, struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/int], :name "open", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_resource_handler_t *, struct _cef_request_t *, struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/int], :name "process_request", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_resource_handler_t *, struct _cef_response_t *, long long *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] [:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "get_response_headers", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_resource_handler_t *, long long, long long *, struct _cef_resource_skip_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] :coffi.mem/long [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_resource_skip_callback_t]] :coffi.mem/int], :name "skip", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_resource_handler_t *, void *, int, int *, struct _cef_resource_read_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] :coffi.mem/pointer :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_resource_read_callback_t]] :coffi.mem/int], :name "read", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_resource_handler_t *, void *, int, int *, struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t] :coffi.mem/pointer :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/int], :name "read_response", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_resource_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_handler_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_stream_reader_t", :type "CXType_Record", :id :clong/_cef_stream_reader_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "unsigned long (*)(struct _cef_stream_reader_t *, void *, unsigned long, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_reader_t] :coffi.mem/pointer :coffi.mem/long :coffi.mem/long] :coffi.mem/long], :name "read", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_stream_reader_t *, long long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_reader_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "seek", :bitfield? false, :calculated-offset 384} {:type "long long (*)(struct _cef_stream_reader_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_reader_t]] :coffi.mem/long], :name "tell", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_stream_reader_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_reader_t]] :coffi.mem/int], :name "eof", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_stream_reader_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_reader_t]] :coffi.mem/int], :name "may_block", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_permission_prompt_callback_t", :type "CXType_Record", :id :clong/_cef_permission_prompt_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_permission_prompt_callback_t *, cef_permission_request_result_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_permission_prompt_callback_t] :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_navigation_entry_visitor_t", :type "CXType_Record", :id :clong/_cef_navigation_entry_visitor_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_navigation_entry_visitor_t *, struct _cef_navigation_entry_t *, int, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_visitor_t] [:coffi.mem/pointer :clong/_cef_navigation_entry_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "visit", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_print_handler_t", :type "CXType_Record", :id :clong/_cef_print_handler_t, :size-in-bytes 88, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_print_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_print_start", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_print_handler_t *, struct _cef_browser_t *, struct _cef_print_settings_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_print_settings_t] :coffi.mem/int] :coffi.mem/void], :name "on_print_settings", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_print_handler_t *, struct _cef_browser_t *, int, struct _cef_print_dialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_print_dialog_callback_t]] :coffi.mem/int], :name "on_print_dialog", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_print_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_print_job_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_print_job_callback_t]] :coffi.mem/int], :name "on_print_job", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_print_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_print_reset", :bitfield? false, :calculated-offset 576} {:type "struct _cef_size_t (*)(struct _cef_print_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :clong/_cef_size_t], :name "get_pdf_paper_size", :bitfield? false, :calculated-offset 640}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_cookie_visitor_t", :type "CXType_Record", :id :clong/_cef_cookie_visitor_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_cookie_visitor_t *, const struct _cef_cookie_t *, int, int, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_visitor_t] [:coffi.mem/pointer :clong/_cef_cookie_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "visit", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_download_item_t", :type "CXType_Record", :id :clong/_cef_download_item_t, :size-in-bytes 192, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "is_in_progress", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "is_complete", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "is_canceled", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "is_interrupted", :bitfield? false, :calculated-offset 576} {:type "cef_download_interrupt_reason_t (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "get_interrupt_reason", :bitfield? false, :calculated-offset 640} {:type "long long (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/long], :name "get_current_speed", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "get_percent_complete", :bitfield? false, :calculated-offset 768} {:type "long long (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/long], :name "get_total_bytes", :bitfield? false, :calculated-offset 832} {:type "long long (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/long], :name "get_received_bytes", :bitfield? false, :calculated-offset 896} {:type "struct _cef_basetime_t (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :clong/_cef_basetime_t], :name "get_start_time", :bitfield? false, :calculated-offset 960} {:type "struct _cef_basetime_t (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :clong/_cef_basetime_t], :name "get_end_time", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_full_path", :bitfield? false, :calculated-offset 1088} {:type "unsigned int (*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] :coffi.mem/int], :name "get_id", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_url", :bitfield? false, :calculated-offset 1216} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_original_url", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_suggested_file_name", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_content_disposition", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_string_utf16_t *(*)(struct _cef_download_item_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_mime_type", :bitfield? false, :calculated-offset 1472}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_browser_t", :type "CXType_Record", :id :clong/_cef_browser_t, :size-in-bytes 208, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "struct _cef_browser_host_t *(*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] [:coffi.mem/pointer :clong/_cef_browser_host_t]], :name "get_host", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "can_go_back", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "go_back", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "can_go_forward", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "go_forward", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "is_loading", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "reload", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "reload_ignore_cache", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "stop_load", :bitfield? false, :calculated-offset 896} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "get_identifier", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_browser_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 1024} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "is_popup", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "has_document", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_frame_t *(*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_main_frame", :bitfield? false, :calculated-offset 1216} {:type "struct _cef_frame_t *(*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_focused_frame", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_frame_t *(*)(struct _cef_browser_t *, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_frame_byident", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_frame_t *(*)(struct _cef_browser_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_frame", :bitfield? false, :calculated-offset 1408} {:type "unsigned long (*)(struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/long], :name "get_frame_count", :bitfield? false, :calculated-offset 1472} {:type "void (*)(struct _cef_browser_t *, unsigned long *, long long *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer :coffi.mem/long]] :coffi.mem/void], :name "get_frame_identifiers", :bitfield? false, :calculated-offset 1536} {:type "void (*)(struct _cef_browser_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "get_frame_names", :bitfield? false, :calculated-offset 1600}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_download_item_callback_t", :type "CXType_Record", :id :clong/_cef_download_item_callback_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_download_item_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_download_item_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_callback_t]] :coffi.mem/void], :name "pause", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_download_item_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_item_callback_t]] :coffi.mem/void], :name "resume", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8accessor_t", :type "CXType_Record", :id :clong/_cef_v8accessor_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8accessor_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, struct _cef_v8value_t **, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8accessor_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_v8accessor_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, struct _cef_v8value_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8accessor_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resource_bundle_handler_t", :type "CXType_Record", :id :clong/_cef_resource_bundle_handler_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_resource_bundle_handler_t *, int, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_bundle_handler_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_localized_string", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_resource_bundle_handler_t *, int, void **, unsigned long *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_bundle_handler_t] :coffi.mem/int [:coffi.mem/pointer :coffi.mem/pointer] [:coffi.mem/pointer :coffi.mem/long]] :coffi.mem/int], :name "get_data_resource", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_resource_bundle_handler_t *, int, cef_scale_factor_t, void **, unsigned long *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_bundle_handler_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/pointer] [:coffi.mem/pointer :coffi.mem/long]] :coffi.mem/int], :name "get_data_resource_for_scale", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_run_quick_menu_callback_t", :type "CXType_Record", :id :clong/_cef_run_quick_menu_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_run_quick_menu_callback_t *, int, cef_event_flags_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_run_quick_menu_callback_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_run_quick_menu_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_run_quick_menu_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_keyboard_handler_t", :type "CXType_Record", :id :clong/_cef_keyboard_handler_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_keyboard_handler_t *, struct _cef_browser_t *, const struct _cef_key_event_t *, void *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_keyboard_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_key_event_t] :coffi.mem/pointer [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "on_pre_key_event", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_keyboard_handler_t *, struct _cef_browser_t *, const struct _cef_key_event_t *, void *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_keyboard_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_key_event_t] :coffi.mem/pointer] :coffi.mem/int], :name "on_key_event", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_preference_manager_t", :type "CXType_Record", :id :clong/_cef_preference_manager_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_preference_manager_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_preference", :bitfield? false, :calculated-offset 320} {:type "struct _cef_value_t *(*)(struct _cef_preference_manager_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_value_t]], :name "get_preference", :bitfield? false, :calculated-offset 384} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_preference_manager_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_manager_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "get_all_preferences", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_preference_manager_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "can_set_preference", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_preference_manager_t *, const struct _cef_string_utf16_t *, struct _cef_value_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_preference_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_preference", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_request_context_t", :type "CXType_Record", :id :clong/_cef_request_context_t, :size-in-bytes 256, :fields [{:type "struct _cef_preference_manager_t", :datatype :clong/_cef_preference_manager_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_request_context_t *, struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_request_context_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_request_context_t *, struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_request_context_t]] :coffi.mem/int], :name "is_sharing_with", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t]] :coffi.mem/int], :name "is_global", :bitfield? false, :calculated-offset 768} {:type "struct _cef_request_context_handler_t *(*)(struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t]] [:coffi.mem/pointer :clong/_cef_request_context_handler_t]], :name "get_handler", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_cache_path", :bitfield? false, :calculated-offset 896} {:type "struct _cef_cookie_manager_t *(*)(struct _cef_request_context_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] [:coffi.mem/pointer :clong/_cef_cookie_manager_t]], :name "get_cookie_manager", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_scheme_handler_factory_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_scheme_handler_factory_t]] :coffi.mem/int], :name "register_scheme_handler_factory", :bitfield? false, :calculated-offset 1024} {:type "int (*)(struct _cef_request_context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t]] :coffi.mem/int], :name "clear_scheme_handler_factories", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_request_context_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] :coffi.mem/void], :name "clear_certificate_exceptions", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_request_context_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] :coffi.mem/void], :name "clear_http_auth_credentials", :bitfield? false, :calculated-offset 1216} {:type "void (*)(struct _cef_request_context_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] :coffi.mem/void], :name "close_all_connections", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, struct _cef_resolve_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_resolve_callback_t]] :coffi.mem/void], :name "resolve_host", :bitfield? false, :calculated-offset 1344} {:type "void (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, struct _cef_dictionary_value_t *, struct _cef_extension_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_extension_handler_t]] :coffi.mem/void], :name "load_extension", :bitfield? false, :calculated-offset 1408} {:type "int (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "did_load_extension", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_extension", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_request_context_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/int], :name "get_extensions", :bitfield? false, :calculated-offset 1600} {:type "struct _cef_extension_t *(*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_extension_t]], :name "get_extension", :bitfield? false, :calculated-offset 1664} {:type "struct _cef_media_router_t *(*)(struct _cef_request_context_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] [:coffi.mem/pointer :clong/_cef_media_router_t]], :name "get_media_router", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_value_t *(*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, cef_content_setting_types_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_value_t]], :name "get_website_setting", :bitfield? false, :calculated-offset 1792} {:type "void (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, cef_content_setting_types_t, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/void], :name "set_website_setting", :bitfield? false, :calculated-offset 1856} {:type "cef_content_setting_values_t (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, cef_content_setting_types_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "get_content_setting", :bitfield? false, :calculated-offset 1920} {:type "void (*)(struct _cef_request_context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, cef_content_setting_types_t, cef_content_setting_values_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "set_content_setting", :bitfield? false, :calculated-offset 1984}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_run_context_menu_callback_t", :type "CXType_Record", :id :clong/_cef_run_context_menu_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_run_context_menu_callback_t *, int, cef_event_flags_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_run_context_menu_callback_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_run_context_menu_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_run_context_menu_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_response_filter_t", :type "CXType_Record", :id :clong/_cef_response_filter_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_response_filter_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_filter_t]] :coffi.mem/int], :name "init_filter", :bitfield? false, :calculated-offset 320} {:type "cef_response_filter_status_t (*)(struct _cef_response_filter_t *, void *, unsigned long, unsigned long *, void *, unsigned long, unsigned long *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_filter_t] :coffi.mem/pointer :coffi.mem/long [:coffi.mem/pointer :coffi.mem/long] :coffi.mem/pointer :coffi.mem/long [:coffi.mem/pointer :coffi.mem/long]] :coffi.mem/int], :name "filter", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_render_handler_t", :type "CXType_Record", :id :clong/_cef_render_handler_t, :size-in-bytes 176, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_accessibility_handler_t *(*)(struct _cef_render_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t]] [:coffi.mem/pointer :clong/_cef_accessibility_handler_t]], :name "get_accessibility_handler", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, struct _cef_rect_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_rect_t]] :coffi.mem/int], :name "get_root_screen_rect", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, struct _cef_rect_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_rect_t]] :coffi.mem/void], :name "get_view_rect", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, int, int, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_screen_point", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, struct _cef_screen_info_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_screen_info_t]] :coffi.mem/int], :name "get_screen_info", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "on_popup_show", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, const struct _cef_rect_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_rect_t]] :coffi.mem/void], :name "on_popup_size", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, cef_paint_element_type_t, unsigned long, const struct _cef_rect_t *, const void *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/long [:coffi.mem/pointer :clong/_cef_rect_t] :coffi.mem/pointer :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "on_paint", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, cef_paint_element_type_t, unsigned long, const struct _cef_rect_t *, void *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/long [:coffi.mem/pointer :clong/_cef_rect_t] :coffi.mem/pointer] :coffi.mem/void], :name "on_accelerated_paint", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, cef_horizontal_alignment_t, struct _cef_size_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_size_t]] :coffi.mem/void], :name "get_touch_handle_size", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, const struct _cef_touch_handle_state_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_touch_handle_state_t]] :coffi.mem/void], :name "on_touch_handle_state_changed", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, struct _cef_drag_data_t *, cef_drag_operations_mask_t, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_drag_data_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "start_dragging", :bitfield? false, :calculated-offset 1024} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, cef_drag_operations_mask_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "update_drag_cursor", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, double, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/double :coffi.mem/double] :coffi.mem/void], :name "on_scroll_offset_changed", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, const struct _cef_range_t *, unsigned long, const struct _cef_rect_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_range_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_rect_t]] :coffi.mem/void], :name "on_ime_composition_range_changed", :bitfield? false, :calculated-offset 1216} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, const struct _cef_range_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_range_t]] :coffi.mem/void], :name "on_text_selection_changed", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_render_handler_t *, struct _cef_browser_t *, cef_text_input_mode_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "on_virtual_keyboard_requested", :bitfield? false, :calculated-offset 1344}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_read_handler_t", :type "CXType_Record", :id :clong/_cef_read_handler_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "unsigned long (*)(struct _cef_read_handler_t *, void *, unsigned long, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_read_handler_t] :coffi.mem/pointer :coffi.mem/long :coffi.mem/long] :coffi.mem/long], :name "read", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_read_handler_t *, long long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_read_handler_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "seek", :bitfield? false, :calculated-offset 384} {:type "long long (*)(struct _cef_read_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_read_handler_t]] :coffi.mem/long], :name "tell", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_read_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_read_handler_t]] :coffi.mem/int], :name "eof", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_read_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_read_handler_t]] :coffi.mem/int], :name "may_block", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_route_t", :type "CXType_Record", :id :clong/_cef_media_route_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_media_route_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_id", :bitfield? false, :calculated-offset 320} {:type "struct _cef_media_source_t *(*)(struct _cef_media_route_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_t]] [:coffi.mem/pointer :clong/_cef_media_source_t]], :name "get_source", :bitfield? false, :calculated-offset 384} {:type "struct _cef_media_sink_t *(*)(struct _cef_media_route_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_t]] [:coffi.mem/pointer :clong/_cef_media_sink_t]], :name "get_sink", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_media_route_t *, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_t] :coffi.mem/pointer :coffi.mem/long] :coffi.mem/void], :name "send_route_message", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_media_route_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_t]] :coffi.mem/void], :name "terminate", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_binary_value_t", :type "CXType_Record", :id :clong/_cef_binary_value_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "is_owned", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_binary_value_t *, struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t] [:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_binary_value_t *, struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t] [:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "is_equal", :bitfield? false, :calculated-offset 512} {:type "struct _cef_binary_value_t *(*)(struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "copy", :bitfield? false, :calculated-offset 576} {:type "unsigned long (*)(struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/long], :name "get_size", :bitfield? false, :calculated-offset 640} {:type "unsigned long (*)(struct _cef_binary_value_t *, void *, unsigned long, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_binary_value_t] :coffi.mem/pointer :coffi.mem/long :coffi.mem/long] :coffi.mem/long], :name "get_data", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_route_create_callback_t", :type "CXType_Record", :id :clong/_cef_media_route_create_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_media_route_create_callback_t *, cef_media_route_create_result_t, const struct _cef_string_utf16_t *, struct _cef_media_route_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_route_create_callback_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_media_route_t]] :coffi.mem/void], :name "on_media_route_create_finished", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_domnode_t", :type "CXType_Record", :id :clong/_cef_domnode_t, :size-in-bytes 248, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "cef_dom_node_type_t (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "is_text", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "is_element", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "is_editable", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "is_form_control_element", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_form_control_element_type", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_domnode_t *, struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_name", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_value", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_domnode_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_value", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_as_markup", :bitfield? false, :calculated-offset 960} {:type "struct _cef_domdocument_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domdocument_t]], :name "get_document", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_domnode_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_parent", :bitfield? false, :calculated-offset 1088} {:type "struct _cef_domnode_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_previous_sibling", :bitfield? false, :calculated-offset 1152} {:type "struct _cef_domnode_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_next_sibling", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "has_children", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_domnode_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_first_child", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_domnode_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_last_child", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_element_tag_name", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/int], :name "has_element_attributes", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_domnode_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_element_attribute", :bitfield? false, :calculated-offset 1600} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_element_attribute", :bitfield? false, :calculated-offset 1664} {:type "void (*)(struct _cef_domnode_t *, struct _cef_string_map_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_string_map_t]] :coffi.mem/void], :name "get_element_attributes", :bitfield? false, :calculated-offset 1728} {:type "int (*)(struct _cef_domnode_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_element_attribute", :bitfield? false, :calculated-offset 1792} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_element_inner_text", :bitfield? false, :calculated-offset 1856} {:type "struct _cef_rect_t (*)(struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domnode_t]] :clong/_cef_rect_t], :name "get_element_bounds", :bitfield? false, :calculated-offset 1920}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_observer_t", :type "CXType_Record", :id :clong/_cef_media_observer_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_media_observer_t *, unsigned long, struct _cef_media_sink_t *const *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_observer_t] :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_media_sink_t]]] :coffi.mem/void], :name "on_sinks", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_media_observer_t *, unsigned long, struct _cef_media_route_t *const *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_observer_t] :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_media_route_t]]] :coffi.mem/void], :name "on_routes", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_media_observer_t *, struct _cef_media_route_t *, cef_media_route_connection_state_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_observer_t] [:coffi.mem/pointer :clong/_cef_media_route_t] :coffi.mem/int] :coffi.mem/void], :name "on_route_state_changed", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_media_observer_t *, struct _cef_media_route_t *, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_observer_t] [:coffi.mem/pointer :clong/_cef_media_route_t] :coffi.mem/pointer :coffi.mem/long] :coffi.mem/void], :name "on_route_message_received", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_cookie_access_filter_t", :type "CXType_Record", :id :clong/_cef_cookie_access_filter_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_cookie_access_filter_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, const struct _cef_cookie_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_access_filter_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_cookie_t]] :coffi.mem/int], :name "can_send_cookie", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_cookie_access_filter_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_response_t *, const struct _cef_cookie_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_access_filter_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_cookie_t]] :coffi.mem/int], :name "can_save_cookie", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_task_t", :type "CXType_Record", :id :clong/_cef_task_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_task_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_t]] :coffi.mem/void], :name "execute", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_jsdialog_handler_t", :type "CXType_Record", :id :clong/_cef_jsdialog_handler_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_jsdialog_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, cef_jsdialog_type_t, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_jsdialog_callback_t *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_jsdialog_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_jsdialog_callback_t] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "on_jsdialog", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_jsdialog_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, int, struct _cef_jsdialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_jsdialog_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_jsdialog_callback_t]] :coffi.mem/int], :name "on_before_unload_dialog", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_jsdialog_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_jsdialog_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_reset_dialog_state", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_jsdialog_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_jsdialog_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_dialog_closed", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_x509certificate_t", :type "CXType_Record", :id :clong/_cef_x509certificate_t, :size-in-bytes 120, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_x509cert_principal_t *(*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_x509cert_principal_t]], :name "get_subject", :bitfield? false, :calculated-offset 320} {:type "struct _cef_x509cert_principal_t *(*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_x509cert_principal_t]], :name "get_issuer", :bitfield? false, :calculated-offset 384} {:type "struct _cef_binary_value_t *(*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_serial_number", :bitfield? false, :calculated-offset 448} {:type "struct _cef_basetime_t (*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] :clong/_cef_basetime_t], :name "get_valid_start", :bitfield? false, :calculated-offset 512} {:type "struct _cef_basetime_t (*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] :clong/_cef_basetime_t], :name "get_valid_expiry", :bitfield? false, :calculated-offset 576} {:type "struct _cef_binary_value_t *(*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_derencoded", :bitfield? false, :calculated-offset 640} {:type "struct _cef_binary_value_t *(*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_pemencoded", :bitfield? false, :calculated-offset 704} {:type "unsigned long (*)(struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t]] :coffi.mem/long], :name "get_issuer_chain_size", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_x509certificate_t *, unsigned long *, struct _cef_binary_value_t **)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_binary_value_t]]] :coffi.mem/void], :name "get_derencoded_issuer_chain", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_x509certificate_t *, unsigned long *, struct _cef_binary_value_t **)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509certificate_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_binary_value_t]]] :coffi.mem/void], :name "get_pemencoded_issuer_chain", :bitfield? false, :calculated-offset 896}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_get_extension_resource_callback_t", :type "CXType_Record", :id :clong/_cef_get_extension_resource_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_get_extension_resource_callback_t *, struct _cef_stream_reader_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_get_extension_resource_callback_t] [:coffi.mem/pointer :clong/_cef_stream_reader_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_get_extension_resource_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_get_extension_resource_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_download_handler_t", :type "CXType_Record", :id :clong/_cef_download_handler_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_download_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "can_download", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_download_handler_t *, struct _cef_browser_t *, struct _cef_download_item_t *, const struct _cef_string_utf16_t *, struct _cef_before_download_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_download_item_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_before_download_callback_t]] :coffi.mem/void], :name "on_before_download", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_download_handler_t *, struct _cef_browser_t *, struct _cef_download_item_t *, struct _cef_download_item_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_download_item_t] [:coffi.mem/pointer :clong/_cef_download_item_callback_t]] :coffi.mem/void], :name "on_download_updated", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_x509cert_principal_t", :type "CXType_Record", :id :clong/_cef_x509cert_principal_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_x509cert_principal_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_display_name", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_x509cert_principal_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_common_name", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t *(*)(struct _cef_x509cert_principal_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_locality_name", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_x509cert_principal_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_state_or_province_name", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t *(*)(struct _cef_x509cert_principal_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_country_name", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_x509cert_principal_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "get_organization_names", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_x509cert_principal_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_x509cert_principal_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "get_organization_unit_names", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_before_download_callback_t", :type "CXType_Record", :id :clong/_cef_before_download_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_before_download_callback_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_before_download_callback_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_download_image_callback_t", :type "CXType_Record", :id :clong/_cef_download_image_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_download_image_callback_t *, const struct _cef_string_utf16_t *, int, struct _cef_image_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_download_image_callback_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_image_t]] :coffi.mem/void], :name "on_download_image_finished", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_post_data_t", :type "CXType_Record", :id :clong/_cef_post_data_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_post_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_post_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t]] :coffi.mem/int], :name "has_excluded_elements", :bitfield? false, :calculated-offset 384} {:type "unsigned long (*)(struct _cef_post_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t]] :coffi.mem/long], :name "get_element_count", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_post_data_t *, unsigned long *, struct _cef_post_data_element_t **)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t] [:coffi.mem/pointer :coffi.mem/long] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_post_data_element_t]]] :coffi.mem/void], :name "get_elements", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_post_data_t *, struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t] [:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/int], :name "remove_element", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_post_data_t *, struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t] [:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/int], :name "add_element", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_post_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_t]] :coffi.mem/void], :name "remove_elements", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_sink_device_info_callback_t", :type "CXType_Record", :id :clong/_cef_media_sink_device_info_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_media_sink_device_info_callback_t *, const struct _cef_media_sink_device_info_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_device_info_callback_t] [:coffi.mem/pointer :clong/_cef_media_sink_device_info_t]] :coffi.mem/void], :name "on_media_sink_device_info", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8interceptor_t", :type "CXType_Record", :id :clong/_cef_v8interceptor_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8interceptor_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, struct _cef_v8value_t **, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8interceptor_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_byname", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_v8interceptor_t *, int, struct _cef_v8value_t *, struct _cef_v8value_t **, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8interceptor_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_byindex", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_v8interceptor_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, struct _cef_v8value_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8interceptor_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_byname", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_v8interceptor_t *, int, struct _cef_v8value_t *, struct _cef_v8value_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8interceptor_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_byindex", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_accessibility_handler_t", :type "CXType_Record", :id :clong/_cef_accessibility_handler_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_accessibility_handler_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_accessibility_handler_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/void], :name "on_accessibility_tree_change", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_accessibility_handler_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_accessibility_handler_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/void], :name "on_accessibility_location_change", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_source_t", :type "CXType_Record", :id :clong/_cef_media_source_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_media_source_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_source_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_id", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_media_source_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_source_t]] :coffi.mem/int], :name "is_cast_source", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_media_source_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_source_t]] :coffi.mem/int], :name "is_dial_source", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_task_runner_t", :type "CXType_Record", :id :clong/_cef_task_runner_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_task_runner_t *, struct _cef_task_runner_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_runner_t] [:coffi.mem/pointer :clong/_cef_task_runner_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_task_runner_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_runner_t]] :coffi.mem/int], :name "belongs_to_current_thread", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_task_runner_t *, cef_thread_id_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_runner_t] :coffi.mem/int] :coffi.mem/int], :name "belongs_to_thread", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_task_runner_t *, struct _cef_task_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_runner_t] [:coffi.mem/pointer :clong/_cef_task_t]] :coffi.mem/int], :name "post_task", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_task_runner_t *, struct _cef_task_t *, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_task_runner_t] [:coffi.mem/pointer :clong/_cef_task_t] :coffi.mem/long] :coffi.mem/int], :name "post_delayed_task", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_request_t", :type "CXType_Record", :id :clong/_cef_request_t, :size-in-bytes 216, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_url", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_url", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_method", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_method", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *, cef_referrer_policy_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "set_referrer", :bitfield? false, :calculated-offset 640} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_referrer_url", :bitfield? false, :calculated-offset 704} {:type "cef_referrer_policy_t (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/int], :name "get_referrer_policy", :bitfield? false, :calculated-offset 768} {:type "struct _cef_post_data_t *(*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_post_data_t]], :name "get_post_data", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_request_t *, struct _cef_post_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_post_data_t]] :coffi.mem/void], :name "set_post_data", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_request_t *, struct _cef_string_multimap_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_multimap_t]] :coffi.mem/void], :name "get_header_map", :bitfield? false, :calculated-offset 960} {:type "void (*)(struct _cef_request_t *, struct _cef_string_multimap_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_multimap_t]] :coffi.mem/void], :name "set_header_map", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_header_by_name", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "set_header_by_name", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_post_data_t *, struct _cef_string_multimap_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_post_data_t] [:coffi.mem/pointer :clong/_cef_string_multimap_t]] :coffi.mem/void], :name "set", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/int], :name "get_flags", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_request_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] :coffi.mem/int] :coffi.mem/void], :name "set_flags", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_string_utf16_t *(*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_first_party_for_cookies", :bitfield? false, :calculated-offset 1408} {:type "void (*)(struct _cef_request_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_first_party_for_cookies", :bitfield? false, :calculated-offset 1472} {:type "cef_resource_type_t (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/int], :name "get_resource_type", :bitfield? false, :calculated-offset 1536} {:type "cef_transition_type_t (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/int], :name "get_transition_type", :bitfield? false, :calculated-offset 1600} {:type "unsigned long long (*)(struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_t]] :coffi.mem/long], :name "get_identifier", :bitfield? false, :calculated-offset 1664}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_delete_cookies_callback_t", :type "CXType_Record", :id :clong/_cef_delete_cookies_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_delete_cookies_callback_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_delete_cookies_callback_t] :coffi.mem/int] :coffi.mem/void], :name "on_complete", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_callback_t", :type "CXType_Record", :id :clong/_cef_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_sslstatus_t", :type "CXType_Record", :id :clong/_cef_sslstatus_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_sslstatus_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslstatus_t]] :coffi.mem/int], :name "is_secure_connection", :bitfield? false, :calculated-offset 320} {:type "cef_cert_status_t (*)(struct _cef_sslstatus_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslstatus_t]] :coffi.mem/int], :name "get_cert_status", :bitfield? false, :calculated-offset 384} {:type "cef_ssl_version_t (*)(struct _cef_sslstatus_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslstatus_t]] :coffi.mem/int], :name "get_sslversion", :bitfield? false, :calculated-offset 448} {:type "cef_ssl_content_status_t (*)(struct _cef_sslstatus_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslstatus_t]] :coffi.mem/int], :name "get_content_status", :bitfield? false, :calculated-offset 512} {:type "struct _cef_x509certificate_t *(*)(struct _cef_sslstatus_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslstatus_t]] [:coffi.mem/pointer :clong/_cef_x509certificate_t]], :name "get_x509certificate", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_access_callback_t", :type "CXType_Record", :id :clong/_cef_media_access_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_media_access_callback_t *, unsigned int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_access_callback_t] :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_media_access_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_access_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_scheme_handler_factory_t", :type "CXType_Record", :id :clong/_cef_scheme_handler_factory_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_resource_handler_t *(*)(struct _cef_scheme_handler_factory_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_string_utf16_t *, struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_scheme_handler_factory_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_resource_handler_t]], :name "create", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_stream_writer_t", :type "CXType_Record", :id :clong/_cef_stream_writer_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "unsigned long (*)(struct _cef_stream_writer_t *, const void *, unsigned long, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_writer_t] :coffi.mem/pointer :coffi.mem/long :coffi.mem/long] :coffi.mem/long], :name "write", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_stream_writer_t *, long long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_writer_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "seek", :bitfield? false, :calculated-offset 384} {:type "long long (*)(struct _cef_stream_writer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_writer_t]] :coffi.mem/long], :name "tell", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_stream_writer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_writer_t]] :coffi.mem/int], :name "flush", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_stream_writer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_stream_writer_t]] :coffi.mem/int], :name "may_block", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_render_process_handler_t", :type "CXType_Record", :id :clong/_cef_render_process_handler_t, :size-in-bytes 112, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_render_process_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t]] :coffi.mem/void], :name "on_web_kit_initialized", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/void], :name "on_browser_created", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_browser_destroyed", :bitfield? false, :calculated-offset 448} {:type "struct _cef_load_handler_t *(*)(struct _cef_render_process_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t]] [:coffi.mem/pointer :clong/_cef_load_handler_t]], :name "get_load_handler", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/void], :name "on_context_created", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/void], :name "on_context_released", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_v8context_t *, struct _cef_v8exception_t *, struct _cef_v8stack_trace_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_v8context_t] [:coffi.mem/pointer :clong/_cef_v8exception_t] [:coffi.mem/pointer :clong/_cef_v8stack_trace_t]] :coffi.mem/void], :name "on_uncaught_exception", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_domnode_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_domnode_t]] :coffi.mem/void], :name "on_focused_node_changed", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_render_process_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, cef_process_id_t, struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_render_process_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_process_message_t]] :coffi.mem/int], :name "on_process_message_received", :bitfield? false, :calculated-offset 832}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8stack_trace_t", :type "CXType_Record", :id :clong/_cef_v8stack_trace_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8stack_trace_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_trace_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_v8stack_trace_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_trace_t]] :coffi.mem/int], :name "get_frame_count", :bitfield? false, :calculated-offset 384} {:type "struct _cef_v8stack_frame_t *(*)(struct _cef_v8stack_trace_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_trace_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_v8stack_frame_t]], :name "get_frame", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_request_handler_t", :type "CXType_Record", :id :clong/_cef_request_handler_t, :size-in-bytes 112, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "on_before_browse", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_string_utf16_t *, cef_window_open_disposition_t, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "on_open_urlfrom_tab", :bitfield? false, :calculated-offset 384} {:type "struct _cef_resource_request_handler_t *(*)(struct _cef_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, int, int, const struct _cef_string_utf16_t *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :coffi.mem/int]] [:coffi.mem/pointer :clong/_cef_resource_request_handler_t]], :name "get_resource_request_handler", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, int, const struct _cef_string_utf16_t *, int, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_auth_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_auth_callback_t]] :coffi.mem/int], :name "get_auth_credentials", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, cef_errorcode_t, const struct _cef_string_utf16_t *, struct _cef_sslinfo_t *, struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_sslinfo_t] [:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/int], :name "on_certificate_error", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, int, const struct _cef_string_utf16_t *, int, unsigned long, struct _cef_x509certificate_t *const *, struct _cef_select_client_certificate_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_x509certificate_t]] [:coffi.mem/pointer :clong/_cef_select_client_certificate_callback_t]] :coffi.mem/int], :name "on_select_client_certificate", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_request_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_render_view_ready", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_request_handler_t *, struct _cef_browser_t *, cef_termination_status_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] :coffi.mem/void], :name "on_render_process_terminated", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_request_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_document_available_in_main_frame", :bitfield? false, :calculated-offset 832}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_domvisitor_t", :type "CXType_Record", :id :clong/_cef_domvisitor_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_domvisitor_t *, struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domvisitor_t] [:coffi.mem/pointer :clong/_cef_domdocument_t]] :coffi.mem/void], :name "visit", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_load_handler_t", :type "CXType_Record", :id :clong/_cef_load_handler_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_load_handler_t *, struct _cef_browser_t *, int, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_load_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "on_loading_state_change", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_load_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, cef_transition_type_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_load_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int] :coffi.mem/void], :name "on_load_start", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_load_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_load_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int] :coffi.mem/void], :name "on_load_end", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_load_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, cef_errorcode_t, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_load_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_load_error", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resource_skip_callback_t", :type "CXType_Record", :id :clong/_cef_resource_skip_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_resource_skip_callback_t *, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_skip_callback_t] :coffi.mem/long] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8stack_frame_t", :type "CXType_Record", :id :clong/_cef_v8stack_frame_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_script_name", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_script_name_or_source_url", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_function_name", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] :coffi.mem/int], :name "get_line_number", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] :coffi.mem/int], :name "get_column", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] :coffi.mem/int], :name "is_eval", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_v8stack_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8stack_frame_t]] :coffi.mem/int], :name "is_constructor", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_router_t", :type "CXType_Record", :id :clong/_cef_media_router_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_registration_t *(*)(struct _cef_media_router_t *, struct _cef_media_observer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_router_t] [:coffi.mem/pointer :clong/_cef_media_observer_t]] [:coffi.mem/pointer :clong/_cef_registration_t]], :name "add_observer", :bitfield? false, :calculated-offset 320} {:type "struct _cef_media_source_t *(*)(struct _cef_media_router_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_router_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_media_source_t]], :name "get_source", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_media_router_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_router_t]] :coffi.mem/void], :name "notify_current_sinks", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_media_router_t *, struct _cef_media_source_t *, struct _cef_media_sink_t *, struct _cef_media_route_create_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_router_t] [:coffi.mem/pointer :clong/_cef_media_source_t] [:coffi.mem/pointer :clong/_cef_media_sink_t] [:coffi.mem/pointer :clong/_cef_media_route_create_callback_t]] :coffi.mem/void], :name "create_route", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_media_router_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_router_t]] :coffi.mem/void], :name "notify_current_routes", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_dictionary_value_t", :type "CXType_Record", :id :clong/_cef_dictionary_value_t, :size-in-bytes 272, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "is_owned", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_dictionary_value_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_dictionary_value_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "is_equal", :bitfield? false, :calculated-offset 576} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_dictionary_value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "copy", :bitfield? false, :calculated-offset 640} {:type "unsigned long (*)(struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/long], :name "get_size", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "clear", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_key", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_dictionary_value_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/int], :name "get_keys", :bitfield? false, :calculated-offset 896} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "remove", :bitfield? false, :calculated-offset 960} {:type "cef_value_type_t (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_value_t *(*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_value_t]], :name "get_value", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_bool", :bitfield? false, :calculated-offset 1152} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "get_int", :bitfield? false, :calculated-offset 1216} {:type "double (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/double], :name "get_double", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_string_utf16_t *(*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_string", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_binary_value_t *(*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_binary", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "get_dictionary", :bitfield? false, :calculated-offset 1472} {:type "struct _cef_list_value_t *(*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_list_value_t]], :name "get_list", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "set_value", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_null", :bitfield? false, :calculated-offset 1664} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "set_bool", :bitfield? false, :calculated-offset 1728} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "set_int", :bitfield? false, :calculated-offset 1792} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/double] :coffi.mem/int], :name "set_double", :bitfield? false, :calculated-offset 1856} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_string", :bitfield? false, :calculated-offset 1920} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "set_binary", :bitfield? false, :calculated-offset 1984} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "set_dictionary", :bitfield? false, :calculated-offset 2048} {:type "int (*)(struct _cef_dictionary_value_t *, const struct _cef_string_utf16_t *, struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dictionary_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "set_list", :bitfield? false, :calculated-offset 2112}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resource_read_callback_t", :type "CXType_Record", :id :clong/_cef_resource_read_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_resource_read_callback_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_read_callback_t] :coffi.mem/int] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_string_visitor_t", :type "CXType_Record", :id :clong/_cef_string_visitor_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_string_visitor_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_string_visitor_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "visit", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_context_menu_handler_t", :type "CXType_Record", :id :clong/_cef_context_menu_handler_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_context_menu_params_t *, struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_context_menu_params_t] [:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/void], :name "on_before_context_menu", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_context_menu_params_t *, struct _cef_menu_model_t *, struct _cef_run_context_menu_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_context_menu_params_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] [:coffi.mem/pointer :clong/_cef_run_context_menu_callback_t]] :coffi.mem/int], :name "run_context_menu", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_context_menu_params_t *, int, cef_event_flags_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_context_menu_params_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "on_context_menu_command", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "on_context_menu_dismissed", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_point_t *, const struct _cef_size_t *, cef_quick_menu_edit_state_flags_t, struct _cef_run_quick_menu_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_point_t] [:coffi.mem/pointer :clong/_cef_size_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_run_quick_menu_callback_t]] :coffi.mem/int], :name "run_quick_menu", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, int, cef_event_flags_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "on_quick_menu_command", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_context_menu_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_context_menu_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "on_quick_menu_dismissed", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_drag_handler_t", :type "CXType_Record", :id :clong/_cef_drag_handler_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_drag_handler_t *, struct _cef_browser_t *, struct _cef_drag_data_t *, cef_drag_operations_mask_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_drag_data_t] :coffi.mem/int] :coffi.mem/int], :name "on_drag_enter", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_drag_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, unsigned long, const struct _cef_draggable_region_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_draggable_region_t]] :coffi.mem/void], :name "on_draggable_regions_changed", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_response_t", :type "CXType_Record", :id :clong/_cef_response_t, :size-in-bytes 176, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 320} {:type "cef_errorcode_t (*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] :coffi.mem/int], :name "get_error", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_response_t *, cef_errorcode_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] :coffi.mem/int] :coffi.mem/void], :name "set_error", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] :coffi.mem/int], :name "get_status", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_response_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] :coffi.mem/int] :coffi.mem/void], :name "set_status", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t *(*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_status_text", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_response_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_status_text", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t *(*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_mime_type", :bitfield? false, :calculated-offset 768} {:type "void (*)(struct _cef_response_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_mime_type", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t *(*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_charset", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_response_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_charset", :bitfield? false, :calculated-offset 960} {:type "struct _cef_string_utf16_t *(*)(struct _cef_response_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_header_by_name", :bitfield? false, :calculated-offset 1024} {:type "void (*)(struct _cef_response_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/void], :name "set_header_by_name", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_response_t *, struct _cef_string_multimap_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_multimap_t]] :coffi.mem/void], :name "get_header_map", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_response_t *, struct _cef_string_multimap_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_multimap_t]] :coffi.mem/void], :name "set_header_map", :bitfield? false, :calculated-offset 1216} {:type "struct _cef_string_utf16_t *(*)(struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_url", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_response_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_url", :bitfield? false, :calculated-offset 1344}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_set_cookie_callback_t", :type "CXType_Record", :id :clong/_cef_set_cookie_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_set_cookie_callback_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_set_cookie_callback_t] :coffi.mem/int] :coffi.mem/void], :name "on_complete", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_navigation_entry_t", :type "CXType_Record", :id :clong/_cef_navigation_entry_t, :size-in-bytes 120, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_url", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t *(*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_display_url", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_original_url", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t *(*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_title", :bitfield? false, :calculated-offset 576} {:type "cef_transition_type_t (*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] :coffi.mem/int], :name "get_transition_type", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] :coffi.mem/int], :name "has_post_data", :bitfield? false, :calculated-offset 704} {:type "struct _cef_basetime_t (*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] :clong/_cef_basetime_t], :name "get_completion_time", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] :coffi.mem/int], :name "get_http_status_code", :bitfield? false, :calculated-offset 832} {:type "struct _cef_sslstatus_t *(*)(struct _cef_navigation_entry_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_navigation_entry_t]] [:coffi.mem/pointer :clong/_cef_sslstatus_t]], :name "get_sslstatus", :bitfield? false, :calculated-offset 896}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_image_t", :type "CXType_Record", :id :clong/_cef_image_t, :size-in-bytes 144, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_image_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t]] :coffi.mem/int], :name "is_empty", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_image_t *, struct _cef_image_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] [:coffi.mem/pointer :clong/_cef_image_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_image_t *, float, int, int, cef_color_type_t, cef_alpha_type_t, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/int :coffi.mem/int :coffi.mem/int :coffi.mem/int :coffi.mem/pointer :coffi.mem/long] :coffi.mem/int], :name "add_bitmap", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_image_t *, float, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/pointer :coffi.mem/long] :coffi.mem/int], :name "add_png", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_image_t *, float, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/pointer :coffi.mem/long] :coffi.mem/int], :name "add_jpeg", :bitfield? false, :calculated-offset 576} {:type "unsigned long (*)(struct _cef_image_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t]] :coffi.mem/long], :name "get_width", :bitfield? false, :calculated-offset 640} {:type "unsigned long (*)(struct _cef_image_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t]] :coffi.mem/long], :name "get_height", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_image_t *, float)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float] :coffi.mem/int], :name "has_representation", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_image_t *, float)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float] :coffi.mem/int], :name "remove_representation", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_image_t *, float, float *, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float [:coffi.mem/pointer :coffi.mem/float] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_representation_info", :bitfield? false, :calculated-offset 896} {:type "struct _cef_binary_value_t *(*)(struct _cef_image_t *, float, cef_color_type_t, cef_alpha_type_t, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_as_bitmap", :bitfield? false, :calculated-offset 960} {:type "struct _cef_binary_value_t *(*)(struct _cef_image_t *, float, int, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_as_png", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_binary_value_t *(*)(struct _cef_image_t *, float, int, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_image_t] :coffi.mem/float :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_as_jpeg", :bitfield? false, :calculated-offset 1088}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_audio_handler_t", :type "CXType_Record", :id :clong/_cef_audio_handler_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_audio_handler_t *, struct _cef_browser_t *, struct _cef_audio_parameters_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_audio_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_audio_parameters_t]] :coffi.mem/int], :name "get_audio_parameters", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_audio_handler_t *, struct _cef_browser_t *, const struct _cef_audio_parameters_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_audio_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_audio_parameters_t] :coffi.mem/int] :coffi.mem/void], :name "on_audio_stream_started", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_audio_handler_t *, struct _cef_browser_t *, const float **, int, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_audio_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer [:coffi.mem/pointer :coffi.mem/float]] :coffi.mem/int :coffi.mem/long] :coffi.mem/void], :name "on_audio_stream_packet", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_audio_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_audio_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_audio_stream_stopped", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_audio_handler_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_audio_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_audio_stream_error", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_process_message_t", :type "CXType_Record", :id :clong/_cef_process_message_t, :size-in-bytes 88, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 384} {:type "struct _cef_process_message_t *(*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] [:coffi.mem/pointer :clong/_cef_process_message_t]], :name "copy", :bitfield? false, :calculated-offset 448} {:type "struct _cef_string_utf16_t *(*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_name", :bitfield? false, :calculated-offset 512} {:type "struct _cef_list_value_t *(*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] [:coffi.mem/pointer :clong/_cef_list_value_t]], :name "get_argument_list", :bitfield? false, :calculated-offset 576} {:type "struct _cef_shared_memory_region_t *(*)(struct _cef_process_message_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_process_message_t]] [:coffi.mem/pointer :clong/_cef_shared_memory_region_t]], :name "get_shared_memory_region", :bitfield? false, :calculated-offset 640}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_find_handler_t", :type "CXType_Record", :id :clong/_cef_find_handler_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_find_handler_t *, struct _cef_browser_t *, int, int, const struct _cef_rect_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_find_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :clong/_cef_rect_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "on_find_result", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_print_dialog_callback_t", :type "CXType_Record", :id :clong/_cef_print_dialog_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_print_dialog_callback_t *, struct _cef_print_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_dialog_callback_t] [:coffi.mem/pointer :clong/_cef_print_settings_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_print_dialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_dialog_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_resource_request_handler_t", :type "CXType_Record", :id :clong/_cef_resource_request_handler_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_cookie_access_filter_t *(*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_cookie_access_filter_t]], :name "get_cookie_access_filter", :bitfield? false, :calculated-offset 320} {:type "cef_return_value_t (*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_callback_t]] :coffi.mem/int], :name "on_before_resource_load", :bitfield? false, :calculated-offset 384} {:type "struct _cef_resource_handler_t *(*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t]] [:coffi.mem/pointer :clong/_cef_resource_handler_t]], :name "get_resource_handler", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_response_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_response_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "on_resource_redirect", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_response_t]] :coffi.mem/int], :name "on_resource_response", :bitfield? false, :calculated-offset 576} {:type "struct _cef_response_filter_t *(*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_response_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_response_t]] [:coffi.mem/pointer :clong/_cef_response_filter_t]], :name "get_resource_response_filter", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, struct _cef_response_t *, cef_urlrequest_status_t, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :clong/_cef_response_t] :coffi.mem/int :coffi.mem/long] :coffi.mem/void], :name "on_resource_load_complete", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_resource_request_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_request_t *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_resource_request_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_request_t] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/void], :name "on_protocol_execution", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_domdocument_t", :type "CXType_Record", :id :clong/_cef_domdocument_t, :size-in-bytes 152, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "cef_dom_document_type_t (*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 320} {:type "struct _cef_domnode_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_document", :bitfield? false, :calculated-offset 384} {:type "struct _cef_domnode_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_body", :bitfield? false, :calculated-offset 448} {:type "struct _cef_domnode_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_head", :bitfield? false, :calculated-offset 512} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_title", :bitfield? false, :calculated-offset 576} {:type "struct _cef_domnode_t *(*)(struct _cef_domdocument_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_element_by_id", :bitfield? false, :calculated-offset 640} {:type "struct _cef_domnode_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_domnode_t]], :name "get_focused_node", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] :coffi.mem/int], :name "has_selection", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] :coffi.mem/int], :name "get_selection_start_offset", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] :coffi.mem/int], :name "get_selection_end_offset", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_selection_as_markup", :bitfield? false, :calculated-offset 960} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_selection_as_text", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domdocument_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_base_url", :bitfield? false, :calculated-offset 1088} {:type "struct _cef_string_utf16_t *(*)(struct _cef_domdocument_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_domdocument_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_complete_url", :bitfield? false, :calculated-offset 1152}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_command_line_t", :type "CXType_Record", :id :clong/_cef_command_line_t, :size-in-bytes 200, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 384} {:type "struct _cef_command_line_t *(*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] [:coffi.mem/pointer :clong/_cef_command_line_t]], :name "copy", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_command_line_t *, int, const char *const *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] :coffi.mem/int [:coffi.mem/pointer [:coffi.mem/pointer :coffi.mem/char]]] :coffi.mem/void], :name "init_from_argv", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "init_from_string", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/void], :name "reset", :bitfield? false, :calculated-offset 640} {:type "void (*)(struct _cef_command_line_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "get_argv", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t *(*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_command_line_string", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t *(*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_program", :bitfield? false, :calculated-offset 832} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_program", :bitfield? false, :calculated-offset 896} {:type "int (*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/int], :name "has_switches", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_switch", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_string_utf16_t *(*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_switch_value", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_command_line_t *, struct _cef_string_map_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_map_t]] :coffi.mem/void], :name "get_switches", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "append_switch", :bitfield? false, :calculated-offset 1216} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "append_switch_with_value", :bitfield? false, :calculated-offset 1280} {:type "int (*)(struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/int], :name "has_arguments", :bitfield? false, :calculated-offset 1344} {:type "void (*)(struct _cef_command_line_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "get_arguments", :bitfield? false, :calculated-offset 1408} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "append_argument", :bitfield? false, :calculated-offset 1472} {:type "void (*)(struct _cef_command_line_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_command_line_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "prepend_wrapper", :bitfield? false, :calculated-offset 1536}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_post_data_element_t", :type "CXType_Record", :id :clong/_cef_post_data_element_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/void], :name "set_to_empty", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_post_data_element_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_to_file", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_post_data_element_t *, unsigned long, const void *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t] :coffi.mem/long :coffi.mem/pointer] :coffi.mem/void], :name "set_to_bytes", :bitfield? false, :calculated-offset 512} {:type "cef_postdataelement_type_t (*)(struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t *(*)(struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_file", :bitfield? false, :calculated-offset 640} {:type "unsigned long (*)(struct _cef_post_data_element_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t]] :coffi.mem/long], :name "get_bytes_count", :bitfield? false, :calculated-offset 704} {:type "unsigned long (*)(struct _cef_post_data_element_t *, unsigned long, void *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_post_data_element_t] :coffi.mem/long :coffi.mem/pointer] :coffi.mem/long], :name "get_bytes", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_menu_model_t", :type "CXType_Record", :id :clong/_cef_menu_model_t, :size-in-bytes 488, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/int], :name "is_sub_menu", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/int], :name "clear", :bitfield? false, :calculated-offset 384} {:type "unsigned long (*)(struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/long], :name "get_count", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/int], :name "add_separator", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "add_item", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "add_check_item", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "add_radio_item", :bitfield? false, :calculated-offset 704} {:type "struct _cef_menu_model_t *(*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_menu_model_t]], :name "add_sub_menu", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "insert_separator_at", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "insert_item_at", :bitfield? false, :calculated-offset 896} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "insert_check_item_at", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int, const struct _cef_string_utf16_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int] :coffi.mem/int], :name "insert_radio_item_at", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_menu_model_t *(*)(struct _cef_menu_model_t *, unsigned long, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_menu_model_t]], :name "insert_sub_menu_at", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "remove", :bitfield? false, :calculated-offset 1152} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "remove_at", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "get_index_of", :bitfield? false, :calculated-offset 1280} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "get_command_id_at", :bitfield? false, :calculated-offset 1344} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_command_id_at", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_string_utf16_t *(*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_label", :bitfield? false, :calculated-offset 1472} {:type "struct _cef_string_utf16_t *(*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_label_at", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_label", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_label_at", :bitfield? false, :calculated-offset 1664} {:type "cef_menu_item_type_t (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 1728} {:type "cef_menu_item_type_t (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "get_type_at", :bitfield? false, :calculated-offset 1792} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "get_group_id", :bitfield? false, :calculated-offset 1856} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "get_group_id_at", :bitfield? false, :calculated-offset 1920} {:type "int (*)(struct _cef_menu_model_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_group_id", :bitfield? false, :calculated-offset 1984} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_group_id_at", :bitfield? false, :calculated-offset 2048} {:type "struct _cef_menu_model_t *(*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_menu_model_t]], :name "get_sub_menu", :bitfield? false, :calculated-offset 2112} {:type "struct _cef_menu_model_t *(*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_menu_model_t]], :name "get_sub_menu_at", :bitfield? false, :calculated-offset 2176} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "is_visible", :bitfield? false, :calculated-offset 2240} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "is_visible_at", :bitfield? false, :calculated-offset 2304} {:type "int (*)(struct _cef_menu_model_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_visible", :bitfield? false, :calculated-offset 2368} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_visible_at", :bitfield? false, :calculated-offset 2432} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "is_enabled", :bitfield? false, :calculated-offset 2496} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "is_enabled_at", :bitfield? false, :calculated-offset 2560} {:type "int (*)(struct _cef_menu_model_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_enabled", :bitfield? false, :calculated-offset 2624} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_enabled_at", :bitfield? false, :calculated-offset 2688} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "is_checked", :bitfield? false, :calculated-offset 2752} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "is_checked_at", :bitfield? false, :calculated-offset 2816} {:type "int (*)(struct _cef_menu_model_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_checked", :bitfield? false, :calculated-offset 2880} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_checked_at", :bitfield? false, :calculated-offset 2944} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "has_accelerator", :bitfield? false, :calculated-offset 3008} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "has_accelerator_at", :bitfield? false, :calculated-offset 3072} {:type "int (*)(struct _cef_menu_model_t *, int, int, int, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_accelerator", :bitfield? false, :calculated-offset 3136} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int, int, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long :coffi.mem/int :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_accelerator_at", :bitfield? false, :calculated-offset 3200} {:type "int (*)(struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/int], :name "remove_accelerator", :bitfield? false, :calculated-offset 3264} {:type "int (*)(struct _cef_menu_model_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long] :coffi.mem/int], :name "remove_accelerator_at", :bitfield? false, :calculated-offset 3328} {:type "int (*)(struct _cef_menu_model_t *, int, int *, int *, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_accelerator", :bitfield? false, :calculated-offset 3392} {:type "int (*)(struct _cef_menu_model_t *, unsigned long, int *, int *, int *, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/long [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_accelerator_at", :bitfield? false, :calculated-offset 3456} {:type "int (*)(struct _cef_menu_model_t *, int, cef_menu_color_type_t, unsigned int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_color", :bitfield? false, :calculated-offset 3520} {:type "int (*)(struct _cef_menu_model_t *, int, cef_menu_color_type_t, unsigned int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_color_at", :bitfield? false, :calculated-offset 3584} {:type "int (*)(struct _cef_menu_model_t *, int, cef_menu_color_type_t, unsigned int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_color", :bitfield? false, :calculated-offset 3648} {:type "int (*)(struct _cef_menu_model_t *, int, cef_menu_color_type_t, unsigned int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "get_color_at", :bitfield? false, :calculated-offset 3712} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_font_list", :bitfield? false, :calculated-offset 3776} {:type "int (*)(struct _cef_menu_model_t *, int, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_font_list_at", :bitfield? false, :calculated-offset 3840}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_value_t", :type "CXType_Record", :id :clong/_cef_value_t, :size-in-bytes 216, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "is_owned", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_value_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_value_t *, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "is_equal", :bitfield? false, :calculated-offset 576} {:type "struct _cef_value_t *(*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] [:coffi.mem/pointer :clong/_cef_value_t]], :name "copy", :bitfield? false, :calculated-offset 640} {:type "cef_value_type_t (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "get_bool", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "get_int", :bitfield? false, :calculated-offset 832} {:type "double (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/double], :name "get_double", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t *(*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_string", :bitfield? false, :calculated-offset 960} {:type "struct _cef_binary_value_t *(*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_binary", :bitfield? false, :calculated-offset 1024} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "get_dictionary", :bitfield? false, :calculated-offset 1088} {:type "struct _cef_list_value_t *(*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] [:coffi.mem/pointer :clong/_cef_list_value_t]], :name "get_list", :bitfield? false, :calculated-offset 1152} {:type "int (*)(struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "set_null", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] :coffi.mem/int] :coffi.mem/int], :name "set_bool", :bitfield? false, :calculated-offset 1280} {:type "int (*)(struct _cef_value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] :coffi.mem/int] :coffi.mem/int], :name "set_int", :bitfield? false, :calculated-offset 1344} {:type "int (*)(struct _cef_value_t *, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] :coffi.mem/double] :coffi.mem/int], :name "set_double", :bitfield? false, :calculated-offset 1408} {:type "int (*)(struct _cef_value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_string", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_value_t *, struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "set_binary", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_value_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "set_dictionary", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_value_t *, struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_value_t] [:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "set_list", :bitfield? false, :calculated-offset 1664}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_list_value_t", :type "CXType_Record", :id :clong/_cef_list_value_t, :size-in-bytes 264, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "is_owned", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_list_value_t *, struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] [:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_list_value_t *, struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] [:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "is_equal", :bitfield? false, :calculated-offset 576} {:type "struct _cef_list_value_t *(*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] [:coffi.mem/pointer :clong/_cef_list_value_t]], :name "copy", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "set_size", :bitfield? false, :calculated-offset 704} {:type "unsigned long (*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/long], :name "get_size", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "clear", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "remove", :bitfield? false, :calculated-offset 896} {:type "cef_value_type_t (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "get_type", :bitfield? false, :calculated-offset 960} {:type "struct _cef_value_t *(*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_value_t]], :name "get_value", :bitfield? false, :calculated-offset 1024} {:type "int (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "get_bool", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "get_int", :bitfield? false, :calculated-offset 1152} {:type "double (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/double], :name "get_double", :bitfield? false, :calculated-offset 1216} {:type "struct _cef_string_utf16_t *(*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_string", :bitfield? false, :calculated-offset 1280} {:type "struct _cef_binary_value_t *(*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_binary_value_t]], :name "get_binary", :bitfield? false, :calculated-offset 1344} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "get_dictionary", :bitfield? false, :calculated-offset 1408} {:type "struct _cef_list_value_t *(*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] [:coffi.mem/pointer :clong/_cef_list_value_t]], :name "get_list", :bitfield? false, :calculated-offset 1472} {:type "int (*)(struct _cef_list_value_t *, unsigned long, struct _cef_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_value_t]] :coffi.mem/int], :name "set_value", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_list_value_t *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long] :coffi.mem/int], :name "set_null", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_list_value_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_bool", :bitfield? false, :calculated-offset 1664} {:type "int (*)(struct _cef_list_value_t *, unsigned long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "set_int", :bitfield? false, :calculated-offset 1728} {:type "int (*)(struct _cef_list_value_t *, unsigned long, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long :coffi.mem/double] :coffi.mem/int], :name "set_double", :bitfield? false, :calculated-offset 1792} {:type "int (*)(struct _cef_list_value_t *, unsigned long, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "set_string", :bitfield? false, :calculated-offset 1856} {:type "int (*)(struct _cef_list_value_t *, unsigned long, struct _cef_binary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_binary_value_t]] :coffi.mem/int], :name "set_binary", :bitfield? false, :calculated-offset 1920} {:type "int (*)(struct _cef_list_value_t *, unsigned long, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "set_dictionary", :bitfield? false, :calculated-offset 1984} {:type "int (*)(struct _cef_list_value_t *, unsigned long, struct _cef_list_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_list_value_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_list_value_t]] :coffi.mem/int], :name "set_list", :bitfield? false, :calculated-offset 2048}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_completion_callback_t", :type "CXType_Record", :id :clong/_cef_completion_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_completion_callback_t]] :coffi.mem/void], :name "on_complete", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_browser_process_handler_t", :type "CXType_Record", :id :clong/_cef_browser_process_handler_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_browser_process_handler_t *, cef_preferences_type_t, struct _cef_preference_registrar_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_process_handler_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_preference_registrar_t]] :coffi.mem/void], :name "on_register_custom_preferences", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_browser_process_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_process_handler_t]] :coffi.mem/void], :name "on_context_initialized", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_browser_process_handler_t *, struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_process_handler_t] [:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/void], :name "on_before_child_process_launch", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_browser_process_handler_t *, long long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_process_handler_t] :coffi.mem/long] :coffi.mem/void], :name "on_schedule_message_pump_work", :bitfield? false, :calculated-offset 512} {:type "struct _cef_client_t *(*)(struct _cef_browser_process_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_process_handler_t]] [:coffi.mem/pointer :clong/_cef_client_t]], :name "get_default_client", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_file_dialog_callback_t", :type "CXType_Record", :id :clong/_cef_file_dialog_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_file_dialog_callback_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_file_dialog_callback_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_file_dialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_file_dialog_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_registration_t", :type "CXType_Record", :id :clong/_cef_registration_t, :size-in-bytes 40, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_shared_memory_region_t", :type "CXType_Record", :id :clong/_cef_shared_memory_region_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_shared_memory_region_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_shared_memory_region_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "unsigned long (*)(struct _cef_shared_memory_region_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_shared_memory_region_t]] :coffi.mem/long], :name "size", :bitfield? false, :calculated-offset 384} {:type "const void *(*)(struct _cef_shared_memory_region_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_shared_memory_region_t]] :coffi.mem/pointer], :name "memory", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8context_t", :type "CXType_Record", :id :clong/_cef_v8context_t, :size-in-bytes 112, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_task_runner_t *(*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] [:coffi.mem/pointer :clong/_cef_task_runner_t]], :name "get_task_runner", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 384} {:type "struct _cef_browser_t *(*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] [:coffi.mem/pointer :clong/_cef_browser_t]], :name "get_browser", :bitfield? false, :calculated-offset 448} {:type "struct _cef_frame_t *(*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] [:coffi.mem/pointer :clong/_cef_frame_t]], :name "get_frame", :bitfield? false, :calculated-offset 512} {:type "struct _cef_v8value_t *(*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] [:coffi.mem/pointer :clong/_cef_v8value_t]], :name "get_global", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/int], :name "enter", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/int], :name "exit", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_v8context_t *, struct _cef_v8context_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t] [:coffi.mem/pointer :clong/_cef_v8context_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_v8context_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, int, struct _cef_v8value_t **, struct _cef_v8exception_t **)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8context_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8exception_t]]] :coffi.mem/int], :name "eval", :bitfield? false, :calculated-offset 832}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_life_span_handler_t", :type "CXType_Record", :id :clong/_cef_life_span_handler_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_life_span_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, cef_window_open_disposition_t, int, const struct _cef_popup_features_t *, struct _cef_window_info_t *, struct _cef_client_t **, struct _cef_browser_settings_t *, struct _cef_dictionary_value_t **, int *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_life_span_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :clong/_cef_popup_features_t] [:coffi.mem/pointer :clong/_cef_window_info_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_browser_settings_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] [:coffi.mem/pointer :coffi.mem/int]] :coffi.mem/int], :name "on_before_popup", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_life_span_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_life_span_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_after_created", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_life_span_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_life_span_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "do_close", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_life_span_handler_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_life_span_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_before_close", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_dev_tools_message_observer_t", :type "CXType_Record", :id :clong/_cef_dev_tools_message_observer_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_dev_tools_message_observer_t *, struct _cef_browser_t *, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/pointer :coffi.mem/long] :coffi.mem/int], :name "on_dev_tools_message", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_dev_tools_message_observer_t *, struct _cef_browser_t *, int, int, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int :coffi.mem/int :coffi.mem/pointer :coffi.mem/long] :coffi.mem/void], :name "on_dev_tools_method_result", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_dev_tools_message_observer_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/pointer :coffi.mem/long] :coffi.mem/void], :name "on_dev_tools_event", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_dev_tools_message_observer_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_dev_tools_agent_attached", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_dev_tools_message_observer_t *, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t] [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/void], :name "on_dev_tools_agent_detached", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_extension_handler_t", :type "CXType_Record", :id :clong/_cef_extension_handler_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_extension_handler_t *, cef_errorcode_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] :coffi.mem/int] :coffi.mem/void], :name "on_extension_load_failed", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t]] :coffi.mem/void], :name "on_extension_loaded", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t]] :coffi.mem/void], :name "on_extension_unloaded", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *, const struct _cef_string_utf16_t *, struct _cef_client_t **, struct _cef_browser_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_browser_settings_t]] :coffi.mem/int], :name "on_before_background_browser", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *, struct _cef_browser_t *, struct _cef_browser_t *, int, const struct _cef_string_utf16_t *, int, struct _cef_window_info_t *, struct _cef_client_t **, struct _cef_browser_settings_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_window_info_t] [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_client_t]] [:coffi.mem/pointer :clong/_cef_browser_settings_t]] :coffi.mem/int], :name "on_before_browser", :bitfield? false, :calculated-offset 576} {:type "struct _cef_browser_t *(*)(struct _cef_extension_handler_t *, struct _cef_extension_t *, struct _cef_browser_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_browser_t]], :name "get_active_browser", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *, struct _cef_browser_t *, int, struct _cef_browser_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_browser_t]] :coffi.mem/int], :name "can_access_browser", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_extension_handler_t *, struct _cef_extension_t *, struct _cef_browser_t *, const struct _cef_string_utf16_t *, struct _cef_get_extension_resource_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_handler_t] [:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_get_extension_resource_callback_t]] :coffi.mem/int], :name "get_extension_resource", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8exception_t", :type "CXType_Record", :id :clong/_cef_v8exception_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_message", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_source_line", :bitfield? false, :calculated-offset 384} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_script_resource_name", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] :coffi.mem/int], :name "get_line_number", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] :coffi.mem/int], :name "get_start_position", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] :coffi.mem/int], :name "get_end_position", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] :coffi.mem/int], :name "get_start_column", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_v8exception_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8exception_t]] :coffi.mem/int], :name "get_end_column", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_extension_t", :type "CXType_Record", :id :clong/_cef_extension_t, :size-in-bytes 104, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_identifier", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_path", :bitfield? false, :calculated-offset 384} {:type "struct _cef_dictionary_value_t *(*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]], :name "get_manifest", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_extension_t *, struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t] [:coffi.mem/pointer :clong/_cef_extension_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 512} {:type "struct _cef_extension_handler_t *(*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] [:coffi.mem/pointer :clong/_cef_extension_handler_t]], :name "get_handler", :bitfield? false, :calculated-offset 576} {:type "struct _cef_request_context_t *(*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] [:coffi.mem/pointer :clong/_cef_request_context_t]], :name "get_loader_context", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] :coffi.mem/int], :name "is_loaded", :bitfield? false, :calculated-offset 704} {:type "void (*)(struct _cef_extension_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_extension_t]] :coffi.mem/void], :name "unload", :bitfield? false, :calculated-offset 768}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_sslinfo_t", :type "CXType_Record", :id :clong/_cef_sslinfo_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "cef_cert_status_t (*)(struct _cef_sslinfo_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslinfo_t]] :coffi.mem/int], :name "get_cert_status", :bitfield? false, :calculated-offset 320} {:type "struct _cef_x509certificate_t *(*)(struct _cef_sslinfo_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_sslinfo_t]] [:coffi.mem/pointer :clong/_cef_x509certificate_t]], :name "get_x509certificate", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_write_handler_t", :type "CXType_Record", :id :clong/_cef_write_handler_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "unsigned long (*)(struct _cef_write_handler_t *, const void *, unsigned long, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_write_handler_t] :coffi.mem/pointer :coffi.mem/long :coffi.mem/long] :coffi.mem/long], :name "write", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_write_handler_t *, long long, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_write_handler_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/int], :name "seek", :bitfield? false, :calculated-offset 384} {:type "long long (*)(struct _cef_write_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_write_handler_t]] :coffi.mem/long], :name "tell", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_write_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_write_handler_t]] :coffi.mem/int], :name "flush", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_write_handler_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_write_handler_t]] :coffi.mem/int], :name "may_block", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_select_client_certificate_callback_t", :type "CXType_Record", :id :clong/_cef_select_client_certificate_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_select_client_certificate_callback_t *, struct _cef_x509certificate_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_select_client_certificate_callback_t] [:coffi.mem/pointer :clong/_cef_x509certificate_t]] :coffi.mem/void], :name "select", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_frame_handler_t", :type "CXType_Record", :id :clong/_cef_frame_handler_t, :size-in-bytes 72, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_frame_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "on_frame_created", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_frame_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] :coffi.mem/int] :coffi.mem/void], :name "on_frame_attached", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_frame_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "on_frame_detached", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_frame_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, struct _cef_frame_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_frame_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_frame_t]] :coffi.mem/void], :name "on_main_frame_changed", :bitfield? false, :calculated-offset 512}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_permission_handler_t", :type "CXType_Record", :id :clong/_cef_permission_handler_t, :size-in-bytes 64, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_permission_handler_t *, struct _cef_browser_t *, struct _cef_frame_t *, const struct _cef_string_utf16_t *, unsigned int, struct _cef_media_access_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_permission_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] [:coffi.mem/pointer :clong/_cef_frame_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_media_access_callback_t]] :coffi.mem/int], :name "on_request_media_access_permission", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_permission_handler_t *, struct _cef_browser_t *, unsigned long long, const struct _cef_string_utf16_t *, unsigned int, struct _cef_permission_prompt_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_permission_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_permission_prompt_callback_t]] :coffi.mem/int], :name "on_show_permission_prompt", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_permission_handler_t *, struct _cef_browser_t *, unsigned long long, cef_permission_request_result_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_permission_handler_t] [:coffi.mem/pointer :clong/_cef_browser_t] :coffi.mem/long :coffi.mem/int] :coffi.mem/void], :name "on_dismiss_permission_prompt", :bitfield? false, :calculated-offset 448}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_print_job_callback_t", :type "CXType_Record", :id :clong/_cef_print_job_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_print_job_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_print_job_callback_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_auth_callback_t", :type "CXType_Record", :id :clong/_cef_auth_callback_t, :size-in-bytes 56, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_auth_callback_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_auth_callback_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "cont", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_auth_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_auth_callback_t]] :coffi.mem/void], :name "cancel", :bitfield? false, :calculated-offset 384}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_box_layout_settings_t", :type "CXType_Record", :id :clong/_cef_box_layout_settings_t, :size-in-bytes 48, :fields [{:type "int", :datatype :coffi.mem/int, :name "horizontal", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "inside_border_horizontal_spacing", :bitfield? false, :calculated-offset 32} {:type "int", :datatype :coffi.mem/int, :name "inside_border_vertical_spacing", :bitfield? false, :calculated-offset 64} {:type "struct _cef_insets_t", :datatype :clong/_cef_insets_t, :name "inside_border_insets", :bitfield? false, :calculated-offset 96} {:type "int", :datatype :coffi.mem/int, :name "between_child_spacing", :bitfield? false, :calculated-offset 224} {:type "cef_main_axis_alignment_t", :datatype :coffi.mem/int, :name "main_axis_alignment", :bitfield? false, :calculated-offset 256} {:type "cef_cross_axis_alignment_t", :datatype :coffi.mem/int, :name "cross_axis_alignment", :bitfield? false, :calculated-offset 288} {:type "int", :datatype :coffi.mem/int, :name "minimum_cross_axis_size", :bitfield? false, :calculated-offset 320} {:type "int", :datatype :coffi.mem/int, :name "default_flex", :bitfield? false, :calculated-offset 352}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_drag_data_t", :type "CXType_Record", :id :clong/_cef_drag_data_t, :size-in-bytes 248, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_drag_data_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_drag_data_t]], :name "clone", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/int], :name "is_read_only", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/int], :name "is_link", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/int], :name "is_fragment", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/int], :name "is_file", :bitfield? false, :calculated-offset 576} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_link_url", :bitfield? false, :calculated-offset 640} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_link_title", :bitfield? false, :calculated-offset 704} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_link_metadata", :bitfield? false, :calculated-offset 768} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_fragment_text", :bitfield? false, :calculated-offset 832} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_fragment_html", :bitfield? false, :calculated-offset 896} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_fragment_base_url", :bitfield? false, :calculated-offset 960} {:type "struct _cef_string_utf16_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_file_name", :bitfield? false, :calculated-offset 1024} {:type "unsigned long (*)(struct _cef_drag_data_t *, struct _cef_stream_writer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_stream_writer_t]] :coffi.mem/long], :name "get_file_contents", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_drag_data_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/int], :name "get_file_names", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_link_url", :bitfield? false, :calculated-offset 1216} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_link_title", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_link_metadata", :bitfield? false, :calculated-offset 1344} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_fragment_text", :bitfield? false, :calculated-offset 1408} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_fragment_html", :bitfield? false, :calculated-offset 1472} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "set_fragment_base_url", :bitfield? false, :calculated-offset 1536} {:type "void (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/void], :name "reset_file_contents", :bitfield? false, :calculated-offset 1600} {:type "void (*)(struct _cef_drag_data_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "add_file", :bitfield? false, :calculated-offset 1664} {:type "void (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/void], :name "clear_filenames", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_image_t *(*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] [:coffi.mem/pointer :clong/_cef_image_t]], :name "get_image", :bitfield? false, :calculated-offset 1792} {:type "struct _cef_point_t (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :clong/_cef_point_t], :name "get_image_hotspot", :bitfield? false, :calculated-offset 1856} {:type "int (*)(struct _cef_drag_data_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_drag_data_t]] :coffi.mem/int], :name "has_image", :bitfield? false, :calculated-offset 1920}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_draggable_region_t", :type "CXType_Record", :id :clong/_cef_draggable_region_t, :size-in-bytes 20, :fields [{:type "struct _cef_rect_t", :datatype :clong/_cef_rect_t, :name "bounds", :bitfield? false, :calculated-offset 0} {:type "int", :datatype :coffi.mem/int, :name "draggable", :bitfield? false, :calculated-offset 128}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_menu_model_delegate_t", :type "CXType_Record", :id :clong/_cef_menu_model_delegate_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *, int, cef_event_flags_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "execute_command", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *, const struct _cef_point_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] [:coffi.mem/pointer :clong/_cef_point_t]] :coffi.mem/void], :name "mouse_outside_menu", :bitfield? false, :calculated-offset 384} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/void], :name "unhandled_open_submenu", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] :coffi.mem/int] :coffi.mem/void], :name "unhandled_close_submenu", :bitfield? false, :calculated-offset 512} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/void], :name "menu_will_show", :bitfield? false, :calculated-offset 576} {:type "void (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t]] :coffi.mem/void], :name "menu_closed", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_menu_model_delegate_t *, struct _cef_menu_model_t *, struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_menu_model_delegate_t] [:coffi.mem/pointer :clong/_cef_menu_model_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "format_label", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _opaque_pthread_rwlockattr_t", :type "CXType_Record", :id :clong/_opaque_pthread_rwlockattr_t, :size-in-bytes 24, :fields [{:type "long", :datatype :coffi.mem/long, :name "__sig", :bitfield? false, :calculated-offset 0} {:type "char[16]", :datatype [:coffi.mem/array :coffi.mem/char 16], :name "__opaque", :bitfield? false, :calculated-offset 64}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8array_buffer_release_callback_t", :type "CXType_Record", :id :clong/_cef_v8array_buffer_release_callback_t, :size-in-bytes 48, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_v8array_buffer_release_callback_t *, void *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8array_buffer_release_callback_t] :coffi.mem/pointer] :coffi.mem/void], :name "release_buffer", :bitfield? false, :calculated-offset 320}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_media_sink_t", :type "CXType_Record", :id :clong/_cef_media_sink_t, :size-in-bytes 96, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_string_utf16_t *(*)(struct _cef_media_sink_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_id", :bitfield? false, :calculated-offset 320} {:type "struct _cef_string_utf16_t *(*)(struct _cef_media_sink_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_name", :bitfield? false, :calculated-offset 384} {:type "cef_media_sink_icon_type_t (*)(struct _cef_media_sink_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t]] :coffi.mem/int], :name "get_icon_type", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_media_sink_t *, struct _cef_media_sink_device_info_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t] [:coffi.mem/pointer :clong/_cef_media_sink_device_info_callback_t]] :coffi.mem/void], :name "get_device_info", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_media_sink_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t]] :coffi.mem/int], :name "is_cast_sink", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_media_sink_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t]] :coffi.mem/int], :name "is_dial_sink", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_media_sink_t *, struct _cef_media_source_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_media_sink_t] [:coffi.mem/pointer :clong/_cef_media_source_t]] :coffi.mem/int], :name "is_compatible_with", :bitfield? false, :calculated-offset 704}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_v8value_t", :type "CXType_Record", :id :clong/_cef_v8value_t, :size-in-bytes 440, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_valid", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_undefined", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_null", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_bool", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_int", :bitfield? false, :calculated-offset 576} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_uint", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_double", :bitfield? false, :calculated-offset 704} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_date", :bitfield? false, :calculated-offset 768} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_string", :bitfield? false, :calculated-offset 832} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_object", :bitfield? false, :calculated-offset 896} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_array", :bitfield? false, :calculated-offset 960} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_array_buffer", :bitfield? false, :calculated-offset 1024} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_function", :bitfield? false, :calculated-offset 1088} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_promise", :bitfield? false, :calculated-offset 1152} {:type "int (*)(struct _cef_v8value_t *, struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_same", :bitfield? false, :calculated-offset 1216} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "get_bool_value", :bitfield? false, :calculated-offset 1280} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "get_int_value", :bitfield? false, :calculated-offset 1344} {:type "unsigned int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "get_uint_value", :bitfield? false, :calculated-offset 1408} {:type "double (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/double], :name "get_double_value", :bitfield? false, :calculated-offset 1472} {:type "struct _cef_basetime_t (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :clong/_cef_basetime_t], :name "get_date_value", :bitfield? false, :calculated-offset 1536} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_string_value", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "is_user_created", :bitfield? false, :calculated-offset 1664} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "has_exception", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_v8exception_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_v8exception_t]], :name "get_exception", :bitfield? false, :calculated-offset 1792} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "clear_exception", :bitfield? false, :calculated-offset 1856} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "will_rethrow_exceptions", :bitfield? false, :calculated-offset 1920} {:type "int (*)(struct _cef_v8value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] :coffi.mem/int], :name "set_rethrow_exceptions", :bitfield? false, :calculated-offset 1984} {:type "int (*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "has_value_bykey", :bitfield? false, :calculated-offset 2048} {:type "int (*)(struct _cef_v8value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] :coffi.mem/int], :name "has_value_byindex", :bitfield? false, :calculated-offset 2112} {:type "int (*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "delete_value_bykey", :bitfield? false, :calculated-offset 2176} {:type "int (*)(struct _cef_v8value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] :coffi.mem/int], :name "delete_value_byindex", :bitfield? false, :calculated-offset 2240} {:type "struct _cef_v8value_t *(*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] [:coffi.mem/pointer :clong/_cef_v8value_t]], :name "get_value_bykey", :bitfield? false, :calculated-offset 2304} {:type "struct _cef_v8value_t *(*)(struct _cef_v8value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] [:coffi.mem/pointer :clong/_cef_v8value_t]], :name "get_value_byindex", :bitfield? false, :calculated-offset 2368} {:type "int (*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *, struct _cef_v8value_t *, cef_v8_propertyattribute_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] :coffi.mem/int], :name "set_value_bykey", :bitfield? false, :calculated-offset 2432} {:type "int (*)(struct _cef_v8value_t *, int, struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "set_value_byindex", :bitfield? false, :calculated-offset 2496} {:type "int (*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *, cef_v8_accesscontrol_t, cef_v8_propertyattribute_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/int], :name "set_value_byaccessor", :bitfield? false, :calculated-offset 2560} {:type "int (*)(struct _cef_v8value_t *, struct _cef_string_list_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_list_t]] :coffi.mem/int], :name "get_keys", :bitfield? false, :calculated-offset 2624} {:type "int (*)(struct _cef_v8value_t *, struct _cef_base_ref_counted_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_base_ref_counted_t]] :coffi.mem/int], :name "set_user_data", :bitfield? false, :calculated-offset 2688} {:type "struct _cef_base_ref_counted_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_base_ref_counted_t]], :name "get_user_data", :bitfield? false, :calculated-offset 2752} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "get_externally_allocated_memory", :bitfield? false, :calculated-offset 2816} {:type "int (*)(struct _cef_v8value_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/int] :coffi.mem/int], :name "adjust_externally_allocated_memory", :bitfield? false, :calculated-offset 2880} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "get_array_length", :bitfield? false, :calculated-offset 2944} {:type "struct _cef_v8array_buffer_release_callback_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_v8array_buffer_release_callback_t]], :name "get_array_buffer_release_callback", :bitfield? false, :calculated-offset 3008} {:type "int (*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "neuter_array_buffer", :bitfield? false, :calculated-offset 3072} {:type "struct _cef_string_utf16_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_string_utf16_t]], :name "get_function_name", :bitfield? false, :calculated-offset 3136} {:type "struct _cef_v8handler_t *(*)(struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t]] [:coffi.mem/pointer :clong/_cef_v8handler_t]], :name "get_function_handler", :bitfield? false, :calculated-offset 3200} {:type "struct _cef_v8value_t *(*)(struct _cef_v8value_t *, struct _cef_v8value_t *, unsigned long, struct _cef_v8value_t *const *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]]] [:coffi.mem/pointer :clong/_cef_v8value_t]], :name "execute_function", :bitfield? false, :calculated-offset 3264} {:type "struct _cef_v8value_t *(*)(struct _cef_v8value_t *, struct _cef_v8context_t *, struct _cef_v8value_t *, unsigned long, struct _cef_v8value_t *const *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8context_t] [:coffi.mem/pointer :clong/_cef_v8value_t] :coffi.mem/long [:coffi.mem/pointer [:coffi.mem/pointer :clong/_cef_v8value_t]]] [:coffi.mem/pointer :clong/_cef_v8value_t]], :name "execute_function_with_context", :bitfield? false, :calculated-offset 3328} {:type "int (*)(struct _cef_v8value_t *, struct _cef_v8value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_v8value_t]] :coffi.mem/int], :name "resolve_promise", :bitfield? false, :calculated-offset 3392} {:type "int (*)(struct _cef_v8value_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_v8value_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/int], :name "reject_promise", :bitfield? false, :calculated-offset 3456}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_app_t", :type "CXType_Record", :id :clong/_cef_app_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "void (*)(struct _cef_app_t *, const struct _cef_string_utf16_t *, struct _cef_command_line_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_app_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_command_line_t]] :coffi.mem/void], :name "on_before_command_line_processing", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_app_t *, struct _cef_scheme_registrar_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_app_t] [:coffi.mem/pointer :clong/_cef_scheme_registrar_t]] :coffi.mem/void], :name "on_register_custom_schemes", :bitfield? false, :calculated-offset 384} {:type "struct _cef_resource_bundle_handler_t *(*)(struct _cef_app_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_app_t]] [:coffi.mem/pointer :clong/_cef_resource_bundle_handler_t]], :name "get_resource_bundle_handler", :bitfield? false, :calculated-offset 448} {:type "struct _cef_browser_process_handler_t *(*)(struct _cef_app_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_app_t]] [:coffi.mem/pointer :clong/_cef_browser_process_handler_t]], :name "get_browser_process_handler", :bitfield? false, :calculated-offset 512} {:type "struct _cef_render_process_handler_t *(*)(struct _cef_app_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_app_t]] [:coffi.mem/pointer :clong/_cef_render_process_handler_t]], :name "get_render_process_handler", :bitfield? false, :calculated-offset 576}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_browser_host_t", :type "CXType_Record", :id :clong/_cef_browser_host_t, :size-in-bytes 512, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "struct _cef_browser_t *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] [:coffi.mem/pointer :clong/_cef_browser_t]], :name "get_browser", :bitfield? false, :calculated-offset 320} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "close_browser", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "try_close_browser", :bitfield? false, :calculated-offset 448} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "set_focus", :bitfield? false, :calculated-offset 512} {:type "void *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/pointer], :name "get_window_handle", :bitfield? false, :calculated-offset 576} {:type "void *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/pointer], :name "get_opener_window_handle", :bitfield? false, :calculated-offset 640} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "has_view", :bitfield? false, :calculated-offset 704} {:type "struct _cef_client_t *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] [:coffi.mem/pointer :clong/_cef_client_t]], :name "get_client", :bitfield? false, :calculated-offset 768} {:type "struct _cef_request_context_t *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] [:coffi.mem/pointer :clong/_cef_request_context_t]], :name "get_request_context", :bitfield? false, :calculated-offset 832} {:type "double (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/double], :name "get_zoom_level", :bitfield? false, :calculated-offset 896} {:type "void (*)(struct _cef_browser_host_t *, double)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/double] :coffi.mem/void], :name "set_zoom_level", :bitfield? false, :calculated-offset 960} {:type "void (*)(struct _cef_browser_host_t *, cef_file_dialog_mode_t, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_string_list_t *, struct _cef_run_file_dialog_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_list_t] [:coffi.mem/pointer :clong/_cef_run_file_dialog_callback_t]] :coffi.mem/void], :name "run_file_dialog", :bitfield? false, :calculated-offset 1024} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "start_download", :bitfield? false, :calculated-offset 1088} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *, int, unsigned int, int, struct _cef_download_image_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int [:coffi.mem/pointer :clong/_cef_download_image_callback_t]] :coffi.mem/void], :name "download_image", :bitfield? false, :calculated-offset 1152} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "print", :bitfield? false, :calculated-offset 1216} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *, const struct _cef_pdf_print_settings_t *, struct _cef_pdf_print_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_pdf_print_settings_t] [:coffi.mem/pointer :clong/_cef_pdf_print_callback_t]] :coffi.mem/void], :name "print_to_pdf", :bitfield? false, :calculated-offset 1280} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *, int, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "find", :bitfield? false, :calculated-offset 1344} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "stop_finding", :bitfield? false, :calculated-offset 1408} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_window_info_t *, struct _cef_client_t *, const struct _cef_browser_settings_t *, const struct _cef_point_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_window_info_t] [:coffi.mem/pointer :clong/_cef_client_t] [:coffi.mem/pointer :clong/_cef_browser_settings_t] [:coffi.mem/pointer :clong/_cef_point_t]] :coffi.mem/void], :name "show_dev_tools", :bitfield? false, :calculated-offset 1472} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "close_dev_tools", :bitfield? false, :calculated-offset 1536} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "has_dev_tools", :bitfield? false, :calculated-offset 1600} {:type "int (*)(struct _cef_browser_host_t *, const void *, unsigned long)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/pointer :coffi.mem/long] :coffi.mem/int], :name "send_dev_tools_message", :bitfield? false, :calculated-offset 1664} {:type "int (*)(struct _cef_browser_host_t *, int, const struct _cef_string_utf16_t *, struct _cef_dictionary_value_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_dictionary_value_t]] :coffi.mem/int], :name "execute_dev_tools_method", :bitfield? false, :calculated-offset 1728} {:type "struct _cef_registration_t *(*)(struct _cef_browser_host_t *, struct _cef_dev_tools_message_observer_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_dev_tools_message_observer_t]] [:coffi.mem/pointer :clong/_cef_registration_t]], :name "add_dev_tools_message_observer", :bitfield? false, :calculated-offset 1792} {:type "void (*)(struct _cef_browser_host_t *, struct _cef_navigation_entry_visitor_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_navigation_entry_visitor_t] :coffi.mem/int] :coffi.mem/void], :name "get_navigation_entries", :bitfield? false, :calculated-offset 1856} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "replace_misspelling", :bitfield? false, :calculated-offset 1920} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t]] :coffi.mem/void], :name "add_word_to_dictionary", :bitfield? false, :calculated-offset 1984} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "is_window_rendering_disabled", :bitfield? false, :calculated-offset 2048} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "was_resized", :bitfield? false, :calculated-offset 2112} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "was_hidden", :bitfield? false, :calculated-offset 2176} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "notify_screen_info_changed", :bitfield? false, :calculated-offset 2240} {:type "void (*)(struct _cef_browser_host_t *, cef_paint_element_type_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "invalidate", :bitfield? false, :calculated-offset 2304} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "send_external_begin_frame", :bitfield? false, :calculated-offset 2368} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_key_event_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_key_event_t]] :coffi.mem/void], :name "send_key_event", :bitfield? false, :calculated-offset 2432} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_mouse_event_t *, cef_mouse_button_type_t, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "send_mouse_click_event", :bitfield? false, :calculated-offset 2496} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_mouse_event_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t] :coffi.mem/int] :coffi.mem/void], :name "send_mouse_move_event", :bitfield? false, :calculated-offset 2560} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_mouse_event_t *, int, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t] :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "send_mouse_wheel_event", :bitfield? false, :calculated-offset 2624} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_touch_event_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_touch_event_t]] :coffi.mem/void], :name "send_touch_event", :bitfield? false, :calculated-offset 2688} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "send_capture_lost_event", :bitfield? false, :calculated-offset 2752} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "notify_move_or_resize_started", :bitfield? false, :calculated-offset 2816} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "get_windowless_frame_rate", :bitfield? false, :calculated-offset 2880} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "set_windowless_frame_rate", :bitfield? false, :calculated-offset 2944} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *, unsigned long, const struct _cef_composition_underline_t *, const struct _cef_range_t *, const struct _cef_range_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/long [:coffi.mem/pointer :clong/_cef_composition_underline_t] [:coffi.mem/pointer :clong/_cef_range_t] [:coffi.mem/pointer :clong/_cef_range_t]] :coffi.mem/void], :name "ime_set_composition", :bitfield? false, :calculated-offset 3008} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_string_utf16_t *, const struct _cef_range_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_range_t] :coffi.mem/int] :coffi.mem/void], :name "ime_commit_text", :bitfield? false, :calculated-offset 3072} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "ime_finish_composing_text", :bitfield? false, :calculated-offset 3136} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "ime_cancel_composition", :bitfield? false, :calculated-offset 3200} {:type "void (*)(struct _cef_browser_host_t *, struct _cef_drag_data_t *, const struct _cef_mouse_event_t *, cef_drag_operations_mask_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_drag_data_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t] :coffi.mem/int] :coffi.mem/void], :name "drag_target_drag_enter", :bitfield? false, :calculated-offset 3264} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_mouse_event_t *, cef_drag_operations_mask_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t] :coffi.mem/int] :coffi.mem/void], :name "drag_target_drag_over", :bitfield? false, :calculated-offset 3328} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "drag_target_drag_leave", :bitfield? false, :calculated-offset 3392} {:type "void (*)(struct _cef_browser_host_t *, const struct _cef_mouse_event_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] [:coffi.mem/pointer :clong/_cef_mouse_event_t]] :coffi.mem/void], :name "drag_target_drop", :bitfield? false, :calculated-offset 3456} {:type "void (*)(struct _cef_browser_host_t *, int, int, cef_drag_operations_mask_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int :coffi.mem/int :coffi.mem/int] :coffi.mem/void], :name "drag_source_ended_at", :bitfield? false, :calculated-offset 3520} {:type "void (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/void], :name "drag_source_system_drag_ended", :bitfield? false, :calculated-offset 3584} {:type "struct _cef_navigation_entry_t *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] [:coffi.mem/pointer :clong/_cef_navigation_entry_t]], :name "get_visible_navigation_entry", :bitfield? false, :calculated-offset 3648} {:type "void (*)(struct _cef_browser_host_t *, cef_state_t)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "set_accessibility_state", :bitfield? false, :calculated-offset 3712} {:type "void (*)(struct _cef_browser_host_t *, int, const struct _cef_size_t *, const struct _cef_size_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_size_t] [:coffi.mem/pointer :clong/_cef_size_t]] :coffi.mem/void], :name "set_auto_resize_enabled", :bitfield? false, :calculated-offset 3776} {:type "struct _cef_extension_t *(*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] [:coffi.mem/pointer :clong/_cef_extension_t]], :name "get_extension", :bitfield? false, :calculated-offset 3840} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "is_background_host", :bitfield? false, :calculated-offset 3904} {:type "void (*)(struct _cef_browser_host_t *, int)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t] :coffi.mem/int] :coffi.mem/void], :name "set_audio_muted", :bitfield? false, :calculated-offset 3968} {:type "int (*)(struct _cef_browser_host_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_browser_host_t]] :coffi.mem/int], :name "is_audio_muted", :bitfield? false, :calculated-offset 4032}]} {:kind "CXCursor_StructDecl", :spelling "struct _cef_cookie_manager_t", :type "CXType_Record", :id :clong/_cef_cookie_manager_t, :size-in-bytes 80, :fields [{:type "struct _cef_base_ref_counted_t", :datatype :clong/_cef_base_ref_counted_t, :name "base", :bitfield? false, :calculated-offset 0} {:type "int (*)(struct _cef_cookie_manager_t *, struct _cef_cookie_visitor_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_manager_t] [:coffi.mem/pointer :clong/_cef_cookie_visitor_t]] :coffi.mem/int], :name "visit_all_cookies", :bitfield? false, :calculated-offset 320} {:type "int (*)(struct _cef_cookie_manager_t *, const struct _cef_string_utf16_t *, int, struct _cef_cookie_visitor_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] :coffi.mem/int [:coffi.mem/pointer :clong/_cef_cookie_visitor_t]] :coffi.mem/int], :name "visit_url_cookies", :bitfield? false, :calculated-offset 384} {:type "int (*)(struct _cef_cookie_manager_t *, const struct _cef_string_utf16_t *, const struct _cef_cookie_t *, struct _cef_set_cookie_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_cookie_t] [:coffi.mem/pointer :clong/_cef_set_cookie_callback_t]] :coffi.mem/int], :name "set_cookie", :bitfield? false, :calculated-offset 448} {:type "int (*)(struct _cef_cookie_manager_t *, const struct _cef_string_utf16_t *, const struct _cef_string_utf16_t *, struct _cef_delete_cookies_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_manager_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_string_utf16_t] [:coffi.mem/pointer :clong/_cef_delete_cookies_callback_t]] :coffi.mem/int], :name "delete_cookies", :bitfield? false, :calculated-offset 512} {:type "int (*)(struct _cef_cookie_manager_t *, struct _cef_completion_callback_t *)", :datatype [:coffi.ffi/fn [[:coffi.mem/pointer :clong/_cef_cookie_manager_t] [:coffi.mem/pointer :clong/_cef_completion_callback_t]] :coffi.mem/int], :name "flush_store", :bitfield? false, :calculated-offset 576}]}), :enums ({:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_REALTIME", :type "CXType_Int", :name "_CLOCK_REALTIME", :value 0, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC", :type "CXType_Int", :name "_CLOCK_MONOTONIC", :value 6, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC_RAW", :type "CXType_Int", :name "_CLOCK_MONOTONIC_RAW", :value 4, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC_RAW_APPROX", :type "CXType_Int", :name "_CLOCK_MONOTONIC_RAW_APPROX", :value 5, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_UPTIME_RAW", :type "CXType_Int", :name "_CLOCK_UPTIME_RAW", :value 8, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_UPTIME_RAW_APPROX", :type "CXType_Int", :name "_CLOCK_UPTIME_RAW_APPROX", :value 9, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_PROCESS_CPUTIME_ID", :type "CXType_Int", :name "_CLOCK_PROCESS_CPUTIME_ID", :value 12, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_THREAD_CPUTIME_ID", :type "CXType_Int", :name "_CLOCK_THREAD_CPUTIME_ID", :value 16, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_REALTIME", :type "CXType_Int", :name "_CLOCK_REALTIME", :value 0, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC", :type "CXType_Int", :name "_CLOCK_MONOTONIC", :value 6, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC_RAW", :type "CXType_Int", :name "_CLOCK_MONOTONIC_RAW", :value 4, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_MONOTONIC_RAW_APPROX", :type "CXType_Int", :name "_CLOCK_MONOTONIC_RAW_APPROX", :value 5, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_UPTIME_RAW", :type "CXType_Int", :name "_CLOCK_UPTIME_RAW", :value 8, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_UPTIME_RAW_APPROX", :type "CXType_Int", :name "_CLOCK_UPTIME_RAW_APPROX", :value 9, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_PROCESS_CPUTIME_ID", :type "CXType_Int", :name "_CLOCK_PROCESS_CPUTIME_ID", :value 12, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "_CLOCK_THREAD_CPUTIME_ID", :type "CXType_Int", :name "_CLOCK_THREAD_CPUTIME_ID", :value 16, :enum "clockid_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_COOKIES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_COOKIES", :value 0, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IMAGES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IMAGES", :value 1, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT", :value 2, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_POPUPS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_POPUPS", :value 3, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_GEOLOCATION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_GEOLOCATION", :value 4, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATIONS", :value 5, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTO_SELECT_CERTIFICATE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTO_SELECT_CERTIFICATE", :value 6, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIXEDSCRIPT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIXEDSCRIPT", :value 7, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_MIC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_MIC", :value 8, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_CAMERA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_CAMERA", :value 9, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PROTOCOL_HANDLERS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PROTOCOL_HANDLERS", :value 10, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DEPRECATED_PPAPI_BROKER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DEPRECATED_PPAPI_BROKER", :value 11, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTOMATIC_DOWNLOADS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTOMATIC_DOWNLOADS", :value 12, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIDI_SYSEX", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIDI_SYSEX", :value 13, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SSL_CERT_DECISIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SSL_CERT_DECISIONS", :value 14, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PROTECTED_MEDIA_IDENTIFIER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PROTECTED_MEDIA_IDENTIFIER", :value 15, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_APP_BANNER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_APP_BANNER", :value 16, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SITE_ENGAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SITE_ENGAGEMENT", :value 17, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DURABLE_STORAGE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DURABLE_STORAGE", :value 18, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_USB_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_USB_CHOOSER_DATA", :value 19, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_GUARD", :value 20, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BACKGROUND_SYNC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BACKGROUND_SYNC", :value 21, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTOPLAY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTOPLAY", :value 22, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IMPORTANT_SITE_INFO", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IMPORTANT_SITE_INFO", :value 23, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOBLOCKER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOBLOCKER_DATA", :value 24, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ADS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ADS", :value 25, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ADS_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ADS_DATA", :value 26, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores metadata for the subresource filter to aid in\n  /// decisions for whether or not to show the UI."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIDI", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIDI", :value 27, :enum "cef_content_setting_types_t", :raw-comment "/// This is special-cased in the permissions layer to always allow, and as\n  /// such doesn't have associated prefs data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PASSWORD_PROTECTION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PASSWORD_PROTECTION", :value 28, :enum "cef_content_setting_types_t", :raw-comment "/// This content setting type is for caching password protection service's\n  /// verdicts of each origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIA_ENGAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIA_ENGAGEMENT", :value 29, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores engagement data for media related to a\n  /// specific origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SOUND", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SOUND", :value 30, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not the site can play audible\n  /// sound. This will not block playback but instead the user will not hear it."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIENT_HINTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIENT_HINTS", :value 31, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the list of client hints that the origin\n  /// requested the browser to remember. The browser is expected to send all\n  /// client hints in the HTTP request headers for every resource requested\n  /// from that origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SENSORS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SENSORS", :value 32, :enum "cef_content_setting_types_t", :raw-comment "/// Generic Sensor API covering ambient-light-sensor, accelerometer, gyroscope\n  /// and magnetometer are all mapped to a single content_settings_type.\n  /// Setting for the Generic Sensor API covering ambient-light-sensor,\n  /// accelerometer, gyroscope and magnetometer. These are all mapped to a\n  /// single ContentSettingsType."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ACCESSIBILITY_EVENTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ACCESSIBILITY_EVENTS", :value 33, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not the user has granted the site\n  /// permission to respond to accessibility events, which can be used to\n  /// provide a custom accessibility experience. Requires explicit user consent\n  /// because some users may not want sites to know they're using assistive\n  /// technology."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PAYMENT_HANDLER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PAYMENT_HANDLER", :value 34, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to install a payment handler."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_USB_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_USB_GUARD", :value 35, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow sites to ask for permission\n  /// to access USB devices. If this is allowed specific device permissions are\n  /// stored under USB_CHOOSER_DATA."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BACKGROUND_FETCH", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BACKGROUND_FETCH", :value 36, :enum "cef_content_setting_types_t", :raw-comment "/// Nothing is stored in this setting at present. Please refer to\n  /// BackgroundFetchPermissionContext for details on how this permission\n  /// is ascertained."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_INTENT_PICKER_DISPLAY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_INTENT_PICKER_DISPLAY", :value 37, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the amount of times the user has dismissed\n  /// intent picker UI without explicitly choosing an option."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IDLE_DETECTION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IDLE_DETECTION", :value 38, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to detect user active/idle state."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_GET_DISPLAY_MEDIA_SET_SELECT_ALL_SCREENS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_GET_DISPLAY_MEDIA_SET_SELECT_ALL_SCREENS", :value 39, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for enabling auto-select of all screens for getDisplayMediaSet."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SERIAL_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SERIAL_GUARD", :value 40, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to serial ports. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a port. The\n  /// permissions granted to access particular ports are stored in the \"chooser\n  /// data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SERIAL_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SERIAL_CHOOSER_DATA", :value 41, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to serial ports. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a port. The\n  /// permissions granted to access particular ports are stored in the \"chooser\n  /// data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERIODIC_BACKGROUND_SYNC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERIODIC_BACKGROUND_SYNC", :value 42, :enum "cef_content_setting_types_t", :raw-comment "/// Nothing is stored in this setting at present. Please refer to\n  /// PeriodicBackgroundSyncPermissionContext for details on how this permission\n  /// is ascertained.\n  /// This content setting is not registered because it does not require access\n  /// to any existing providers."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_SCANNING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_SCANNING", :value 43, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow sites to ask for permission\n  /// to do Bluetooth scanning."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HID_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HID_GUARD", :value 44, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to HID devices. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a device.\n  /// The permissions granted to access particular devices are stored in the\n  /// \"chooser data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HID_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HID_CHOOSER_DATA", :value 45, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to HID devices. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a device.\n  /// The permissions granted to access particular devices are stored in the\n  /// \"chooser data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SCREEN", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SCREEN", :value 46, :enum "cef_content_setting_types_t", :raw-comment "/// Wake Lock API, which has two lock types: screen and system locks.\n  /// Currently, screen locks do not need any additional permission, and system\n  /// locks are always denied while the right UI is worked out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SYSTEM", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SYSTEM", :value 47, :enum "cef_content_setting_types_t", :raw-comment "/// Wake Lock API, which has two lock types: screen and system locks.\n  /// Currently, screen locks do not need any additional permission, and system\n  /// locks are always denied while the right UI is worked out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_LEGACY_COOKIE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_LEGACY_COOKIE_ACCESS", :value 48, :enum "cef_content_setting_types_t", :raw-comment "/// Legacy SameSite cookie behavior. This disables SameSite=Lax-by-default,\n  /// SameSite=None requires Secure, and Schemeful Same-Site, forcing the\n  /// legacy behavior wherein 1) cookies that don't specify SameSite are treated\n  /// as SameSite=None, 2) SameSite=None cookies are not required to be Secure,\n  /// and 3) schemeful same-site is not active.\n  ///\n  /// This will also be used to revert to legacy behavior when future changes\n  /// in cookie handling are introduced."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_WRITE_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_WRITE_GUARD", :value 49, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings which stores whether to allow sites to ask for permission\n  /// to save changes to an original file selected by the user through the\n  /// File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NFC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NFC", :value 50, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to exchange data with NFC\n  /// devices."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_CHOOSER_DATA", :value 51, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular\n  /// Bluetooth devices."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_READ_WRITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_READ_WRITE", :value 52, :enum "cef_content_setting_types_t", :raw-comment "/// Full access to the system clipboard (sanitized read without user gesture,\n  /// and unsanitized read and write with user gesture)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_SANITIZED_WRITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_SANITIZED_WRITE", :value 53, :enum "cef_content_setting_types_t", :raw-comment "/// This is special-cased in the permissions layer to always allow, and as\n  /// such doesn't have associated prefs data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SAFE_BROWSING_URL_CHECK_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SAFE_BROWSING_URL_CHECK_DATA", :value 54, :enum "cef_content_setting_types_t", :raw-comment "/// This content setting type is for caching safe browsing real time url\n  /// check's verdicts of each origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_VR", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_VR", :value 55, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether a site is allowed to request AR or VR sessions with\n  /// the WebXr Device API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AR", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AR", :value 56, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether a site is allowed to request AR or VR sessions with\n  /// the WebXr Device API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_READ_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_READ_GUARD", :value 57, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow site to open and read files\n  /// and directories selected through the File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_STORAGE_ACCESS", :value 58, :enum "cef_content_setting_types_t", :raw-comment "/// Access to first party storage in a third-party context. Exceptions are\n  /// scoped to the combination of requesting/top-level origin, and are managed\n  /// through the Storage Access API. For the time being, this content setting\n  /// exists in parallel to third-party cookie rules stored in COOKIES."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CAMERA_PAN_TILT_ZOOM", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CAMERA_PAN_TILT_ZOOM", :value 59, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow a site to control camera\n  /// movements. It does not give access to camera."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WINDOW_MANAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WINDOW_MANAGEMENT", :value 60, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting for Screen Enumeration and Screen Detail functionality.\n  /// Permits access to detailed multi-screen information, like size and\n  /// position. Permits placing fullscreen and windowed content on specific\n  /// screens. See also: https://w3c.github.io/window-placement"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_INSECURE_LOCAL_NETWORK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_INSECURE_LOCAL_NETWORK", :value 61, :enum "cef_content_setting_types_t", :raw-comment "/// Stores whether to allow insecure websites to make local network requests.\n  /// See also: https://wicg.github.io/local-network-access\n  /// Set through enterprise policies only."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_LOCAL_FONTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_LOCAL_FONTS", :value 62, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not a site can access low-level\n  /// locally installed font data using the Local Fonts Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOREVOCATION_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOREVOCATION_DATA", :value 63, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per-origin state for permission auto-revocation (for all permission\n  /// types)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_LAST_PICKED_DIRECTORY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_LAST_PICKED_DIRECTORY", :value 64, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per-origin state of the most recently selected directory for the\n  /// use by the File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DISPLAY_CAPTURE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DISPLAY_CAPTURE", :value 65, :enum "cef_content_setting_types_t", :raw-comment "/// Controls access to the getDisplayMedia API when {preferCurrentTab: true}\n  /// is specified."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_ACCESS_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_ACCESS_CHOOSER_DATA", :value 66, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions metadata granted to paths on the\n  /// local file system via the File System Access API.\n  /// |FILE_SYSTEM_WRITE_GUARD| is the corresponding \"guard\" setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_SHARING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_SHARING", :value 67, :enum "cef_content_setting_types_t", :raw-comment "/// Stores a grant that allows a relying party to send a request for identity\n  /// information to specified identity providers, potentially through any\n  /// anti-tracking measures that would otherwise prevent it. This setting is\n  /// associated with the relying party's origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT_JIT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT_JIT", :value 68, :enum "cef_content_setting_types_t", :raw-comment "/// Whether to use the v8 optimized JIT for running JavaScript on the page."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HTTP_ALLOWED", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HTTP_ALLOWED", :value 69, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores user decisions to allow loading a site over\n  /// HTTP. Entries are added by hostname when a user bypasses the HTTPS-First\n  /// Mode interstitial warning when a site does not support HTTPS. Allowed\n  /// hosts are exact hostname matches -- subdomains of a host on the allowlist\n  /// must be separately allowlisted."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FORMFILL_METADATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FORMFILL_METADATA", :value 70, :enum "cef_content_setting_types_t", :raw-comment "/// Stores metadata related to form fill, such as e.g. whether user data was\n  /// autofilled on a specific website."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_ACTIVE_SESSION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_ACTIVE_SESSION", :value 71, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate that there is an active federated sign-in session\n  /// between a specified relying party and a specified identity provider for\n  /// a specified account. When this is present it allows access to session\n  /// management capabilities between the sites. This setting is associated\n  /// with the relying party's origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTO_DARK_WEB_CONTENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTO_DARK_WEB_CONTENT", :value 72, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether Chrome should automatically apply darkening to\n  /// web content."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REQUEST_DESKTOP_SITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REQUEST_DESKTOP_SITE", :value 73, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether Chrome should request the desktop view of a\n  /// site instead of the mobile one."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_API", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_API", :value 74, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether browser should allow signing into a website\n  /// via the browser FedCM API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_INTERACTIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_INTERACTIONS", :value 75, :enum "cef_content_setting_types_t", :raw-comment "/// Stores notification interactions per origin for the past 90 days.\n  /// Interactions per origin are pre-aggregated over seven-day windows: A\n  /// notification interaction or display is assigned to the last Monday\n  /// midnight in local time."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REDUCED_ACCEPT_LANGUAGE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REDUCED_ACCEPT_LANGUAGE", :value 76, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the last reduced accept language negotiated\n  /// for a given origin, to be used on future visits to the origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_PERMISSION_REVIEW", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_PERMISSION_REVIEW", :value 77, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which is used for NotificationPermissionReviewService to\n  /// store origin blocklist from review notification permissions feature."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_GUARD", :value 78, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular devices\n  /// in private network."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_CHOOSER_DATA", :value 79, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular devices\n  /// in private network."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_SIGNIN_STATUS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_SIGNIN_STATUS", :value 80, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores whether the browser has observed the user\n  /// signing into an identity-provider based on observing the IdP-SignIn-Status\n  /// HTTP header."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REVOKED_UNUSED_SITE_PERMISSIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REVOKED_UNUSED_SITE_PERMISSIONS", :value 81, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which is used for UnusedSitePermissionsService to\n  /// store revoked permissions of unused sites from unused site permissions\n  /// feature."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_TOP_LEVEL_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_TOP_LEVEL_STORAGE_ACCESS", :value 82, :enum "cef_content_setting_types_t", :raw-comment "/// Similar to STORAGE_ACCESS, but applicable at the page-level rather than\n  /// being specific to a frame."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_AUTO_REAUTHN_PERMISSION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_AUTO_REAUTHN_PERMISSION", :value 83, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether user has opted in to allowing auto re-authn\n  /// via the FedCM API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_REGISTRATION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_REGISTRATION", :value 84, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores whether the user has explicitly registered\n  /// a website as an identity-provider."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ANTI_ABUSE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ANTI_ABUSE", :value 85, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which is used to indicate whether anti-abuse functionality\n  /// should be enabled."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_THIRD_PARTY_STORAGE_PARTITIONING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_THIRD_PARTY_STORAGE_PARTITIONING", :value 86, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting used to indicate whether third-party storage partitioning\n  /// should be enabled."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HTTPS_ENFORCED", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HTTPS_ENFORCED", :value 87, :enum "cef_content_setting_types_t", :raw-comment "/// Used to indicate whether HTTPS-First Mode is enabled on the hostname."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_COOKIE_CONTROLS_METADATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_COOKIE_CONTROLS_METADATA", :value 88, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per origin metadata for cookie controls."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_TPCD_SUPPORT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_TPCD_SUPPORT", :value 89, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for supporting 3PCD."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NUM_TYPES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NUM_TYPES", :value 90, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for supporting 3PCD."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_COOKIES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_COOKIES", :value 0, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IMAGES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IMAGES", :value 1, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT", :value 2, :enum "cef_content_setting_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_POPUPS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_POPUPS", :value 3, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_GEOLOCATION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_GEOLOCATION", :value 4, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATIONS", :value 5, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTO_SELECT_CERTIFICATE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTO_SELECT_CERTIFICATE", :value 6, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIXEDSCRIPT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIXEDSCRIPT", :value 7, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_MIC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_MIC", :value 8, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_CAMERA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIASTREAM_CAMERA", :value 9, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PROTOCOL_HANDLERS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PROTOCOL_HANDLERS", :value 10, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DEPRECATED_PPAPI_BROKER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DEPRECATED_PPAPI_BROKER", :value 11, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTOMATIC_DOWNLOADS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTOMATIC_DOWNLOADS", :value 12, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIDI_SYSEX", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIDI_SYSEX", :value 13, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SSL_CERT_DECISIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SSL_CERT_DECISIONS", :value 14, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PROTECTED_MEDIA_IDENTIFIER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PROTECTED_MEDIA_IDENTIFIER", :value 15, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_APP_BANNER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_APP_BANNER", :value 16, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SITE_ENGAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SITE_ENGAGEMENT", :value 17, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DURABLE_STORAGE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DURABLE_STORAGE", :value 18, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_USB_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_USB_CHOOSER_DATA", :value 19, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_GUARD", :value 20, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BACKGROUND_SYNC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BACKGROUND_SYNC", :value 21, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTOPLAY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTOPLAY", :value 22, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IMPORTANT_SITE_INFO", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IMPORTANT_SITE_INFO", :value 23, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOBLOCKER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOBLOCKER_DATA", :value 24, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ADS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ADS", :value 25, :enum "cef_content_setting_types_t", :raw-comment "/// This setting governs both popups and unwanted redirects like tab-unders\n  /// and framebusting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ADS_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ADS_DATA", :value 26, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores metadata for the subresource filter to aid in\n  /// decisions for whether or not to show the UI."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MIDI", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MIDI", :value 27, :enum "cef_content_setting_types_t", :raw-comment "/// This is special-cased in the permissions layer to always allow, and as\n  /// such doesn't have associated prefs data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PASSWORD_PROTECTION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PASSWORD_PROTECTION", :value 28, :enum "cef_content_setting_types_t", :raw-comment "/// This content setting type is for caching password protection service's\n  /// verdicts of each origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_MEDIA_ENGAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_MEDIA_ENGAGEMENT", :value 29, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores engagement data for media related to a\n  /// specific origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SOUND", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SOUND", :value 30, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not the site can play audible\n  /// sound. This will not block playback but instead the user will not hear it."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIENT_HINTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIENT_HINTS", :value 31, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the list of client hints that the origin\n  /// requested the browser to remember. The browser is expected to send all\n  /// client hints in the HTTP request headers for every resource requested\n  /// from that origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SENSORS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SENSORS", :value 32, :enum "cef_content_setting_types_t", :raw-comment "/// Generic Sensor API covering ambient-light-sensor, accelerometer, gyroscope\n  /// and magnetometer are all mapped to a single content_settings_type.\n  /// Setting for the Generic Sensor API covering ambient-light-sensor,\n  /// accelerometer, gyroscope and magnetometer. These are all mapped to a\n  /// single ContentSettingsType."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ACCESSIBILITY_EVENTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ACCESSIBILITY_EVENTS", :value 33, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not the user has granted the site\n  /// permission to respond to accessibility events, which can be used to\n  /// provide a custom accessibility experience. Requires explicit user consent\n  /// because some users may not want sites to know they're using assistive\n  /// technology."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PAYMENT_HANDLER", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PAYMENT_HANDLER", :value 34, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to install a payment handler."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_USB_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_USB_GUARD", :value 35, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow sites to ask for permission\n  /// to access USB devices. If this is allowed specific device permissions are\n  /// stored under USB_CHOOSER_DATA."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BACKGROUND_FETCH", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BACKGROUND_FETCH", :value 36, :enum "cef_content_setting_types_t", :raw-comment "/// Nothing is stored in this setting at present. Please refer to\n  /// BackgroundFetchPermissionContext for details on how this permission\n  /// is ascertained."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_INTENT_PICKER_DISPLAY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_INTENT_PICKER_DISPLAY", :value 37, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the amount of times the user has dismissed\n  /// intent picker UI without explicitly choosing an option."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_IDLE_DETECTION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_IDLE_DETECTION", :value 38, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to detect user active/idle state."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_GET_DISPLAY_MEDIA_SET_SELECT_ALL_SCREENS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_GET_DISPLAY_MEDIA_SET_SELECT_ALL_SCREENS", :value 39, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for enabling auto-select of all screens for getDisplayMediaSet."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SERIAL_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SERIAL_GUARD", :value 40, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to serial ports. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a port. The\n  /// permissions granted to access particular ports are stored in the \"chooser\n  /// data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SERIAL_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SERIAL_CHOOSER_DATA", :value 41, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to serial ports. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a port. The\n  /// permissions granted to access particular ports are stored in the \"chooser\n  /// data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERIODIC_BACKGROUND_SYNC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERIODIC_BACKGROUND_SYNC", :value 42, :enum "cef_content_setting_types_t", :raw-comment "/// Nothing is stored in this setting at present. Please refer to\n  /// PeriodicBackgroundSyncPermissionContext for details on how this permission\n  /// is ascertained.\n  /// This content setting is not registered because it does not require access\n  /// to any existing providers."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_SCANNING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_SCANNING", :value 43, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow sites to ask for permission\n  /// to do Bluetooth scanning."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HID_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HID_GUARD", :value 44, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to HID devices. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a device.\n  /// The permissions granted to access particular devices are stored in the\n  /// \"chooser data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HID_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HID_CHOOSER_DATA", :value 45, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings for access to HID devices. The \"guard\" content setting\n  /// stores whether to allow sites to ask for permission to access a device.\n  /// The permissions granted to access particular devices are stored in the\n  /// \"chooser data\" website setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SCREEN", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SCREEN", :value 46, :enum "cef_content_setting_types_t", :raw-comment "/// Wake Lock API, which has two lock types: screen and system locks.\n  /// Currently, screen locks do not need any additional permission, and system\n  /// locks are always denied while the right UI is worked out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SYSTEM", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WAKE_LOCK_SYSTEM", :value 47, :enum "cef_content_setting_types_t", :raw-comment "/// Wake Lock API, which has two lock types: screen and system locks.\n  /// Currently, screen locks do not need any additional permission, and system\n  /// locks are always denied while the right UI is worked out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_LEGACY_COOKIE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_LEGACY_COOKIE_ACCESS", :value 48, :enum "cef_content_setting_types_t", :raw-comment "/// Legacy SameSite cookie behavior. This disables SameSite=Lax-by-default,\n  /// SameSite=None requires Secure, and Schemeful Same-Site, forcing the\n  /// legacy behavior wherein 1) cookies that don't specify SameSite are treated\n  /// as SameSite=None, 2) SameSite=None cookies are not required to be Secure,\n  /// and 3) schemeful same-site is not active.\n  ///\n  /// This will also be used to revert to legacy behavior when future changes\n  /// in cookie handling are introduced."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_WRITE_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_WRITE_GUARD", :value 49, :enum "cef_content_setting_types_t", :raw-comment "/// Content settings which stores whether to allow sites to ask for permission\n  /// to save changes to an original file selected by the user through the\n  /// File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NFC", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NFC", :value 50, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether to allow a website to exchange data with NFC\n  /// devices."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_BLUETOOTH_CHOOSER_DATA", :value 51, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular\n  /// Bluetooth devices."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_READ_WRITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_READ_WRITE", :value 52, :enum "cef_content_setting_types_t", :raw-comment "/// Full access to the system clipboard (sanitized read without user gesture,\n  /// and unsanitized read and write with user gesture)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_SANITIZED_WRITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CLIPBOARD_SANITIZED_WRITE", :value 53, :enum "cef_content_setting_types_t", :raw-comment "/// This is special-cased in the permissions layer to always allow, and as\n  /// such doesn't have associated prefs data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_SAFE_BROWSING_URL_CHECK_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_SAFE_BROWSING_URL_CHECK_DATA", :value 54, :enum "cef_content_setting_types_t", :raw-comment "/// This content setting type is for caching safe browsing real time url\n  /// check's verdicts of each origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_VR", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_VR", :value 55, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether a site is allowed to request AR or VR sessions with\n  /// the WebXr Device API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AR", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AR", :value 56, :enum "cef_content_setting_types_t", :raw-comment "/// Used to store whether a site is allowed to request AR or VR sessions with\n  /// the WebXr Device API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_READ_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_READ_GUARD", :value 57, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow site to open and read files\n  /// and directories selected through the File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_STORAGE_ACCESS", :value 58, :enum "cef_content_setting_types_t", :raw-comment "/// Access to first party storage in a third-party context. Exceptions are\n  /// scoped to the combination of requesting/top-level origin, and are managed\n  /// through the Storage Access API. For the time being, this content setting\n  /// exists in parallel to third-party cookie rules stored in COOKIES."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_CAMERA_PAN_TILT_ZOOM", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_CAMERA_PAN_TILT_ZOOM", :value 59, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether to allow a site to control camera\n  /// movements. It does not give access to camera."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_WINDOW_MANAGEMENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_WINDOW_MANAGEMENT", :value 60, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting for Screen Enumeration and Screen Detail functionality.\n  /// Permits access to detailed multi-screen information, like size and\n  /// position. Permits placing fullscreen and windowed content on specific\n  /// screens. See also: https://w3c.github.io/window-placement"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_INSECURE_LOCAL_NETWORK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_INSECURE_LOCAL_NETWORK", :value 61, :enum "cef_content_setting_types_t", :raw-comment "/// Stores whether to allow insecure websites to make local network requests.\n  /// See also: https://wicg.github.io/local-network-access\n  /// Set through enterprise policies only."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_LOCAL_FONTS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_LOCAL_FONTS", :value 62, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores whether or not a site can access low-level\n  /// locally installed font data using the Local Fonts Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOREVOCATION_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PERMISSION_AUTOREVOCATION_DATA", :value 63, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per-origin state for permission auto-revocation (for all permission\n  /// types)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_LAST_PICKED_DIRECTORY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_LAST_PICKED_DIRECTORY", :value 64, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per-origin state of the most recently selected directory for the\n  /// use by the File System Access API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_DISPLAY_CAPTURE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_DISPLAY_CAPTURE", :value 65, :enum "cef_content_setting_types_t", :raw-comment "/// Controls access to the getDisplayMedia API when {preferCurrentTab: true}\n  /// is specified."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_ACCESS_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FILE_SYSTEM_ACCESS_CHOOSER_DATA", :value 66, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions metadata granted to paths on the\n  /// local file system via the File System Access API.\n  /// |FILE_SYSTEM_WRITE_GUARD| is the corresponding \"guard\" setting."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_SHARING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_SHARING", :value 67, :enum "cef_content_setting_types_t", :raw-comment "/// Stores a grant that allows a relying party to send a request for identity\n  /// information to specified identity providers, potentially through any\n  /// anti-tracking measures that would otherwise prevent it. This setting is\n  /// associated with the relying party's origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT_JIT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_JAVASCRIPT_JIT", :value 68, :enum "cef_content_setting_types_t", :raw-comment "/// Whether to use the v8 optimized JIT for running JavaScript on the page."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HTTP_ALLOWED", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HTTP_ALLOWED", :value 69, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which stores user decisions to allow loading a site over\n  /// HTTP. Entries are added by hostname when a user bypasses the HTTPS-First\n  /// Mode interstitial warning when a site does not support HTTPS. Allowed\n  /// hosts are exact hostname matches -- subdomains of a host on the allowlist\n  /// must be separately allowlisted."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FORMFILL_METADATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FORMFILL_METADATA", :value 70, :enum "cef_content_setting_types_t", :raw-comment "/// Stores metadata related to form fill, such as e.g. whether user data was\n  /// autofilled on a specific website."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_ACTIVE_SESSION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_ACTIVE_SESSION", :value 71, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate that there is an active federated sign-in session\n  /// between a specified relying party and a specified identity provider for\n  /// a specified account. When this is present it allows access to session\n  /// management capabilities between the sites. This setting is associated\n  /// with the relying party's origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_AUTO_DARK_WEB_CONTENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_AUTO_DARK_WEB_CONTENT", :value 72, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether Chrome should automatically apply darkening to\n  /// web content."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REQUEST_DESKTOP_SITE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REQUEST_DESKTOP_SITE", :value 73, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether Chrome should request the desktop view of a\n  /// site instead of the mobile one."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_API", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_API", :value 74, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether browser should allow signing into a website\n  /// via the browser FedCM API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_INTERACTIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_INTERACTIONS", :value 75, :enum "cef_content_setting_types_t", :raw-comment "/// Stores notification interactions per origin for the past 90 days.\n  /// Interactions per origin are pre-aggregated over seven-day windows: A\n  /// notification interaction or display is assigned to the last Monday\n  /// midnight in local time."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REDUCED_ACCEPT_LANGUAGE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REDUCED_ACCEPT_LANGUAGE", :value 76, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores the last reduced accept language negotiated\n  /// for a given origin, to be used on future visits to the origin."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_PERMISSION_REVIEW", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NOTIFICATION_PERMISSION_REVIEW", :value 77, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which is used for NotificationPermissionReviewService to\n  /// store origin blocklist from review notification permissions feature."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_GUARD", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_GUARD", :value 78, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular devices\n  /// in private network."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_CHOOSER_DATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_PRIVATE_NETWORK_CHOOSER_DATA", :value 79, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting to store permissions granted to access particular devices\n  /// in private network."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_SIGNIN_STATUS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_SIGNIN_STATUS", :value 80, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores whether the browser has observed the user\n  /// signing into an identity-provider based on observing the IdP-SignIn-Status\n  /// HTTP header."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_REVOKED_UNUSED_SITE_PERMISSIONS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_REVOKED_UNUSED_SITE_PERMISSIONS", :value 81, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which is used for UnusedSitePermissionsService to\n  /// store revoked permissions of unused sites from unused site permissions\n  /// feature."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_TOP_LEVEL_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_TOP_LEVEL_STORAGE_ACCESS", :value 82, :enum "cef_content_setting_types_t", :raw-comment "/// Similar to STORAGE_ACCESS, but applicable at the page-level rather than\n  /// being specific to a frame."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_AUTO_REAUTHN_PERMISSION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_AUTO_REAUTHN_PERMISSION", :value 83, :enum "cef_content_setting_types_t", :raw-comment "/// Setting to indicate whether user has opted in to allowing auto re-authn\n  /// via the FedCM API."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_REGISTRATION", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_FEDERATED_IDENTITY_IDENTITY_PROVIDER_REGISTRATION", :value 84, :enum "cef_content_setting_types_t", :raw-comment "/// Website setting which stores whether the user has explicitly registered\n  /// a website as an identity-provider."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_ANTI_ABUSE", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_ANTI_ABUSE", :value 85, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting which is used to indicate whether anti-abuse functionality\n  /// should be enabled."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_THIRD_PARTY_STORAGE_PARTITIONING", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_THIRD_PARTY_STORAGE_PARTITIONING", :value 86, :enum "cef_content_setting_types_t", :raw-comment "/// Content setting used to indicate whether third-party storage partitioning\n  /// should be enabled."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_HTTPS_ENFORCED", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_HTTPS_ENFORCED", :value 87, :enum "cef_content_setting_types_t", :raw-comment "/// Used to indicate whether HTTPS-First Mode is enabled on the hostname."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_COOKIE_CONTROLS_METADATA", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_COOKIE_CONTROLS_METADATA", :value 88, :enum "cef_content_setting_types_t", :raw-comment "/// Stores per origin metadata for cookie controls."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_TPCD_SUPPORT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_TPCD_SUPPORT", :value 89, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for supporting 3PCD."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_TYPE_NUM_TYPES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_TYPE_NUM_TYPES", :value 90, :enum "cef_content_setting_types_t", :raw-comment "/// Setting for supporting 3PCD."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_DEFAULT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_DEFAULT", :value 0, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_ALLOW", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_ALLOW", :value 1, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_BLOCK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_BLOCK", :value 2, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_ASK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_ASK", :value 3, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_SESSION_ONLY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_SESSION_ONLY", :value 4, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_DETECT_IMPORTANT_CONTENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_DETECT_IMPORTANT_CONTENT", :value 5, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_NUM_VALUES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_NUM_VALUES", :value 6, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_DEFAULT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_DEFAULT", :value 0, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_ALLOW", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_ALLOW", :value 1, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_BLOCK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_BLOCK", :value 2, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_ASK", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_ASK", :value 3, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_SESSION_ONLY", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_SESSION_ONLY", :value 4, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_DETECT_IMPORTANT_CONTENT", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_DETECT_IMPORTANT_CONTENT", :value 5, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CONTENT_SETTING_VALUE_NUM_VALUES", :type "CXType_Int", :name "CEF_CONTENT_SETTING_VALUE_NUM_VALUES", :value 6, :enum "cef_content_setting_values_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DEFAULT", :type "CXType_Int", :name "LOGSEVERITY_DEFAULT", :value 0, :enum "cef_log_severity_t", :raw-comment "///\n  /// Default logging (currently INFO logging).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_VERBOSE", :type "CXType_Int", :name "LOGSEVERITY_VERBOSE", :value 1, :enum "cef_log_severity_t", :raw-comment "///\n  /// Verbose logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DEBUG", :type "CXType_Int", :name "LOGSEVERITY_DEBUG", :value 1, :enum "cef_log_severity_t", :raw-comment "///\n  /// DEBUG logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_INFO", :type "CXType_Int", :name "LOGSEVERITY_INFO", :value 2, :enum "cef_log_severity_t", :raw-comment "///\n  /// INFO logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_WARNING", :type "CXType_Int", :name "LOGSEVERITY_WARNING", :value 3, :enum "cef_log_severity_t", :raw-comment "///\n  /// WARNING logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_ERROR", :type "CXType_Int", :name "LOGSEVERITY_ERROR", :value 4, :enum "cef_log_severity_t", :raw-comment "///\n  /// ERROR logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_FATAL", :type "CXType_Int", :name "LOGSEVERITY_FATAL", :value 5, :enum "cef_log_severity_t", :raw-comment "///\n  /// FATAL logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DISABLE", :type "CXType_Int", :name "LOGSEVERITY_DISABLE", :value 99, :enum "cef_log_severity_t", :raw-comment "///\n  /// Disable logging to file for all messages, and to stderr for messages with\n  /// severity less than FATAL.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DEFAULT", :type "CXType_Int", :name "LOGSEVERITY_DEFAULT", :value 0, :enum "cef_log_severity_t", :raw-comment "///\n  /// Default logging (currently INFO logging).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_VERBOSE", :type "CXType_Int", :name "LOGSEVERITY_VERBOSE", :value 1, :enum "cef_log_severity_t", :raw-comment "///\n  /// Verbose logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DEBUG", :type "CXType_Int", :name "LOGSEVERITY_DEBUG", :value 1, :enum "cef_log_severity_t", :raw-comment "///\n  /// DEBUG logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_INFO", :type "CXType_Int", :name "LOGSEVERITY_INFO", :value 2, :enum "cef_log_severity_t", :raw-comment "///\n  /// INFO logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_WARNING", :type "CXType_Int", :name "LOGSEVERITY_WARNING", :value 3, :enum "cef_log_severity_t", :raw-comment "///\n  /// WARNING logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_ERROR", :type "CXType_Int", :name "LOGSEVERITY_ERROR", :value 4, :enum "cef_log_severity_t", :raw-comment "///\n  /// ERROR logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_FATAL", :type "CXType_Int", :name "LOGSEVERITY_FATAL", :value 5, :enum "cef_log_severity_t", :raw-comment "///\n  /// FATAL logging.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOGSEVERITY_DISABLE", :type "CXType_Int", :name "LOGSEVERITY_DISABLE", :value 99, :enum "cef_log_severity_t", :raw-comment "///\n  /// Disable logging to file for all messages, and to stderr for messages with\n  /// severity less than FATAL.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_DEFAULT", :type "CXType_Int", :name "LOG_ITEMS_DEFAULT", :value 0, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the default list of items.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_NONE", :type "CXType_Int", :name "LOG_ITEMS_NONE", :value 1, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend no items.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_PROCESS_ID", :type "CXType_Int", :name "LOG_ITEMS_FLAG_PROCESS_ID", :value 2, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the process ID.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_THREAD_ID", :type "CXType_Int", :name "LOG_ITEMS_FLAG_THREAD_ID", :value 4, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the thread ID.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_TIME_STAMP", :type "CXType_Int", :name "LOG_ITEMS_FLAG_TIME_STAMP", :value 8, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the timestamp.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_TICK_COUNT", :type "CXType_Int", :name "LOG_ITEMS_FLAG_TICK_COUNT", :value 16, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the tickcount.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_DEFAULT", :type "CXType_Int", :name "LOG_ITEMS_DEFAULT", :value 0, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the default list of items.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_NONE", :type "CXType_Int", :name "LOG_ITEMS_NONE", :value 1, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend no items.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_PROCESS_ID", :type "CXType_Int", :name "LOG_ITEMS_FLAG_PROCESS_ID", :value 2, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the process ID.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_THREAD_ID", :type "CXType_Int", :name "LOG_ITEMS_FLAG_THREAD_ID", :value 4, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the thread ID.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_TIME_STAMP", :type "CXType_Int", :name "LOG_ITEMS_FLAG_TIME_STAMP", :value 8, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the timestamp.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "LOG_ITEMS_FLAG_TICK_COUNT", :type "CXType_Int", :name "LOG_ITEMS_FLAG_TICK_COUNT", :value 16, :enum "cef_log_items_t", :raw-comment "///\n  /// Prepend the tickcount.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_DEFAULT", :type "CXType_Int", :name "STATE_DEFAULT", :value 0, :enum "cef_state_t", :raw-comment "///\n  /// Use the default state for the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_ENABLED", :type "CXType_Int", :name "STATE_ENABLED", :value 1, :enum "cef_state_t", :raw-comment "///\n  /// Enable or allow the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_DISABLED", :type "CXType_Int", :name "STATE_DISABLED", :value 2, :enum "cef_state_t", :raw-comment "///\n  /// Disable or disallow the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_DEFAULT", :type "CXType_Int", :name "STATE_DEFAULT", :value 0, :enum "cef_state_t", :raw-comment "///\n  /// Use the default state for the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_ENABLED", :type "CXType_Int", :name "STATE_ENABLED", :value 1, :enum "cef_state_t", :raw-comment "///\n  /// Enable or allow the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "STATE_DISABLED", :type "CXType_Int", :name "STATE_DISABLED", :value 2, :enum "cef_state_t", :raw-comment "///\n  /// Disable or disallow the setting.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CANCEL", :type "CXType_Int", :name "RV_CANCEL", :value 0, :enum "cef_return_value_t", :raw-comment "///\n  /// Cancel immediately.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CONTINUE", :type "CXType_Int", :name "RV_CONTINUE", :value 1, :enum "cef_return_value_t", :raw-comment "///\n  /// Continue immediately.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CONTINUE_ASYNC", :type "CXType_Int", :name "RV_CONTINUE_ASYNC", :value 2, :enum "cef_return_value_t", :raw-comment "///\n  /// Continue asynchronously (usually via a callback).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CANCEL", :type "CXType_Int", :name "RV_CANCEL", :value 0, :enum "cef_return_value_t", :raw-comment "///\n  /// Cancel immediately.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CONTINUE", :type "CXType_Int", :name "RV_CONTINUE", :value 1, :enum "cef_return_value_t", :raw-comment "///\n  /// Continue immediately.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RV_CONTINUE_ASYNC", :type "CXType_Int", :name "RV_CONTINUE_ASYNC", :value 2, :enum "cef_return_value_t", :raw-comment "///\n  /// Continue asynchronously (usually via a callback).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_LOW", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_LOW", :value -1, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_MEDIUM", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_MEDIUM", :value 0, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_HIGH", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_HIGH", :value 1, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_LOW", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_LOW", :value -1, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_MEDIUM", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_MEDIUM", :value 0, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_PRIORITY_HIGH", :type "CXType_Int", :name "CEF_COOKIE_PRIORITY_HIGH", :value 1, :enum "cef_cookie_priority_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_UNSPECIFIED", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_UNSPECIFIED", :value 0, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_NO_RESTRICTION", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_NO_RESTRICTION", :value 1, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_LAX_MODE", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_LAX_MODE", :value 2, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_STRICT_MODE", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_STRICT_MODE", :value 3, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_UNSPECIFIED", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_UNSPECIFIED", :value 0, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_NO_RESTRICTION", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_NO_RESTRICTION", :value 1, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_LAX_MODE", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_LAX_MODE", :value 2, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COOKIE_SAME_SITE_STRICT_MODE", :type "CXType_Int", :name "CEF_COOKIE_SAME_SITE_STRICT_MODE", :value 3, :enum "cef_cookie_same_site_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_ABNORMAL_TERMINATION", :type "CXType_Int", :name "TS_ABNORMAL_TERMINATION", :value 0, :enum "cef_termination_status_t", :raw-comment "///\n  /// Non-zero exit status.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_WAS_KILLED", :type "CXType_Int", :name "TS_PROCESS_WAS_KILLED", :value 1, :enum "cef_termination_status_t", :raw-comment "///\n  /// SIGKILL or task manager kill.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_CRASHED", :type "CXType_Int", :name "TS_PROCESS_CRASHED", :value 2, :enum "cef_termination_status_t", :raw-comment "///\n  /// Segmentation fault.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_OOM", :type "CXType_Int", :name "TS_PROCESS_OOM", :value 3, :enum "cef_termination_status_t", :raw-comment "///\n  /// Out of memory. Some platforms may use TS_PROCESS_CRASHED instead.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_ABNORMAL_TERMINATION", :type "CXType_Int", :name "TS_ABNORMAL_TERMINATION", :value 0, :enum "cef_termination_status_t", :raw-comment "///\n  /// Non-zero exit status.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_WAS_KILLED", :type "CXType_Int", :name "TS_PROCESS_WAS_KILLED", :value 1, :enum "cef_termination_status_t", :raw-comment "///\n  /// SIGKILL or task manager kill.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_CRASHED", :type "CXType_Int", :name "TS_PROCESS_CRASHED", :value 2, :enum "cef_termination_status_t", :raw-comment "///\n  /// Segmentation fault.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TS_PROCESS_OOM", :type "CXType_Int", :name "TS_PROCESS_OOM", :value 3, :enum "cef_termination_status_t", :raw-comment "///\n  /// Out of memory. Some platforms may use TS_PROCESS_CRASHED instead.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_CURRENT", :type "CXType_Int", :name "PK_DIR_CURRENT", :value 0, :enum "cef_path_key_t", :raw-comment "///\n  /// Current directory.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_EXE", :type "CXType_Int", :name "PK_DIR_EXE", :value 1, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing PK_FILE_EXE.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_MODULE", :type "CXType_Int", :name "PK_DIR_MODULE", :value 2, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing PK_FILE_MODULE.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_TEMP", :type "CXType_Int", :name "PK_DIR_TEMP", :value 3, :enum "cef_path_key_t", :raw-comment "///\n  /// Temporary directory.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_FILE_EXE", :type "CXType_Int", :name "PK_FILE_EXE", :value 4, :enum "cef_path_key_t", :raw-comment "///\n  /// Path and filename of the current executable.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_FILE_MODULE", :type "CXType_Int", :name "PK_FILE_MODULE", :value 5, :enum "cef_path_key_t", :raw-comment "///\n  /// Path and filename of the module containing the CEF code (usually the\n  /// libcef module).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_LOCAL_APP_DATA", :type "CXType_Int", :name "PK_LOCAL_APP_DATA", :value 6, :enum "cef_path_key_t", :raw-comment "///\n  /// \"Local Settings\\Application Data\" directory under the user profile\n  /// directory on Windows.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_USER_DATA", :type "CXType_Int", :name "PK_USER_DATA", :value 7, :enum "cef_path_key_t", :raw-comment "///\n  /// \"Application Data\" directory under the user profile directory on Windows\n  /// and \"~/Library/Application Support\" directory on MacOS.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_RESOURCES", :type "CXType_Int", :name "PK_DIR_RESOURCES", :value 8, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing application resources. Can be configured via\n  /// CefSettings.resources_dir_path.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_CURRENT", :type "CXType_Int", :name "PK_DIR_CURRENT", :value 0, :enum "cef_path_key_t", :raw-comment "///\n  /// Current directory.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_EXE", :type "CXType_Int", :name "PK_DIR_EXE", :value 1, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing PK_FILE_EXE.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_MODULE", :type "CXType_Int", :name "PK_DIR_MODULE", :value 2, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing PK_FILE_MODULE.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_TEMP", :type "CXType_Int", :name "PK_DIR_TEMP", :value 3, :enum "cef_path_key_t", :raw-comment "///\n  /// Temporary directory.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_FILE_EXE", :type "CXType_Int", :name "PK_FILE_EXE", :value 4, :enum "cef_path_key_t", :raw-comment "///\n  /// Path and filename of the current executable.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_FILE_MODULE", :type "CXType_Int", :name "PK_FILE_MODULE", :value 5, :enum "cef_path_key_t", :raw-comment "///\n  /// Path and filename of the module containing the CEF code (usually the\n  /// libcef module).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_LOCAL_APP_DATA", :type "CXType_Int", :name "PK_LOCAL_APP_DATA", :value 6, :enum "cef_path_key_t", :raw-comment "///\n  /// \"Local Settings\\Application Data\" directory under the user profile\n  /// directory on Windows.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_USER_DATA", :type "CXType_Int", :name "PK_USER_DATA", :value 7, :enum "cef_path_key_t", :raw-comment "///\n  /// \"Application Data\" directory under the user profile directory on Windows\n  /// and \"~/Library/Application Support\" directory on MacOS.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PK_DIR_RESOURCES", :type "CXType_Int", :name "PK_DIR_RESOURCES", :value 8, :enum "cef_path_key_t", :raw-comment "///\n  /// Directory containing application resources. Can be configured via\n  /// CefSettings.resources_dir_path.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ST_LOCALSTORAGE", :type "CXType_Int", :name "ST_LOCALSTORAGE", :value 0, :enum "cef_storage_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ST_SESSIONSTORAGE", :type "CXType_Int", :name "ST_SESSIONSTORAGE", :value 1, :enum "cef_storage_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ST_LOCALSTORAGE", :type "CXType_Int", :name "ST_LOCALSTORAGE", :value 0, :enum "cef_storage_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ST_SESSIONSTORAGE", :type "CXType_Int", :name "ST_SESSIONSTORAGE", :value 1, :enum "cef_storage_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NONE", :type "CXType_Int", :name "ERR_NONE", :value 0, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IO_PENDING", :type "CXType_Int", :name "ERR_IO_PENDING", :value -1, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FAILED", :type "CXType_Int", :name "ERR_FAILED", :value -2, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ABORTED", :type "CXType_Int", :name "ERR_ABORTED", :value -3, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_ARGUMENT", :type "CXType_Int", :name "ERR_INVALID_ARGUMENT", :value -4, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_HANDLE", :type "CXType_Int", :name "ERR_INVALID_HANDLE", :value -5, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_NOT_FOUND", :type "CXType_Int", :name "ERR_FILE_NOT_FOUND", :value -6, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TIMED_OUT", :type "CXType_Int", :name "ERR_TIMED_OUT", :value -7, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_TOO_BIG", :type "CXType_Int", :name "ERR_FILE_TOO_BIG", :value -8, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED", :type "CXType_Int", :name "ERR_UNEXPECTED", :value -9, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ACCESS_DENIED", :type "CXType_Int", :name "ERR_ACCESS_DENIED", :value -10, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NOT_IMPLEMENTED", :type "CXType_Int", :name "ERR_NOT_IMPLEMENTED", :value -11, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INSUFFICIENT_RESOURCES", :type "CXType_Int", :name "ERR_INSUFFICIENT_RESOURCES", :value -12, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_OUT_OF_MEMORY", :type "CXType_Int", :name "ERR_OUT_OF_MEMORY", :value -13, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UPLOAD_FILE_CHANGED", :type "CXType_Int", :name "ERR_UPLOAD_FILE_CHANGED", :value -14, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_NOT_CONNECTED", :type "CXType_Int", :name "ERR_SOCKET_NOT_CONNECTED", :value -15, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_EXISTS", :type "CXType_Int", :name "ERR_FILE_EXISTS", :value -16, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_PATH_TOO_LONG", :type "CXType_Int", :name "ERR_FILE_PATH_TOO_LONG", :value -17, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_NO_SPACE", :type "CXType_Int", :name "ERR_FILE_NO_SPACE", :value -18, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_VIRUS_INFECTED", :type "CXType_Int", :name "ERR_FILE_VIRUS_INFECTED", :value -19, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_CLIENT", :type "CXType_Int", :name "ERR_BLOCKED_BY_CLIENT", :value -20, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_CHANGED", :type "CXType_Int", :name "ERR_NETWORK_CHANGED", :value -21, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_ADMINISTRATOR", :type "CXType_Int", :name "ERR_BLOCKED_BY_ADMINISTRATOR", :value -22, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_IS_CONNECTED", :type "CXType_Int", :name "ERR_SOCKET_IS_CONNECTED", :value -23, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UPLOAD_STREAM_REWIND_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_UPLOAD_STREAM_REWIND_NOT_SUPPORTED", :value -25, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTEXT_SHUT_DOWN", :type "CXType_Int", :name "ERR_CONTEXT_SHUT_DOWN", :value -26, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_RESPONSE", :type "CXType_Int", :name "ERR_BLOCKED_BY_RESPONSE", :value -27, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CLEARTEXT_NOT_PERMITTED", :type "CXType_Int", :name "ERR_CLEARTEXT_NOT_PERMITTED", :value -29, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_CSP", :type "CXType_Int", :name "ERR_BLOCKED_BY_CSP", :value -30, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_H2_OR_QUIC_REQUIRED", :type "CXType_Int", :name "ERR_H2_OR_QUIC_REQUIRED", :value -31, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_ORB", :type "CXType_Int", :name "ERR_BLOCKED_BY_ORB", :value -32, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_CLOSED", :type "CXType_Int", :name "ERR_CONNECTION_CLOSED", :value -100, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_RESET", :type "CXType_Int", :name "ERR_CONNECTION_RESET", :value -101, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_REFUSED", :type "CXType_Int", :name "ERR_CONNECTION_REFUSED", :value -102, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_ABORTED", :type "CXType_Int", :name "ERR_CONNECTION_ABORTED", :value -103, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_CONNECTION_FAILED", :value -104, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NAME_NOT_RESOLVED", :type "CXType_Int", :name "ERR_NAME_NOT_RESOLVED", :value -105, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INTERNET_DISCONNECTED", :type "CXType_Int", :name "ERR_INTERNET_DISCONNECTED", :value -106, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_SSL_PROTOCOL_ERROR", :value -107, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_INVALID", :type "CXType_Int", :name "ERR_ADDRESS_INVALID", :value -108, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_UNREACHABLE", :type "CXType_Int", :name "ERR_ADDRESS_UNREACHABLE", :value -109, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_NEEDED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_NEEDED", :value -110, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TUNNEL_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_TUNNEL_CONNECTION_FAILED", :value -111, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_SSL_VERSIONS_ENABLED", :type "CXType_Int", :name "ERR_NO_SSL_VERSIONS_ENABLED", :value -112, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_VERSION_OR_CIPHER_MISMATCH", :type "CXType_Int", :name "ERR_SSL_VERSION_OR_CIPHER_MISMATCH", :value -113, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_RENEGOTIATION_REQUESTED", :type "CXType_Int", :name "ERR_SSL_RENEGOTIATION_REQUESTED", :value -114, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_UNSUPPORTED", :type "CXType_Int", :name "ERR_PROXY_AUTH_UNSUPPORTED", :value -115, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BAD_SSL_CLIENT_AUTH_CERT", :type "CXType_Int", :name "ERR_BAD_SSL_CLIENT_AUTH_CERT", :value -117, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_TIMED_OUT", :type "CXType_Int", :name "ERR_CONNECTION_TIMED_OUT", :value -118, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HOST_RESOLVER_QUEUE_TOO_LARGE", :type "CXType_Int", :name "ERR_HOST_RESOLVER_QUEUE_TOO_LARGE", :value -119, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKS_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_SOCKS_CONNECTION_FAILED", :value -120, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKS_CONNECTION_HOST_UNREACHABLE", :type "CXType_Int", :name "ERR_SOCKS_CONNECTION_HOST_UNREACHABLE", :value -121, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ALPN_NEGOTIATION_FAILED", :type "CXType_Int", :name "ERR_ALPN_NEGOTIATION_FAILED", :value -122, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_NO_RENEGOTIATION", :type "CXType_Int", :name "ERR_SSL_NO_RENEGOTIATION", :value -123, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WINSOCK_UNEXPECTED_WRITTEN_BYTES", :type "CXType_Int", :name "ERR_WINSOCK_UNEXPECTED_WRITTEN_BYTES", :value -124, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_DECOMPRESSION_FAILURE_ALERT", :type "CXType_Int", :name "ERR_SSL_DECOMPRESSION_FAILURE_ALERT", :value -125, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_BAD_RECORD_MAC_ALERT", :type "CXType_Int", :name "ERR_SSL_BAD_RECORD_MAC_ALERT", :value -126, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_REQUESTED", :type "CXType_Int", :name "ERR_PROXY_AUTH_REQUESTED", :value -127, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_PROXY_CONNECTION_FAILED", :value -130, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MANDATORY_PROXY_CONFIGURATION_FAILED", :type "CXType_Int", :name "ERR_MANDATORY_PROXY_CONFIGURATION_FAILED", :value -131, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PRECONNECT_MAX_SOCKET_LIMIT", :type "CXType_Int", :name "ERR_PRECONNECT_MAX_SOCKET_LIMIT", :value -133, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_PRIVATE_KEY_ACCESS_DENIED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_PRIVATE_KEY_ACCESS_DENIED", :value -134, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_NO_PRIVATE_KEY", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_NO_PRIVATE_KEY", :value -135, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_CERTIFICATE_INVALID", :type "CXType_Int", :name "ERR_PROXY_CERTIFICATE_INVALID", :value -136, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NAME_RESOLUTION_FAILED", :type "CXType_Int", :name "ERR_NAME_RESOLUTION_FAILED", :value -137, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_ACCESS_DENIED", :type "CXType_Int", :name "ERR_NETWORK_ACCESS_DENIED", :value -138, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TEMPORARILY_THROTTLED", :type "CXType_Int", :name "ERR_TEMPORARILY_THROTTLED", :value -139, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTPS_PROXY_TUNNEL_RESPONSE_REDIRECT", :type "CXType_Int", :name "ERR_HTTPS_PROXY_TUNNEL_RESPONSE_REDIRECT", :value -140, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_SIGNATURE_FAILED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_SIGNATURE_FAILED", :value -141, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MSG_TOO_BIG", :type "CXType_Int", :name "ERR_MSG_TOO_BIG", :value -142, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_WS_PROTOCOL_ERROR", :value -145, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_IN_USE", :type "CXType_Int", :name "ERR_ADDRESS_IN_USE", :value -147, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_HANDSHAKE_NOT_COMPLETED", :type "CXType_Int", :name "ERR_SSL_HANDSHAKE_NOT_COMPLETED", :value -148, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_BAD_PEER_PUBLIC_KEY", :type "CXType_Int", :name "ERR_SSL_BAD_PEER_PUBLIC_KEY", :value -149, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_PINNED_KEY_NOT_IN_CERT_CHAIN", :type "CXType_Int", :name "ERR_SSL_PINNED_KEY_NOT_IN_CERT_CHAIN", :value -150, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CLIENT_AUTH_CERT_TYPE_UNSUPPORTED", :type "CXType_Int", :name "ERR_CLIENT_AUTH_CERT_TYPE_UNSUPPORTED", :value -151, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_DECRYPT_ERROR_ALERT", :type "CXType_Int", :name "ERR_SSL_DECRYPT_ERROR_ALERT", :value -153, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_THROTTLE_QUEUE_TOO_LARGE", :type "CXType_Int", :name "ERR_WS_THROTTLE_QUEUE_TOO_LARGE", :value -154, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_SERVER_CERT_CHANGED", :type "CXType_Int", :name "ERR_SSL_SERVER_CERT_CHANGED", :value -156, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_UNRECOGNIZED_NAME_ALERT", :type "CXType_Int", :name "ERR_SSL_UNRECOGNIZED_NAME_ALERT", :value -159, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SET_RECEIVE_BUFFER_SIZE_ERROR", :type "CXType_Int", :name "ERR_SOCKET_SET_RECEIVE_BUFFER_SIZE_ERROR", :value -160, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SET_SEND_BUFFER_SIZE_ERROR", :type "CXType_Int", :name "ERR_SOCKET_SET_SEND_BUFFER_SIZE_ERROR", :value -161, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_RECEIVE_BUFFER_SIZE_UNCHANGEABLE", :type "CXType_Int", :name "ERR_SOCKET_RECEIVE_BUFFER_SIZE_UNCHANGEABLE", :value -162, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SEND_BUFFER_SIZE_UNCHANGEABLE", :type "CXType_Int", :name "ERR_SOCKET_SEND_BUFFER_SIZE_UNCHANGEABLE", :value -163, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_BAD_FORMAT", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_BAD_FORMAT", :value -164, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ICANN_NAME_COLLISION", :type "CXType_Int", :name "ERR_ICANN_NAME_COLLISION", :value -166, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_SERVER_CERT_BAD_FORMAT", :type "CXType_Int", :name "ERR_SSL_SERVER_CERT_BAD_FORMAT", :value -167, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_STH_PARSING_FAILED", :type "CXType_Int", :name "ERR_CT_STH_PARSING_FAILED", :value -168, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_STH_INCOMPLETE", :type "CXType_Int", :name "ERR_CT_STH_INCOMPLETE", :value -169, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH", :type "CXType_Int", :name "ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH", :value -170, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_CONSISTENCY_PROOF_PARSING_FAILED", :type "CXType_Int", :name "ERR_CT_CONSISTENCY_PROOF_PARSING_FAILED", :value -171, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_OBSOLETE_CIPHER", :type "CXType_Int", :name "ERR_SSL_OBSOLETE_CIPHER", :value -172, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_UPGRADE", :type "CXType_Int", :name "ERR_WS_UPGRADE", :value -173, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_READ_IF_READY_NOT_IMPLEMENTED", :type "CXType_Int", :name "ERR_READ_IF_READY_NOT_IMPLEMENTED", :value -174, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_BUFFER_SPACE", :type "CXType_Int", :name "ERR_NO_BUFFER_SPACE", :value -176, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_NO_COMMON_ALGORITHMS", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_NO_COMMON_ALGORITHMS", :value -177, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_EARLY_DATA_REJECTED", :type "CXType_Int", :name "ERR_EARLY_DATA_REJECTED", :value -178, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WRONG_VERSION_ON_EARLY_DATA", :type "CXType_Int", :name "ERR_WRONG_VERSION_ON_EARLY_DATA", :value -179, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TLS13_DOWNGRADE_DETECTED", :type "CXType_Int", :name "ERR_TLS13_DOWNGRADE_DETECTED", :value -180, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_KEY_USAGE_INCOMPATIBLE", :type "CXType_Int", :name "ERR_SSL_KEY_USAGE_INCOMPATIBLE", :value -181, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_ECH_CONFIG_LIST", :type "CXType_Int", :name "ERR_INVALID_ECH_CONFIG_LIST", :value -182, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ECH_NOT_NEGOTIATED", :type "CXType_Int", :name "ERR_ECH_NOT_NEGOTIATED", :value -183, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ECH_FALLBACK_CERTIFICATE_INVALID", :type "CXType_Int", :name "ERR_ECH_FALLBACK_CERTIFICATE_INVALID", :value -184, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_COMMON_NAME_INVALID", :type "CXType_Int", :name "ERR_CERT_COMMON_NAME_INVALID", :value -200, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_DATE_INVALID", :type "CXType_Int", :name "ERR_CERT_DATE_INVALID", :value -201, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_AUTHORITY_INVALID", :type "CXType_Int", :name "ERR_CERT_AUTHORITY_INVALID", :value -202, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_CONTAINS_ERRORS", :type "CXType_Int", :name "ERR_CERT_CONTAINS_ERRORS", :value -203, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NO_REVOCATION_MECHANISM", :type "CXType_Int", :name "ERR_CERT_NO_REVOCATION_MECHANISM", :value -204, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_UNABLE_TO_CHECK_REVOCATION", :type "CXType_Int", :name "ERR_CERT_UNABLE_TO_CHECK_REVOCATION", :value -205, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_REVOKED", :type "CXType_Int", :name "ERR_CERT_REVOKED", :value -206, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_INVALID", :type "CXType_Int", :name "ERR_CERT_INVALID", :value -207, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_WEAK_SIGNATURE_ALGORITHM", :type "CXType_Int", :name "ERR_CERT_WEAK_SIGNATURE_ALGORITHM", :value -208, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NON_UNIQUE_NAME", :type "CXType_Int", :name "ERR_CERT_NON_UNIQUE_NAME", :value -210, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_WEAK_KEY", :type "CXType_Int", :name "ERR_CERT_WEAK_KEY", :value -211, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NAME_CONSTRAINT_VIOLATION", :type "CXType_Int", :name "ERR_CERT_NAME_CONSTRAINT_VIOLATION", :value -212, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_VALIDITY_TOO_LONG", :type "CXType_Int", :name "ERR_CERT_VALIDITY_TOO_LONG", :value -213, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERTIFICATE_TRANSPARENCY_REQUIRED", :type "CXType_Int", :name "ERR_CERTIFICATE_TRANSPARENCY_REQUIRED", :value -214, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_SYMANTEC_LEGACY", :type "CXType_Int", :name "ERR_CERT_SYMANTEC_LEGACY", :value -215, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_KNOWN_INTERCEPTION_BLOCKED", :type "CXType_Int", :name "ERR_CERT_KNOWN_INTERCEPTION_BLOCKED", :value -217, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_END", :type "CXType_Int", :name "ERR_CERT_END", :value -219, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_URL", :type "CXType_Int", :name "ERR_INVALID_URL", :value -300, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DISALLOWED_URL_SCHEME", :type "CXType_Int", :name "ERR_DISALLOWED_URL_SCHEME", :value -301, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNKNOWN_URL_SCHEME", :type "CXType_Int", :name "ERR_UNKNOWN_URL_SCHEME", :value -302, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_REDIRECT", :type "CXType_Int", :name "ERR_INVALID_REDIRECT", :value -303, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_REDIRECTS", :type "CXType_Int", :name "ERR_TOO_MANY_REDIRECTS", :value -310, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSAFE_REDIRECT", :type "CXType_Int", :name "ERR_UNSAFE_REDIRECT", :value -311, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSAFE_PORT", :type "CXType_Int", :name "ERR_UNSAFE_PORT", :value -312, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_RESPONSE", :type "CXType_Int", :name "ERR_INVALID_RESPONSE", :value -320, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_CHUNKED_ENCODING", :type "CXType_Int", :name "ERR_INVALID_CHUNKED_ENCODING", :value -321, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_METHOD_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_METHOD_NOT_SUPPORTED", :value -322, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED_PROXY_AUTH", :type "CXType_Int", :name "ERR_UNEXPECTED_PROXY_AUTH", :value -323, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_EMPTY_RESPONSE", :type "CXType_Int", :name "ERR_EMPTY_RESPONSE", :value -324, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_TOO_BIG", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_TOO_BIG", :value -325, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_SCRIPT_FAILED", :type "CXType_Int", :name "ERR_PAC_SCRIPT_FAILED", :value -327, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_REQUEST_RANGE_NOT_SATISFIABLE", :type "CXType_Int", :name "ERR_REQUEST_RANGE_NOT_SATISFIABLE", :value -328, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MALFORMED_IDENTITY", :type "CXType_Int", :name "ERR_MALFORMED_IDENTITY", :value -329, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_DECODING_FAILED", :type "CXType_Int", :name "ERR_CONTENT_DECODING_FAILED", :value -330, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_IO_SUSPENDED", :type "CXType_Int", :name "ERR_NETWORK_IO_SUSPENDED", :value -331, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SYN_REPLY_NOT_RECEIVED", :type "CXType_Int", :name "ERR_SYN_REPLY_NOT_RECEIVED", :value -332, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ENCODING_CONVERSION_FAILED", :type "CXType_Int", :name "ERR_ENCODING_CONVERSION_FAILED", :value -333, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNRECOGNIZED_FTP_DIRECTORY_LISTING_FORMAT", :type "CXType_Int", :name "ERR_UNRECOGNIZED_FTP_DIRECTORY_LISTING_FORMAT", :value -334, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_SUPPORTED_PROXIES", :type "CXType_Int", :name "ERR_NO_SUPPORTED_PROXIES", :value -336, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_HTTP2_PROTOCOL_ERROR", :value -337, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_AUTH_CREDENTIALS", :type "CXType_Int", :name "ERR_INVALID_AUTH_CREDENTIALS", :value -338, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSUPPORTED_AUTH_SCHEME", :type "CXType_Int", :name "ERR_UNSUPPORTED_AUTH_SCHEME", :value -339, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ENCODING_DETECTION_FAILED", :type "CXType_Int", :name "ERR_ENCODING_DETECTION_FAILED", :value -340, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MISSING_AUTH_CREDENTIALS", :type "CXType_Int", :name "ERR_MISSING_AUTH_CREDENTIALS", :value -341, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED_SECURITY_LIBRARY_STATUS", :type "CXType_Int", :name "ERR_UNEXPECTED_SECURITY_LIBRARY_STATUS", :value -342, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MISCONFIGURED_AUTH_ENVIRONMENT", :type "CXType_Int", :name "ERR_MISCONFIGURED_AUTH_ENVIRONMENT", :value -343, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNDOCUMENTED_SECURITY_LIBRARY_STATUS", :type "CXType_Int", :name "ERR_UNDOCUMENTED_SECURITY_LIBRARY_STATUS", :value -344, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_BODY_TOO_BIG_TO_DRAIN", :type "CXType_Int", :name "ERR_RESPONSE_BODY_TOO_BIG_TO_DRAIN", :value -345, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_LENGTH", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_LENGTH", :value -346, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCOMPLETE_HTTP2_HEADERS", :type "CXType_Int", :name "ERR_INCOMPLETE_HTTP2_HEADERS", :value -347, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_NOT_IN_DHCP", :type "CXType_Int", :name "ERR_PAC_NOT_IN_DHCP", :value -348, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_DISPOSITION", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_DISPOSITION", :value -349, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_LOCATION", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_LOCATION", :value -350, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_SERVER_REFUSED_STREAM", :type "CXType_Int", :name "ERR_HTTP2_SERVER_REFUSED_STREAM", :value -351, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_PING_FAILED", :type "CXType_Int", :name "ERR_HTTP2_PING_FAILED", :value -352, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_LENGTH_MISMATCH", :type "CXType_Int", :name "ERR_CONTENT_LENGTH_MISMATCH", :value -354, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCOMPLETE_CHUNKED_ENCODING", :type "CXType_Int", :name "ERR_INCOMPLETE_CHUNKED_ENCODING", :value -355, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_QUIC_PROTOCOL_ERROR", :value -356, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_TRUNCATED", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_TRUNCATED", :value -357, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_HANDSHAKE_FAILED", :type "CXType_Int", :name "ERR_QUIC_HANDSHAKE_FAILED", :value -358, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY", :type "CXType_Int", :name "ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY", :value -360, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_FLOW_CONTROL_ERROR", :type "CXType_Int", :name "ERR_HTTP2_FLOW_CONTROL_ERROR", :value -361, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_FRAME_SIZE_ERROR", :type "CXType_Int", :name "ERR_HTTP2_FRAME_SIZE_ERROR", :value -362, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_COMPRESSION_ERROR", :type "CXType_Int", :name "ERR_HTTP2_COMPRESSION_ERROR", :value -363, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_REQUESTED_WITH_NO_CONNECTION", :type "CXType_Int", :name "ERR_PROXY_AUTH_REQUESTED_WITH_NO_CONNECTION", :value -364, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP_1_1_REQUIRED", :type "CXType_Int", :name "ERR_HTTP_1_1_REQUIRED", :value -365, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_HTTP_1_1_REQUIRED", :type "CXType_Int", :name "ERR_PROXY_HTTP_1_1_REQUIRED", :value -366, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_SCRIPT_TERMINATED", :type "CXType_Int", :name "ERR_PAC_SCRIPT_TERMINATED", :value -367, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_HTTP_RESPONSE", :type "CXType_Int", :name "ERR_INVALID_HTTP_RESPONSE", :value -370, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_DECODING_INIT_FAILED", :type "CXType_Int", :name "ERR_CONTENT_DECODING_INIT_FAILED", :value -371, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_RST_STREAM_NO_ERROR_RECEIVED", :type "CXType_Int", :name "ERR_HTTP2_RST_STREAM_NO_ERROR_RECEIVED", :value -372, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_RETRIES", :type "CXType_Int", :name "ERR_TOO_MANY_RETRIES", :value -375, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_STREAM_CLOSED", :type "CXType_Int", :name "ERR_HTTP2_STREAM_CLOSED", :value -376, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP_RESPONSE_CODE_FAILURE", :type "CXType_Int", :name "ERR_HTTP_RESPONSE_CODE_FAILURE", :value -379, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_CERT_ROOT_NOT_KNOWN", :type "CXType_Int", :name "ERR_QUIC_CERT_ROOT_NOT_KNOWN", :value -380, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_GOAWAY_REQUEST_CAN_BE_RETRIED", :type "CXType_Int", :name "ERR_QUIC_GOAWAY_REQUEST_CAN_BE_RETRIED", :value -381, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_ACCEPT_CH_RESTARTS", :type "CXType_Int", :name "ERR_TOO_MANY_ACCEPT_CH_RESTARTS", :value -382, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCONSISTENT_IP_ADDRESS_SPACE", :type "CXType_Int", :name "ERR_INCONSISTENT_IP_ADDRESS_SPACE", :value -383, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHED_IP_ADDRESS_SPACE_BLOCKED_BY_PRIVATE_NETWORK_ACCESS_POLICY", :type "CXType_Int", :name "ERR_CACHED_IP_ADDRESS_SPACE_BLOCKED_BY_PRIVATE_NETWORK_ACCESS_POLICY", :value -384, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_MISS", :type "CXType_Int", :name "ERR_CACHE_MISS", :value -400, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_READ_FAILURE", :type "CXType_Int", :name "ERR_CACHE_READ_FAILURE", :value -401, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_WRITE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_WRITE_FAILURE", :value -402, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPERATION_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_CACHE_OPERATION_NOT_SUPPORTED", :value -403, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPEN_FAILURE", :type "CXType_Int", :name "ERR_CACHE_OPEN_FAILURE", :value -404, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CREATE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_CREATE_FAILURE", :value -405, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_RACE", :type "CXType_Int", :name "ERR_CACHE_RACE", :value -406, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CHECKSUM_READ_FAILURE", :type "CXType_Int", :name "ERR_CACHE_CHECKSUM_READ_FAILURE", :value -407, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CHECKSUM_MISMATCH", :type "CXType_Int", :name "ERR_CACHE_CHECKSUM_MISMATCH", :value -408, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_LOCK_TIMEOUT", :type "CXType_Int", :name "ERR_CACHE_LOCK_TIMEOUT", :value -409, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_AUTH_FAILURE_AFTER_READ", :type "CXType_Int", :name "ERR_CACHE_AUTH_FAILURE_AFTER_READ", :value -410, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_ENTRY_NOT_SUITABLE", :type "CXType_Int", :name "ERR_CACHE_ENTRY_NOT_SUITABLE", :value -411, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_DOOM_FAILURE", :type "CXType_Int", :name "ERR_CACHE_DOOM_FAILURE", :value -412, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPEN_OR_CREATE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_OPEN_OR_CREATE_FAILURE", :value -413, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INSECURE_RESPONSE", :type "CXType_Int", :name "ERR_INSECURE_RESPONSE", :value -501, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_PRIVATE_KEY_FOR_CERT", :type "CXType_Int", :name "ERR_NO_PRIVATE_KEY_FOR_CERT", :value -502, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADD_USER_CERT_FAILED", :type "CXType_Int", :name "ERR_ADD_USER_CERT_FAILED", :value -503, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_SIGNED_EXCHANGE", :type "CXType_Int", :name "ERR_INVALID_SIGNED_EXCHANGE", :value -504, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_WEB_BUNDLE", :type "CXType_Int", :name "ERR_INVALID_WEB_BUNDLE", :value -505, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TRUST_TOKEN_OPERATION_FAILED", :type "CXType_Int", :name "ERR_TRUST_TOKEN_OPERATION_FAILED", :value -506, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TRUST_TOKEN_OPERATION_SUCCESS_WITHOUT_SENDING_REQUEST", :type "CXType_Int", :name "ERR_TRUST_TOKEN_OPERATION_SUCCESS_WITHOUT_SENDING_REQUEST", :value -507, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_FAILED", :type "CXType_Int", :name "ERR_FTP_FAILED", :value -601, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_SERVICE_UNAVAILABLE", :type "CXType_Int", :name "ERR_FTP_SERVICE_UNAVAILABLE", :value -602, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_TRANSFER_ABORTED", :type "CXType_Int", :name "ERR_FTP_TRANSFER_ABORTED", :value -603, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_FILE_BUSY", :type "CXType_Int", :name "ERR_FTP_FILE_BUSY", :value -604, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_SYNTAX_ERROR", :type "CXType_Int", :name "ERR_FTP_SYNTAX_ERROR", :value -605, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_COMMAND_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_FTP_COMMAND_NOT_SUPPORTED", :value -606, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_BAD_COMMAND_SEQUENCE", :type "CXType_Int", :name "ERR_FTP_BAD_COMMAND_SEQUENCE", :value -607, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_BAD_PASSWORD", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_BAD_PASSWORD", :value -701, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_FAILED", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_FAILED", :value -702, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CA_CERT_NOT_CA", :type "CXType_Int", :name "ERR_IMPORT_CA_CERT_NOT_CA", :value -703, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CERT_ALREADY_EXISTS", :type "CXType_Int", :name "ERR_IMPORT_CERT_ALREADY_EXISTS", :value -704, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CA_CERT_FAILED", :type "CXType_Int", :name "ERR_IMPORT_CA_CERT_FAILED", :value -705, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_SERVER_CERT_FAILED", :type "CXType_Int", :name "ERR_IMPORT_SERVER_CERT_FAILED", :value -706, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_INVALID_MAC", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_INVALID_MAC", :value -707, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_INVALID_FILE", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_INVALID_FILE", :value -708, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_UNSUPPORTED", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_UNSUPPORTED", :value -709, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_KEY_GENERATION_FAILED", :type "CXType_Int", :name "ERR_KEY_GENERATION_FAILED", :value -710, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PRIVATE_KEY_EXPORT_FAILED", :type "CXType_Int", :name "ERR_PRIVATE_KEY_EXPORT_FAILED", :value -712, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SELF_SIGNED_CERT_GENERATION_FAILED", :type "CXType_Int", :name "ERR_SELF_SIGNED_CERT_GENERATION_FAILED", :value -713, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_DATABASE_CHANGED", :type "CXType_Int", :name "ERR_CERT_DATABASE_CHANGED", :value -714, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_VERIFIER_CHANGED", :type "CXType_Int", :name "ERR_CERT_VERIFIER_CHANGED", :value -716, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_MALFORMED_RESPONSE", :type "CXType_Int", :name "ERR_DNS_MALFORMED_RESPONSE", :value -800, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SERVER_REQUIRES_TCP", :type "CXType_Int", :name "ERR_DNS_SERVER_REQUIRES_TCP", :value -801, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SERVER_FAILED", :type "CXType_Int", :name "ERR_DNS_SERVER_FAILED", :value -802, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_TIMED_OUT", :type "CXType_Int", :name "ERR_DNS_TIMED_OUT", :value -803, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_CACHE_MISS", :type "CXType_Int", :name "ERR_DNS_CACHE_MISS", :value -804, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SEARCH_EMPTY", :type "CXType_Int", :name "ERR_DNS_SEARCH_EMPTY", :value -805, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SORT_ERROR", :type "CXType_Int", :name "ERR_DNS_SORT_ERROR", :value -806, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SECURE_RESOLVER_HOSTNAME_RESOLUTION_FAILED", :type "CXType_Int", :name "ERR_DNS_SECURE_RESOLVER_HOSTNAME_RESOLUTION_FAILED", :value -808, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_NAME_HTTPS_ONLY", :type "CXType_Int", :name "ERR_DNS_NAME_HTTPS_ONLY", :value -809, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_REQUEST_CANCELLED", :type "CXType_Int", :name "ERR_DNS_REQUEST_CANCELLED", :value -810, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_NO_MATCHING_SUPPORTED_ALPN", :type "CXType_Int", :name "ERR_DNS_NO_MATCHING_SUPPORTED_ALPN", :value -811, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DICTIONARY_LOAD_FAILED", :type "CXType_Int", :name "ERR_DICTIONARY_LOAD_FAILED", :value -812, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NONE", :type "CXType_Int", :name "ERR_NONE", :value 0, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IO_PENDING", :type "CXType_Int", :name "ERR_IO_PENDING", :value -1, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FAILED", :type "CXType_Int", :name "ERR_FAILED", :value -2, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ABORTED", :type "CXType_Int", :name "ERR_ABORTED", :value -3, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_ARGUMENT", :type "CXType_Int", :name "ERR_INVALID_ARGUMENT", :value -4, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_HANDLE", :type "CXType_Int", :name "ERR_INVALID_HANDLE", :value -5, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_NOT_FOUND", :type "CXType_Int", :name "ERR_FILE_NOT_FOUND", :value -6, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TIMED_OUT", :type "CXType_Int", :name "ERR_TIMED_OUT", :value -7, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_TOO_BIG", :type "CXType_Int", :name "ERR_FILE_TOO_BIG", :value -8, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED", :type "CXType_Int", :name "ERR_UNEXPECTED", :value -9, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ACCESS_DENIED", :type "CXType_Int", :name "ERR_ACCESS_DENIED", :value -10, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NOT_IMPLEMENTED", :type "CXType_Int", :name "ERR_NOT_IMPLEMENTED", :value -11, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INSUFFICIENT_RESOURCES", :type "CXType_Int", :name "ERR_INSUFFICIENT_RESOURCES", :value -12, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_OUT_OF_MEMORY", :type "CXType_Int", :name "ERR_OUT_OF_MEMORY", :value -13, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UPLOAD_FILE_CHANGED", :type "CXType_Int", :name "ERR_UPLOAD_FILE_CHANGED", :value -14, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_NOT_CONNECTED", :type "CXType_Int", :name "ERR_SOCKET_NOT_CONNECTED", :value -15, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_EXISTS", :type "CXType_Int", :name "ERR_FILE_EXISTS", :value -16, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_PATH_TOO_LONG", :type "CXType_Int", :name "ERR_FILE_PATH_TOO_LONG", :value -17, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_NO_SPACE", :type "CXType_Int", :name "ERR_FILE_NO_SPACE", :value -18, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FILE_VIRUS_INFECTED", :type "CXType_Int", :name "ERR_FILE_VIRUS_INFECTED", :value -19, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_CLIENT", :type "CXType_Int", :name "ERR_BLOCKED_BY_CLIENT", :value -20, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_CHANGED", :type "CXType_Int", :name "ERR_NETWORK_CHANGED", :value -21, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_ADMINISTRATOR", :type "CXType_Int", :name "ERR_BLOCKED_BY_ADMINISTRATOR", :value -22, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_IS_CONNECTED", :type "CXType_Int", :name "ERR_SOCKET_IS_CONNECTED", :value -23, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UPLOAD_STREAM_REWIND_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_UPLOAD_STREAM_REWIND_NOT_SUPPORTED", :value -25, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTEXT_SHUT_DOWN", :type "CXType_Int", :name "ERR_CONTEXT_SHUT_DOWN", :value -26, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_RESPONSE", :type "CXType_Int", :name "ERR_BLOCKED_BY_RESPONSE", :value -27, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CLEARTEXT_NOT_PERMITTED", :type "CXType_Int", :name "ERR_CLEARTEXT_NOT_PERMITTED", :value -29, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_CSP", :type "CXType_Int", :name "ERR_BLOCKED_BY_CSP", :value -30, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_H2_OR_QUIC_REQUIRED", :type "CXType_Int", :name "ERR_H2_OR_QUIC_REQUIRED", :value -31, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BLOCKED_BY_ORB", :type "CXType_Int", :name "ERR_BLOCKED_BY_ORB", :value -32, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_CLOSED", :type "CXType_Int", :name "ERR_CONNECTION_CLOSED", :value -100, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_RESET", :type "CXType_Int", :name "ERR_CONNECTION_RESET", :value -101, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_REFUSED", :type "CXType_Int", :name "ERR_CONNECTION_REFUSED", :value -102, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_ABORTED", :type "CXType_Int", :name "ERR_CONNECTION_ABORTED", :value -103, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_CONNECTION_FAILED", :value -104, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NAME_NOT_RESOLVED", :type "CXType_Int", :name "ERR_NAME_NOT_RESOLVED", :value -105, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INTERNET_DISCONNECTED", :type "CXType_Int", :name "ERR_INTERNET_DISCONNECTED", :value -106, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_SSL_PROTOCOL_ERROR", :value -107, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_INVALID", :type "CXType_Int", :name "ERR_ADDRESS_INVALID", :value -108, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_UNREACHABLE", :type "CXType_Int", :name "ERR_ADDRESS_UNREACHABLE", :value -109, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_NEEDED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_NEEDED", :value -110, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TUNNEL_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_TUNNEL_CONNECTION_FAILED", :value -111, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_SSL_VERSIONS_ENABLED", :type "CXType_Int", :name "ERR_NO_SSL_VERSIONS_ENABLED", :value -112, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_VERSION_OR_CIPHER_MISMATCH", :type "CXType_Int", :name "ERR_SSL_VERSION_OR_CIPHER_MISMATCH", :value -113, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_RENEGOTIATION_REQUESTED", :type "CXType_Int", :name "ERR_SSL_RENEGOTIATION_REQUESTED", :value -114, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_UNSUPPORTED", :type "CXType_Int", :name "ERR_PROXY_AUTH_UNSUPPORTED", :value -115, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_BAD_SSL_CLIENT_AUTH_CERT", :type "CXType_Int", :name "ERR_BAD_SSL_CLIENT_AUTH_CERT", :value -117, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONNECTION_TIMED_OUT", :type "CXType_Int", :name "ERR_CONNECTION_TIMED_OUT", :value -118, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HOST_RESOLVER_QUEUE_TOO_LARGE", :type "CXType_Int", :name "ERR_HOST_RESOLVER_QUEUE_TOO_LARGE", :value -119, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKS_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_SOCKS_CONNECTION_FAILED", :value -120, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKS_CONNECTION_HOST_UNREACHABLE", :type "CXType_Int", :name "ERR_SOCKS_CONNECTION_HOST_UNREACHABLE", :value -121, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ALPN_NEGOTIATION_FAILED", :type "CXType_Int", :name "ERR_ALPN_NEGOTIATION_FAILED", :value -122, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_NO_RENEGOTIATION", :type "CXType_Int", :name "ERR_SSL_NO_RENEGOTIATION", :value -123, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WINSOCK_UNEXPECTED_WRITTEN_BYTES", :type "CXType_Int", :name "ERR_WINSOCK_UNEXPECTED_WRITTEN_BYTES", :value -124, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_DECOMPRESSION_FAILURE_ALERT", :type "CXType_Int", :name "ERR_SSL_DECOMPRESSION_FAILURE_ALERT", :value -125, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_BAD_RECORD_MAC_ALERT", :type "CXType_Int", :name "ERR_SSL_BAD_RECORD_MAC_ALERT", :value -126, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_REQUESTED", :type "CXType_Int", :name "ERR_PROXY_AUTH_REQUESTED", :value -127, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_CONNECTION_FAILED", :type "CXType_Int", :name "ERR_PROXY_CONNECTION_FAILED", :value -130, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MANDATORY_PROXY_CONFIGURATION_FAILED", :type "CXType_Int", :name "ERR_MANDATORY_PROXY_CONFIGURATION_FAILED", :value -131, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PRECONNECT_MAX_SOCKET_LIMIT", :type "CXType_Int", :name "ERR_PRECONNECT_MAX_SOCKET_LIMIT", :value -133, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_PRIVATE_KEY_ACCESS_DENIED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_PRIVATE_KEY_ACCESS_DENIED", :value -134, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_NO_PRIVATE_KEY", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_NO_PRIVATE_KEY", :value -135, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_CERTIFICATE_INVALID", :type "CXType_Int", :name "ERR_PROXY_CERTIFICATE_INVALID", :value -136, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NAME_RESOLUTION_FAILED", :type "CXType_Int", :name "ERR_NAME_RESOLUTION_FAILED", :value -137, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_ACCESS_DENIED", :type "CXType_Int", :name "ERR_NETWORK_ACCESS_DENIED", :value -138, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TEMPORARILY_THROTTLED", :type "CXType_Int", :name "ERR_TEMPORARILY_THROTTLED", :value -139, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTPS_PROXY_TUNNEL_RESPONSE_REDIRECT", :type "CXType_Int", :name "ERR_HTTPS_PROXY_TUNNEL_RESPONSE_REDIRECT", :value -140, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_SIGNATURE_FAILED", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_SIGNATURE_FAILED", :value -141, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MSG_TOO_BIG", :type "CXType_Int", :name "ERR_MSG_TOO_BIG", :value -142, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_WS_PROTOCOL_ERROR", :value -145, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADDRESS_IN_USE", :type "CXType_Int", :name "ERR_ADDRESS_IN_USE", :value -147, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_HANDSHAKE_NOT_COMPLETED", :type "CXType_Int", :name "ERR_SSL_HANDSHAKE_NOT_COMPLETED", :value -148, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_BAD_PEER_PUBLIC_KEY", :type "CXType_Int", :name "ERR_SSL_BAD_PEER_PUBLIC_KEY", :value -149, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_PINNED_KEY_NOT_IN_CERT_CHAIN", :type "CXType_Int", :name "ERR_SSL_PINNED_KEY_NOT_IN_CERT_CHAIN", :value -150, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CLIENT_AUTH_CERT_TYPE_UNSUPPORTED", :type "CXType_Int", :name "ERR_CLIENT_AUTH_CERT_TYPE_UNSUPPORTED", :value -151, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_DECRYPT_ERROR_ALERT", :type "CXType_Int", :name "ERR_SSL_DECRYPT_ERROR_ALERT", :value -153, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_THROTTLE_QUEUE_TOO_LARGE", :type "CXType_Int", :name "ERR_WS_THROTTLE_QUEUE_TOO_LARGE", :value -154, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_SERVER_CERT_CHANGED", :type "CXType_Int", :name "ERR_SSL_SERVER_CERT_CHANGED", :value -156, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_UNRECOGNIZED_NAME_ALERT", :type "CXType_Int", :name "ERR_SSL_UNRECOGNIZED_NAME_ALERT", :value -159, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SET_RECEIVE_BUFFER_SIZE_ERROR", :type "CXType_Int", :name "ERR_SOCKET_SET_RECEIVE_BUFFER_SIZE_ERROR", :value -160, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SET_SEND_BUFFER_SIZE_ERROR", :type "CXType_Int", :name "ERR_SOCKET_SET_SEND_BUFFER_SIZE_ERROR", :value -161, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_RECEIVE_BUFFER_SIZE_UNCHANGEABLE", :type "CXType_Int", :name "ERR_SOCKET_RECEIVE_BUFFER_SIZE_UNCHANGEABLE", :value -162, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SOCKET_SEND_BUFFER_SIZE_UNCHANGEABLE", :type "CXType_Int", :name "ERR_SOCKET_SEND_BUFFER_SIZE_UNCHANGEABLE", :value -163, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_CERT_BAD_FORMAT", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_CERT_BAD_FORMAT", :value -164, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ICANN_NAME_COLLISION", :type "CXType_Int", :name "ERR_ICANN_NAME_COLLISION", :value -166, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_SERVER_CERT_BAD_FORMAT", :type "CXType_Int", :name "ERR_SSL_SERVER_CERT_BAD_FORMAT", :value -167, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_STH_PARSING_FAILED", :type "CXType_Int", :name "ERR_CT_STH_PARSING_FAILED", :value -168, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_STH_INCOMPLETE", :type "CXType_Int", :name "ERR_CT_STH_INCOMPLETE", :value -169, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH", :type "CXType_Int", :name "ERR_UNABLE_TO_REUSE_CONNECTION_FOR_PROXY_AUTH", :value -170, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CT_CONSISTENCY_PROOF_PARSING_FAILED", :type "CXType_Int", :name "ERR_CT_CONSISTENCY_PROOF_PARSING_FAILED", :value -171, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_OBSOLETE_CIPHER", :type "CXType_Int", :name "ERR_SSL_OBSOLETE_CIPHER", :value -172, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WS_UPGRADE", :type "CXType_Int", :name "ERR_WS_UPGRADE", :value -173, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_READ_IF_READY_NOT_IMPLEMENTED", :type "CXType_Int", :name "ERR_READ_IF_READY_NOT_IMPLEMENTED", :value -174, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_BUFFER_SPACE", :type "CXType_Int", :name "ERR_NO_BUFFER_SPACE", :value -176, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_CLIENT_AUTH_NO_COMMON_ALGORITHMS", :type "CXType_Int", :name "ERR_SSL_CLIENT_AUTH_NO_COMMON_ALGORITHMS", :value -177, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_EARLY_DATA_REJECTED", :type "CXType_Int", :name "ERR_EARLY_DATA_REJECTED", :value -178, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_WRONG_VERSION_ON_EARLY_DATA", :type "CXType_Int", :name "ERR_WRONG_VERSION_ON_EARLY_DATA", :value -179, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TLS13_DOWNGRADE_DETECTED", :type "CXType_Int", :name "ERR_TLS13_DOWNGRADE_DETECTED", :value -180, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SSL_KEY_USAGE_INCOMPATIBLE", :type "CXType_Int", :name "ERR_SSL_KEY_USAGE_INCOMPATIBLE", :value -181, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_ECH_CONFIG_LIST", :type "CXType_Int", :name "ERR_INVALID_ECH_CONFIG_LIST", :value -182, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ECH_NOT_NEGOTIATED", :type "CXType_Int", :name "ERR_ECH_NOT_NEGOTIATED", :value -183, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ECH_FALLBACK_CERTIFICATE_INVALID", :type "CXType_Int", :name "ERR_ECH_FALLBACK_CERTIFICATE_INVALID", :value -184, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_COMMON_NAME_INVALID", :type "CXType_Int", :name "ERR_CERT_COMMON_NAME_INVALID", :value -200, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_DATE_INVALID", :type "CXType_Int", :name "ERR_CERT_DATE_INVALID", :value -201, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_AUTHORITY_INVALID", :type "CXType_Int", :name "ERR_CERT_AUTHORITY_INVALID", :value -202, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_CONTAINS_ERRORS", :type "CXType_Int", :name "ERR_CERT_CONTAINS_ERRORS", :value -203, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NO_REVOCATION_MECHANISM", :type "CXType_Int", :name "ERR_CERT_NO_REVOCATION_MECHANISM", :value -204, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_UNABLE_TO_CHECK_REVOCATION", :type "CXType_Int", :name "ERR_CERT_UNABLE_TO_CHECK_REVOCATION", :value -205, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_REVOKED", :type "CXType_Int", :name "ERR_CERT_REVOKED", :value -206, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_INVALID", :type "CXType_Int", :name "ERR_CERT_INVALID", :value -207, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_WEAK_SIGNATURE_ALGORITHM", :type "CXType_Int", :name "ERR_CERT_WEAK_SIGNATURE_ALGORITHM", :value -208, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NON_UNIQUE_NAME", :type "CXType_Int", :name "ERR_CERT_NON_UNIQUE_NAME", :value -210, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_WEAK_KEY", :type "CXType_Int", :name "ERR_CERT_WEAK_KEY", :value -211, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_NAME_CONSTRAINT_VIOLATION", :type "CXType_Int", :name "ERR_CERT_NAME_CONSTRAINT_VIOLATION", :value -212, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_VALIDITY_TOO_LONG", :type "CXType_Int", :name "ERR_CERT_VALIDITY_TOO_LONG", :value -213, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERTIFICATE_TRANSPARENCY_REQUIRED", :type "CXType_Int", :name "ERR_CERTIFICATE_TRANSPARENCY_REQUIRED", :value -214, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_SYMANTEC_LEGACY", :type "CXType_Int", :name "ERR_CERT_SYMANTEC_LEGACY", :value -215, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_KNOWN_INTERCEPTION_BLOCKED", :type "CXType_Int", :name "ERR_CERT_KNOWN_INTERCEPTION_BLOCKED", :value -217, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_END", :type "CXType_Int", :name "ERR_CERT_END", :value -219, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_URL", :type "CXType_Int", :name "ERR_INVALID_URL", :value -300, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DISALLOWED_URL_SCHEME", :type "CXType_Int", :name "ERR_DISALLOWED_URL_SCHEME", :value -301, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNKNOWN_URL_SCHEME", :type "CXType_Int", :name "ERR_UNKNOWN_URL_SCHEME", :value -302, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_REDIRECT", :type "CXType_Int", :name "ERR_INVALID_REDIRECT", :value -303, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_REDIRECTS", :type "CXType_Int", :name "ERR_TOO_MANY_REDIRECTS", :value -310, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSAFE_REDIRECT", :type "CXType_Int", :name "ERR_UNSAFE_REDIRECT", :value -311, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSAFE_PORT", :type "CXType_Int", :name "ERR_UNSAFE_PORT", :value -312, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_RESPONSE", :type "CXType_Int", :name "ERR_INVALID_RESPONSE", :value -320, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_CHUNKED_ENCODING", :type "CXType_Int", :name "ERR_INVALID_CHUNKED_ENCODING", :value -321, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_METHOD_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_METHOD_NOT_SUPPORTED", :value -322, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED_PROXY_AUTH", :type "CXType_Int", :name "ERR_UNEXPECTED_PROXY_AUTH", :value -323, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_EMPTY_RESPONSE", :type "CXType_Int", :name "ERR_EMPTY_RESPONSE", :value -324, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_TOO_BIG", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_TOO_BIG", :value -325, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_SCRIPT_FAILED", :type "CXType_Int", :name "ERR_PAC_SCRIPT_FAILED", :value -327, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_REQUEST_RANGE_NOT_SATISFIABLE", :type "CXType_Int", :name "ERR_REQUEST_RANGE_NOT_SATISFIABLE", :value -328, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MALFORMED_IDENTITY", :type "CXType_Int", :name "ERR_MALFORMED_IDENTITY", :value -329, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_DECODING_FAILED", :type "CXType_Int", :name "ERR_CONTENT_DECODING_FAILED", :value -330, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NETWORK_IO_SUSPENDED", :type "CXType_Int", :name "ERR_NETWORK_IO_SUSPENDED", :value -331, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SYN_REPLY_NOT_RECEIVED", :type "CXType_Int", :name "ERR_SYN_REPLY_NOT_RECEIVED", :value -332, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ENCODING_CONVERSION_FAILED", :type "CXType_Int", :name "ERR_ENCODING_CONVERSION_FAILED", :value -333, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNRECOGNIZED_FTP_DIRECTORY_LISTING_FORMAT", :type "CXType_Int", :name "ERR_UNRECOGNIZED_FTP_DIRECTORY_LISTING_FORMAT", :value -334, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_SUPPORTED_PROXIES", :type "CXType_Int", :name "ERR_NO_SUPPORTED_PROXIES", :value -336, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_HTTP2_PROTOCOL_ERROR", :value -337, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_AUTH_CREDENTIALS", :type "CXType_Int", :name "ERR_INVALID_AUTH_CREDENTIALS", :value -338, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNSUPPORTED_AUTH_SCHEME", :type "CXType_Int", :name "ERR_UNSUPPORTED_AUTH_SCHEME", :value -339, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ENCODING_DETECTION_FAILED", :type "CXType_Int", :name "ERR_ENCODING_DETECTION_FAILED", :value -340, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MISSING_AUTH_CREDENTIALS", :type "CXType_Int", :name "ERR_MISSING_AUTH_CREDENTIALS", :value -341, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNEXPECTED_SECURITY_LIBRARY_STATUS", :type "CXType_Int", :name "ERR_UNEXPECTED_SECURITY_LIBRARY_STATUS", :value -342, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_MISCONFIGURED_AUTH_ENVIRONMENT", :type "CXType_Int", :name "ERR_MISCONFIGURED_AUTH_ENVIRONMENT", :value -343, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_UNDOCUMENTED_SECURITY_LIBRARY_STATUS", :type "CXType_Int", :name "ERR_UNDOCUMENTED_SECURITY_LIBRARY_STATUS", :value -344, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_BODY_TOO_BIG_TO_DRAIN", :type "CXType_Int", :name "ERR_RESPONSE_BODY_TOO_BIG_TO_DRAIN", :value -345, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_LENGTH", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_LENGTH", :value -346, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCOMPLETE_HTTP2_HEADERS", :type "CXType_Int", :name "ERR_INCOMPLETE_HTTP2_HEADERS", :value -347, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_NOT_IN_DHCP", :type "CXType_Int", :name "ERR_PAC_NOT_IN_DHCP", :value -348, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_DISPOSITION", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_CONTENT_DISPOSITION", :value -349, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_MULTIPLE_LOCATION", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_MULTIPLE_LOCATION", :value -350, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_SERVER_REFUSED_STREAM", :type "CXType_Int", :name "ERR_HTTP2_SERVER_REFUSED_STREAM", :value -351, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_PING_FAILED", :type "CXType_Int", :name "ERR_HTTP2_PING_FAILED", :value -352, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_LENGTH_MISMATCH", :type "CXType_Int", :name "ERR_CONTENT_LENGTH_MISMATCH", :value -354, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCOMPLETE_CHUNKED_ENCODING", :type "CXType_Int", :name "ERR_INCOMPLETE_CHUNKED_ENCODING", :value -355, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_PROTOCOL_ERROR", :type "CXType_Int", :name "ERR_QUIC_PROTOCOL_ERROR", :value -356, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_RESPONSE_HEADERS_TRUNCATED", :type "CXType_Int", :name "ERR_RESPONSE_HEADERS_TRUNCATED", :value -357, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_HANDSHAKE_FAILED", :type "CXType_Int", :name "ERR_QUIC_HANDSHAKE_FAILED", :value -358, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY", :type "CXType_Int", :name "ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY", :value -360, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_FLOW_CONTROL_ERROR", :type "CXType_Int", :name "ERR_HTTP2_FLOW_CONTROL_ERROR", :value -361, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_FRAME_SIZE_ERROR", :type "CXType_Int", :name "ERR_HTTP2_FRAME_SIZE_ERROR", :value -362, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_COMPRESSION_ERROR", :type "CXType_Int", :name "ERR_HTTP2_COMPRESSION_ERROR", :value -363, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_AUTH_REQUESTED_WITH_NO_CONNECTION", :type "CXType_Int", :name "ERR_PROXY_AUTH_REQUESTED_WITH_NO_CONNECTION", :value -364, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP_1_1_REQUIRED", :type "CXType_Int", :name "ERR_HTTP_1_1_REQUIRED", :value -365, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PROXY_HTTP_1_1_REQUIRED", :type "CXType_Int", :name "ERR_PROXY_HTTP_1_1_REQUIRED", :value -366, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PAC_SCRIPT_TERMINATED", :type "CXType_Int", :name "ERR_PAC_SCRIPT_TERMINATED", :value -367, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_HTTP_RESPONSE", :type "CXType_Int", :name "ERR_INVALID_HTTP_RESPONSE", :value -370, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CONTENT_DECODING_INIT_FAILED", :type "CXType_Int", :name "ERR_CONTENT_DECODING_INIT_FAILED", :value -371, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_RST_STREAM_NO_ERROR_RECEIVED", :type "CXType_Int", :name "ERR_HTTP2_RST_STREAM_NO_ERROR_RECEIVED", :value -372, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_RETRIES", :type "CXType_Int", :name "ERR_TOO_MANY_RETRIES", :value -375, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP2_STREAM_CLOSED", :type "CXType_Int", :name "ERR_HTTP2_STREAM_CLOSED", :value -376, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_HTTP_RESPONSE_CODE_FAILURE", :type "CXType_Int", :name "ERR_HTTP_RESPONSE_CODE_FAILURE", :value -379, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_CERT_ROOT_NOT_KNOWN", :type "CXType_Int", :name "ERR_QUIC_CERT_ROOT_NOT_KNOWN", :value -380, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_QUIC_GOAWAY_REQUEST_CAN_BE_RETRIED", :type "CXType_Int", :name "ERR_QUIC_GOAWAY_REQUEST_CAN_BE_RETRIED", :value -381, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TOO_MANY_ACCEPT_CH_RESTARTS", :type "CXType_Int", :name "ERR_TOO_MANY_ACCEPT_CH_RESTARTS", :value -382, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INCONSISTENT_IP_ADDRESS_SPACE", :type "CXType_Int", :name "ERR_INCONSISTENT_IP_ADDRESS_SPACE", :value -383, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHED_IP_ADDRESS_SPACE_BLOCKED_BY_PRIVATE_NETWORK_ACCESS_POLICY", :type "CXType_Int", :name "ERR_CACHED_IP_ADDRESS_SPACE_BLOCKED_BY_PRIVATE_NETWORK_ACCESS_POLICY", :value -384, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_MISS", :type "CXType_Int", :name "ERR_CACHE_MISS", :value -400, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_READ_FAILURE", :type "CXType_Int", :name "ERR_CACHE_READ_FAILURE", :value -401, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_WRITE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_WRITE_FAILURE", :value -402, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPERATION_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_CACHE_OPERATION_NOT_SUPPORTED", :value -403, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPEN_FAILURE", :type "CXType_Int", :name "ERR_CACHE_OPEN_FAILURE", :value -404, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CREATE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_CREATE_FAILURE", :value -405, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_RACE", :type "CXType_Int", :name "ERR_CACHE_RACE", :value -406, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CHECKSUM_READ_FAILURE", :type "CXType_Int", :name "ERR_CACHE_CHECKSUM_READ_FAILURE", :value -407, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_CHECKSUM_MISMATCH", :type "CXType_Int", :name "ERR_CACHE_CHECKSUM_MISMATCH", :value -408, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_LOCK_TIMEOUT", :type "CXType_Int", :name "ERR_CACHE_LOCK_TIMEOUT", :value -409, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_AUTH_FAILURE_AFTER_READ", :type "CXType_Int", :name "ERR_CACHE_AUTH_FAILURE_AFTER_READ", :value -410, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_ENTRY_NOT_SUITABLE", :type "CXType_Int", :name "ERR_CACHE_ENTRY_NOT_SUITABLE", :value -411, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_DOOM_FAILURE", :type "CXType_Int", :name "ERR_CACHE_DOOM_FAILURE", :value -412, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CACHE_OPEN_OR_CREATE_FAILURE", :type "CXType_Int", :name "ERR_CACHE_OPEN_OR_CREATE_FAILURE", :value -413, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INSECURE_RESPONSE", :type "CXType_Int", :name "ERR_INSECURE_RESPONSE", :value -501, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_NO_PRIVATE_KEY_FOR_CERT", :type "CXType_Int", :name "ERR_NO_PRIVATE_KEY_FOR_CERT", :value -502, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_ADD_USER_CERT_FAILED", :type "CXType_Int", :name "ERR_ADD_USER_CERT_FAILED", :value -503, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_SIGNED_EXCHANGE", :type "CXType_Int", :name "ERR_INVALID_SIGNED_EXCHANGE", :value -504, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_INVALID_WEB_BUNDLE", :type "CXType_Int", :name "ERR_INVALID_WEB_BUNDLE", :value -505, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TRUST_TOKEN_OPERATION_FAILED", :type "CXType_Int", :name "ERR_TRUST_TOKEN_OPERATION_FAILED", :value -506, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_TRUST_TOKEN_OPERATION_SUCCESS_WITHOUT_SENDING_REQUEST", :type "CXType_Int", :name "ERR_TRUST_TOKEN_OPERATION_SUCCESS_WITHOUT_SENDING_REQUEST", :value -507, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_FAILED", :type "CXType_Int", :name "ERR_FTP_FAILED", :value -601, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_SERVICE_UNAVAILABLE", :type "CXType_Int", :name "ERR_FTP_SERVICE_UNAVAILABLE", :value -602, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_TRANSFER_ABORTED", :type "CXType_Int", :name "ERR_FTP_TRANSFER_ABORTED", :value -603, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_FILE_BUSY", :type "CXType_Int", :name "ERR_FTP_FILE_BUSY", :value -604, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_SYNTAX_ERROR", :type "CXType_Int", :name "ERR_FTP_SYNTAX_ERROR", :value -605, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_COMMAND_NOT_SUPPORTED", :type "CXType_Int", :name "ERR_FTP_COMMAND_NOT_SUPPORTED", :value -606, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_FTP_BAD_COMMAND_SEQUENCE", :type "CXType_Int", :name "ERR_FTP_BAD_COMMAND_SEQUENCE", :value -607, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_BAD_PASSWORD", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_BAD_PASSWORD", :value -701, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_FAILED", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_FAILED", :value -702, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CA_CERT_NOT_CA", :type "CXType_Int", :name "ERR_IMPORT_CA_CERT_NOT_CA", :value -703, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CERT_ALREADY_EXISTS", :type "CXType_Int", :name "ERR_IMPORT_CERT_ALREADY_EXISTS", :value -704, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_CA_CERT_FAILED", :type "CXType_Int", :name "ERR_IMPORT_CA_CERT_FAILED", :value -705, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_IMPORT_SERVER_CERT_FAILED", :type "CXType_Int", :name "ERR_IMPORT_SERVER_CERT_FAILED", :value -706, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_INVALID_MAC", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_INVALID_MAC", :value -707, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_INVALID_FILE", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_INVALID_FILE", :value -708, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PKCS12_IMPORT_UNSUPPORTED", :type "CXType_Int", :name "ERR_PKCS12_IMPORT_UNSUPPORTED", :value -709, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_KEY_GENERATION_FAILED", :type "CXType_Int", :name "ERR_KEY_GENERATION_FAILED", :value -710, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_PRIVATE_KEY_EXPORT_FAILED", :type "CXType_Int", :name "ERR_PRIVATE_KEY_EXPORT_FAILED", :value -712, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_SELF_SIGNED_CERT_GENERATION_FAILED", :type "CXType_Int", :name "ERR_SELF_SIGNED_CERT_GENERATION_FAILED", :value -713, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_DATABASE_CHANGED", :type "CXType_Int", :name "ERR_CERT_DATABASE_CHANGED", :value -714, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_CERT_VERIFIER_CHANGED", :type "CXType_Int", :name "ERR_CERT_VERIFIER_CHANGED", :value -716, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_MALFORMED_RESPONSE", :type "CXType_Int", :name "ERR_DNS_MALFORMED_RESPONSE", :value -800, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SERVER_REQUIRES_TCP", :type "CXType_Int", :name "ERR_DNS_SERVER_REQUIRES_TCP", :value -801, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SERVER_FAILED", :type "CXType_Int", :name "ERR_DNS_SERVER_FAILED", :value -802, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_TIMED_OUT", :type "CXType_Int", :name "ERR_DNS_TIMED_OUT", :value -803, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_CACHE_MISS", :type "CXType_Int", :name "ERR_DNS_CACHE_MISS", :value -804, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SEARCH_EMPTY", :type "CXType_Int", :name "ERR_DNS_SEARCH_EMPTY", :value -805, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SORT_ERROR", :type "CXType_Int", :name "ERR_DNS_SORT_ERROR", :value -806, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_SECURE_RESOLVER_HOSTNAME_RESOLUTION_FAILED", :type "CXType_Int", :name "ERR_DNS_SECURE_RESOLVER_HOSTNAME_RESOLUTION_FAILED", :value -808, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_NAME_HTTPS_ONLY", :type "CXType_Int", :name "ERR_DNS_NAME_HTTPS_ONLY", :value -809, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_REQUEST_CANCELLED", :type "CXType_Int", :name "ERR_DNS_REQUEST_CANCELLED", :value -810, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DNS_NO_MATCHING_SUPPORTED_ALPN", :type "CXType_Int", :name "ERR_DNS_NO_MATCHING_SUPPORTED_ALPN", :value -811, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "ERR_DICTIONARY_LOAD_FAILED", :type "CXType_Int", :name "ERR_DICTIONARY_LOAD_FAILED", :value -812, :enum "cef_errorcode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NONE", :type "CXType_Int", :name "CERT_STATUS_NONE", :value 0, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_COMMON_NAME_INVALID", :type "CXType_Int", :name "CERT_STATUS_COMMON_NAME_INVALID", :value 1, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_DATE_INVALID", :type "CXType_Int", :name "CERT_STATUS_DATE_INVALID", :value 2, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_AUTHORITY_INVALID", :type "CXType_Int", :name "CERT_STATUS_AUTHORITY_INVALID", :value 4, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NO_REVOCATION_MECHANISM", :type "CXType_Int", :name "CERT_STATUS_NO_REVOCATION_MECHANISM", :value 16, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_UNABLE_TO_CHECK_REVOCATION", :type "CXType_Int", :name "CERT_STATUS_UNABLE_TO_CHECK_REVOCATION", :value 32, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_REVOKED", :type "CXType_Int", :name "CERT_STATUS_REVOKED", :value 64, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_INVALID", :type "CXType_Int", :name "CERT_STATUS_INVALID", :value 128, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_WEAK_SIGNATURE_ALGORITHM", :type "CXType_Int", :name "CERT_STATUS_WEAK_SIGNATURE_ALGORITHM", :value 256, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NON_UNIQUE_NAME", :type "CXType_Int", :name "CERT_STATUS_NON_UNIQUE_NAME", :value 1024, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_WEAK_KEY", :type "CXType_Int", :name "CERT_STATUS_WEAK_KEY", :value 2048, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_PINNED_KEY_MISSING", :type "CXType_Int", :name "CERT_STATUS_PINNED_KEY_MISSING", :value 8192, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NAME_CONSTRAINT_VIOLATION", :type "CXType_Int", :name "CERT_STATUS_NAME_CONSTRAINT_VIOLATION", :value 16384, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_VALIDITY_TOO_LONG", :type "CXType_Int", :name "CERT_STATUS_VALIDITY_TOO_LONG", :value 32768, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_IS_EV", :type "CXType_Int", :name "CERT_STATUS_IS_EV", :value 65536, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_REV_CHECKING_ENABLED", :type "CXType_Int", :name "CERT_STATUS_REV_CHECKING_ENABLED", :value 131072, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_SHA1_SIGNATURE_PRESENT", :type "CXType_Int", :name "CERT_STATUS_SHA1_SIGNATURE_PRESENT", :value 524288, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_CT_COMPLIANCE_FAILED", :type "CXType_Int", :name "CERT_STATUS_CT_COMPLIANCE_FAILED", :value 1048576, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NONE", :type "CXType_Int", :name "CERT_STATUS_NONE", :value 0, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_COMMON_NAME_INVALID", :type "CXType_Int", :name "CERT_STATUS_COMMON_NAME_INVALID", :value 1, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_DATE_INVALID", :type "CXType_Int", :name "CERT_STATUS_DATE_INVALID", :value 2, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_AUTHORITY_INVALID", :type "CXType_Int", :name "CERT_STATUS_AUTHORITY_INVALID", :value 4, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NO_REVOCATION_MECHANISM", :type "CXType_Int", :name "CERT_STATUS_NO_REVOCATION_MECHANISM", :value 16, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_UNABLE_TO_CHECK_REVOCATION", :type "CXType_Int", :name "CERT_STATUS_UNABLE_TO_CHECK_REVOCATION", :value 32, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_REVOKED", :type "CXType_Int", :name "CERT_STATUS_REVOKED", :value 64, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_INVALID", :type "CXType_Int", :name "CERT_STATUS_INVALID", :value 128, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_WEAK_SIGNATURE_ALGORITHM", :type "CXType_Int", :name "CERT_STATUS_WEAK_SIGNATURE_ALGORITHM", :value 256, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NON_UNIQUE_NAME", :type "CXType_Int", :name "CERT_STATUS_NON_UNIQUE_NAME", :value 1024, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_WEAK_KEY", :type "CXType_Int", :name "CERT_STATUS_WEAK_KEY", :value 2048, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_PINNED_KEY_MISSING", :type "CXType_Int", :name "CERT_STATUS_PINNED_KEY_MISSING", :value 8192, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_NAME_CONSTRAINT_VIOLATION", :type "CXType_Int", :name "CERT_STATUS_NAME_CONSTRAINT_VIOLATION", :value 16384, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_VALIDITY_TOO_LONG", :type "CXType_Int", :name "CERT_STATUS_VALIDITY_TOO_LONG", :value 32768, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_IS_EV", :type "CXType_Int", :name "CERT_STATUS_IS_EV", :value 65536, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_REV_CHECKING_ENABLED", :type "CXType_Int", :name "CERT_STATUS_REV_CHECKING_ENABLED", :value 131072, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_SHA1_SIGNATURE_PRESENT", :type "CXType_Int", :name "CERT_STATUS_SHA1_SIGNATURE_PRESENT", :value 524288, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CERT_STATUS_CT_COMPLIANCE_FAILED", :type "CXType_Int", :name "CERT_STATUS_CT_COMPLIANCE_FAILED", :value 1048576, :enum "cef_cert_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_UNKNOWN", :type "CXType_Int", :name "WOD_UNKNOWN", :value 0, :enum "cef_window_open_disposition_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_CURRENT_TAB", :type "CXType_Int", :name "WOD_CURRENT_TAB", :value 1, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Current tab. This is the default in most cases.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SINGLETON_TAB", :type "CXType_Int", :name "WOD_SINGLETON_TAB", :value 2, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Indicates that only one tab with the url should exist in the same window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_FOREGROUND_TAB", :type "CXType_Int", :name "WOD_NEW_FOREGROUND_TAB", :value 3, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Shift key + Middle mouse button or meta/ctrl key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_BACKGROUND_TAB", :type "CXType_Int", :name "WOD_NEW_BACKGROUND_TAB", :value 4, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Middle mouse button or meta/ctrl key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_POPUP", :type "CXType_Int", :name "WOD_NEW_POPUP", :value 5, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// New popup window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_WINDOW", :type "CXType_Int", :name "WOD_NEW_WINDOW", :value 6, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Shift key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SAVE_TO_DISK", :type "CXType_Int", :name "WOD_SAVE_TO_DISK", :value 7, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Alt key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_OFF_THE_RECORD", :type "CXType_Int", :name "WOD_OFF_THE_RECORD", :value 8, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// New off-the-record (incognito) window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_IGNORE_ACTION", :type "CXType_Int", :name "WOD_IGNORE_ACTION", :value 9, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Special case error condition from the renderer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SWITCH_TO_TAB", :type "CXType_Int", :name "WOD_SWITCH_TO_TAB", :value 10, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Activates an existing tab containing the url, rather than navigating.\n  /// This is similar to SINGLETON_TAB, but searches across all windows from\n  /// the current profile and anonymity (instead of just the current one);\n  /// closes the current tab on switching if the current tab was the NTP with\n  /// no session history; and behaves like CURRENT_TAB instead of\n  /// NEW_FOREGROUND_TAB when no existing tab is found.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_PICTURE_IN_PICTURE", :type "CXType_Int", :name "WOD_NEW_PICTURE_IN_PICTURE", :value 11, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Creates a new document picture-in-picture window showing a child WebView.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_UNKNOWN", :type "CXType_Int", :name "WOD_UNKNOWN", :value 0, :enum "cef_window_open_disposition_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_CURRENT_TAB", :type "CXType_Int", :name "WOD_CURRENT_TAB", :value 1, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Current tab. This is the default in most cases.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SINGLETON_TAB", :type "CXType_Int", :name "WOD_SINGLETON_TAB", :value 2, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Indicates that only one tab with the url should exist in the same window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_FOREGROUND_TAB", :type "CXType_Int", :name "WOD_NEW_FOREGROUND_TAB", :value 3, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Shift key + Middle mouse button or meta/ctrl key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_BACKGROUND_TAB", :type "CXType_Int", :name "WOD_NEW_BACKGROUND_TAB", :value 4, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Middle mouse button or meta/ctrl key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_POPUP", :type "CXType_Int", :name "WOD_NEW_POPUP", :value 5, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// New popup window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_WINDOW", :type "CXType_Int", :name "WOD_NEW_WINDOW", :value 6, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Shift key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SAVE_TO_DISK", :type "CXType_Int", :name "WOD_SAVE_TO_DISK", :value 7, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Alt key while clicking.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_OFF_THE_RECORD", :type "CXType_Int", :name "WOD_OFF_THE_RECORD", :value 8, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// New off-the-record (incognito) window.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_IGNORE_ACTION", :type "CXType_Int", :name "WOD_IGNORE_ACTION", :value 9, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Special case error condition from the renderer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_SWITCH_TO_TAB", :type "CXType_Int", :name "WOD_SWITCH_TO_TAB", :value 10, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Activates an existing tab containing the url, rather than navigating.\n  /// This is similar to SINGLETON_TAB, but searches across all windows from\n  /// the current profile and anonymity (instead of just the current one);\n  /// closes the current tab on switching if the current tab was the NTP with\n  /// no session history; and behaves like CURRENT_TAB instead of\n  /// NEW_FOREGROUND_TAB when no existing tab is found.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "WOD_NEW_PICTURE_IN_PICTURE", :type "CXType_Int", :name "WOD_NEW_PICTURE_IN_PICTURE", :value 11, :enum "cef_window_open_disposition_t", :raw-comment "///\n  /// Creates a new document picture-in-picture window showing a child WebView.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_NONE", :type "CXType_Int", :name "DRAG_OPERATION_NONE", :value 0, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_COPY", :type "CXType_Int", :name "DRAG_OPERATION_COPY", :value 1, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_LINK", :type "CXType_Int", :name "DRAG_OPERATION_LINK", :value 2, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_GENERIC", :type "CXType_Int", :name "DRAG_OPERATION_GENERIC", :value 4, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_PRIVATE", :type "CXType_Int", :name "DRAG_OPERATION_PRIVATE", :value 8, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_MOVE", :type "CXType_Int", :name "DRAG_OPERATION_MOVE", :value 16, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_DELETE", :type "CXType_Int", :name "DRAG_OPERATION_DELETE", :value 32, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_EVERY", :type "CXType_UInt", :name "DRAG_OPERATION_EVERY", :value -1, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_NONE", :type "CXType_Int", :name "DRAG_OPERATION_NONE", :value 0, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_COPY", :type "CXType_Int", :name "DRAG_OPERATION_COPY", :value 1, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_LINK", :type "CXType_Int", :name "DRAG_OPERATION_LINK", :value 2, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_GENERIC", :type "CXType_Int", :name "DRAG_OPERATION_GENERIC", :value 4, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_PRIVATE", :type "CXType_Int", :name "DRAG_OPERATION_PRIVATE", :value 8, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_MOVE", :type "CXType_Int", :name "DRAG_OPERATION_MOVE", :value 16, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_DELETE", :type "CXType_Int", :name "DRAG_OPERATION_DELETE", :value 32, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DRAG_OPERATION_EVERY", :type "CXType_UInt", :name "DRAG_OPERATION_EVERY", :value -1, :enum "cef_drag_operations_mask_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_DEFAULT", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_DEFAULT", :value 0, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_NONE", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_NONE", :value 1, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_TEXT", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_TEXT", :value 2, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_TEL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_TEL", :value 3, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_URL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_URL", :value 4, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_EMAIL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_EMAIL", :value 5, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_NUMERIC", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_NUMERIC", :value 6, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_DECIMAL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_DECIMAL", :value 7, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_SEARCH", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_SEARCH", :value 8, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_MAX", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_MAX", :value 8, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_DEFAULT", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_DEFAULT", :value 0, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_NONE", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_NONE", :value 1, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_TEXT", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_TEXT", :value 2, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_TEL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_TEL", :value 3, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_URL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_URL", :value 4, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_EMAIL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_EMAIL", :value 5, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_NUMERIC", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_NUMERIC", :value 6, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_DECIMAL", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_DECIMAL", :value 7, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_SEARCH", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_SEARCH", :value 8, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_INPUT_MODE_MAX", :type "CXType_Int", :name "CEF_TEXT_INPUT_MODE_MAX", :value 8, :enum "cef_text_input_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_DEFAULT", :type "CXType_Int", :name "V8_ACCESS_CONTROL_DEFAULT", :value 0, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_ALL_CAN_READ", :type "CXType_Int", :name "V8_ACCESS_CONTROL_ALL_CAN_READ", :value 1, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_ALL_CAN_WRITE", :type "CXType_Int", :name "V8_ACCESS_CONTROL_ALL_CAN_WRITE", :value 2, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_PROHIBITS_OVERWRITING", :type "CXType_Int", :name "V8_ACCESS_CONTROL_PROHIBITS_OVERWRITING", :value 4, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_DEFAULT", :type "CXType_Int", :name "V8_ACCESS_CONTROL_DEFAULT", :value 0, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_ALL_CAN_READ", :type "CXType_Int", :name "V8_ACCESS_CONTROL_ALL_CAN_READ", :value 1, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_ALL_CAN_WRITE", :type "CXType_Int", :name "V8_ACCESS_CONTROL_ALL_CAN_WRITE", :value 2, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_ACCESS_CONTROL_PROHIBITS_OVERWRITING", :type "CXType_Int", :name "V8_ACCESS_CONTROL_PROHIBITS_OVERWRITING", :value 4, :enum "cef_v8_accesscontrol_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_NONE", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_NONE", :value 0, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Writeable, Enumerable, Configurable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_READONLY", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_READONLY", :value 1, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not writeable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_DONTENUM", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_DONTENUM", :value 2, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not enumerable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_DONTDELETE", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_DONTDELETE", :value 4, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not configurable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_NONE", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_NONE", :value 0, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Writeable, Enumerable, Configurable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_READONLY", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_READONLY", :value 1, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not writeable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_DONTENUM", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_DONTENUM", :value 2, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not enumerable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "V8_PROPERTY_ATTRIBUTE_DONTDELETE", :type "CXType_Int", :name "V8_PROPERTY_ATTRIBUTE_DONTDELETE", :value 4, :enum "cef_v8_propertyattribute_t", :raw-comment "///\n  /// Not configurable\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_EMPTY", :type "CXType_Int", :name "PDE_TYPE_EMPTY", :value 0, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_BYTES", :type "CXType_Int", :name "PDE_TYPE_BYTES", :value 1, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_FILE", :type "CXType_Int", :name "PDE_TYPE_FILE", :value 2, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_EMPTY", :type "CXType_Int", :name "PDE_TYPE_EMPTY", :value 0, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_BYTES", :type "CXType_Int", :name "PDE_TYPE_BYTES", :value 1, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PDE_TYPE_FILE", :type "CXType_Int", :name "PDE_TYPE_FILE", :value 2, :enum "cef_postdataelement_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_MAIN_FRAME", :type "CXType_Int", :name "RT_MAIN_FRAME", :value 0, :enum "cef_resource_type_t", :raw-comment "///\n  /// Top level page.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SUB_FRAME", :type "CXType_Int", :name "RT_SUB_FRAME", :value 1, :enum "cef_resource_type_t", :raw-comment "///\n  /// Frame or iframe.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_STYLESHEET", :type "CXType_Int", :name "RT_STYLESHEET", :value 2, :enum "cef_resource_type_t", :raw-comment "///\n  /// CSS stylesheet.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SCRIPT", :type "CXType_Int", :name "RT_SCRIPT", :value 3, :enum "cef_resource_type_t", :raw-comment "///\n  /// External script.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_IMAGE", :type "CXType_Int", :name "RT_IMAGE", :value 4, :enum "cef_resource_type_t", :raw-comment "///\n  /// Image (jpg/gif/png/etc).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_FONT_RESOURCE", :type "CXType_Int", :name "RT_FONT_RESOURCE", :value 5, :enum "cef_resource_type_t", :raw-comment "///\n  /// Font.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SUB_RESOURCE", :type "CXType_Int", :name "RT_SUB_RESOURCE", :value 6, :enum "cef_resource_type_t", :raw-comment "///\n  /// Some other subresource. This is the default type if the actual type is\n  /// unknown.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_OBJECT", :type "CXType_Int", :name "RT_OBJECT", :value 7, :enum "cef_resource_type_t", :raw-comment "///\n  /// Object (or embed) tag for a plugin, or a resource that a plugin requested.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_MEDIA", :type "CXType_Int", :name "RT_MEDIA", :value 8, :enum "cef_resource_type_t", :raw-comment "///\n  /// Media resource.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_WORKER", :type "CXType_Int", :name "RT_WORKER", :value 9, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a dedicated worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SHARED_WORKER", :type "CXType_Int", :name "RT_SHARED_WORKER", :value 10, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a shared worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PREFETCH", :type "CXType_Int", :name "RT_PREFETCH", :value 11, :enum "cef_resource_type_t", :raw-comment "///\n  /// Explicitly requested prefetch.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_FAVICON", :type "CXType_Int", :name "RT_FAVICON", :value 12, :enum "cef_resource_type_t", :raw-comment "///\n  /// Favicon.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_XHR", :type "CXType_Int", :name "RT_XHR", :value 13, :enum "cef_resource_type_t", :raw-comment "///\n  /// XMLHttpRequest.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PING", :type "CXType_Int", :name "RT_PING", :value 14, :enum "cef_resource_type_t", :raw-comment "///\n  /// A request for a \"<ping>\".\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SERVICE_WORKER", :type "CXType_Int", :name "RT_SERVICE_WORKER", :value 15, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a service worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_CSP_REPORT", :type "CXType_Int", :name "RT_CSP_REPORT", :value 16, :enum "cef_resource_type_t", :raw-comment "///\n  /// A report of Content Security Policy violations.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PLUGIN_RESOURCE", :type "CXType_Int", :name "RT_PLUGIN_RESOURCE", :value 17, :enum "cef_resource_type_t", :raw-comment "///\n  /// A resource that a plugin requested.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_NAVIGATION_PRELOAD_MAIN_FRAME", :type "CXType_Int", :name "RT_NAVIGATION_PRELOAD_MAIN_FRAME", :value 19, :enum "cef_resource_type_t", :raw-comment "///\n  /// A main-frame service worker navigation preload request.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_NAVIGATION_PRELOAD_SUB_FRAME", :type "CXType_Int", :name "RT_NAVIGATION_PRELOAD_SUB_FRAME", :value 20, :enum "cef_resource_type_t", :raw-comment "///\n  /// A sub-frame service worker navigation preload request.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_MAIN_FRAME", :type "CXType_Int", :name "RT_MAIN_FRAME", :value 0, :enum "cef_resource_type_t", :raw-comment "///\n  /// Top level page.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SUB_FRAME", :type "CXType_Int", :name "RT_SUB_FRAME", :value 1, :enum "cef_resource_type_t", :raw-comment "///\n  /// Frame or iframe.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_STYLESHEET", :type "CXType_Int", :name "RT_STYLESHEET", :value 2, :enum "cef_resource_type_t", :raw-comment "///\n  /// CSS stylesheet.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SCRIPT", :type "CXType_Int", :name "RT_SCRIPT", :value 3, :enum "cef_resource_type_t", :raw-comment "///\n  /// External script.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_IMAGE", :type "CXType_Int", :name "RT_IMAGE", :value 4, :enum "cef_resource_type_t", :raw-comment "///\n  /// Image (jpg/gif/png/etc).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_FONT_RESOURCE", :type "CXType_Int", :name "RT_FONT_RESOURCE", :value 5, :enum "cef_resource_type_t", :raw-comment "///\n  /// Font.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SUB_RESOURCE", :type "CXType_Int", :name "RT_SUB_RESOURCE", :value 6, :enum "cef_resource_type_t", :raw-comment "///\n  /// Some other subresource. This is the default type if the actual type is\n  /// unknown.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_OBJECT", :type "CXType_Int", :name "RT_OBJECT", :value 7, :enum "cef_resource_type_t", :raw-comment "///\n  /// Object (or embed) tag for a plugin, or a resource that a plugin requested.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_MEDIA", :type "CXType_Int", :name "RT_MEDIA", :value 8, :enum "cef_resource_type_t", :raw-comment "///\n  /// Media resource.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_WORKER", :type "CXType_Int", :name "RT_WORKER", :value 9, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a dedicated worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SHARED_WORKER", :type "CXType_Int", :name "RT_SHARED_WORKER", :value 10, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a shared worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PREFETCH", :type "CXType_Int", :name "RT_PREFETCH", :value 11, :enum "cef_resource_type_t", :raw-comment "///\n  /// Explicitly requested prefetch.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_FAVICON", :type "CXType_Int", :name "RT_FAVICON", :value 12, :enum "cef_resource_type_t", :raw-comment "///\n  /// Favicon.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_XHR", :type "CXType_Int", :name "RT_XHR", :value 13, :enum "cef_resource_type_t", :raw-comment "///\n  /// XMLHttpRequest.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PING", :type "CXType_Int", :name "RT_PING", :value 14, :enum "cef_resource_type_t", :raw-comment "///\n  /// A request for a \"<ping>\".\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_SERVICE_WORKER", :type "CXType_Int", :name "RT_SERVICE_WORKER", :value 15, :enum "cef_resource_type_t", :raw-comment "///\n  /// Main resource of a service worker.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_CSP_REPORT", :type "CXType_Int", :name "RT_CSP_REPORT", :value 16, :enum "cef_resource_type_t", :raw-comment "///\n  /// A report of Content Security Policy violations.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_PLUGIN_RESOURCE", :type "CXType_Int", :name "RT_PLUGIN_RESOURCE", :value 17, :enum "cef_resource_type_t", :raw-comment "///\n  /// A resource that a plugin requested.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_NAVIGATION_PRELOAD_MAIN_FRAME", :type "CXType_Int", :name "RT_NAVIGATION_PRELOAD_MAIN_FRAME", :value 19, :enum "cef_resource_type_t", :raw-comment "///\n  /// A main-frame service worker navigation preload request.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RT_NAVIGATION_PRELOAD_SUB_FRAME", :type "CXType_Int", :name "RT_NAVIGATION_PRELOAD_SUB_FRAME", :value 20, :enum "cef_resource_type_t", :raw-comment "///\n  /// A sub-frame service worker navigation preload request.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_LINK", :type "CXType_Int", :name "TT_LINK", :value 0, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a link click or the JavaScript window.open function. This is\n  /// also the default value for requests like sub-resource loads that are not\n  /// navigations.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_EXPLICIT", :type "CXType_Int", :name "TT_EXPLICIT", :value 1, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is some other \"explicit\" navigation. This is the default value for\n  /// navigations where the actual type is unknown. See also\n  /// TT_DIRECT_LOAD_FLAG.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_BOOKMARK", :type "CXType_Int", :name "TT_AUTO_BOOKMARK", :value 2, :enum "cef_transition_type_t", :raw-comment "///\n  /// User got to this page through a suggestion in the UI (for example, via the\n  /// destinations page). Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_SUBFRAME", :type "CXType_Int", :name "TT_AUTO_SUBFRAME", :value 3, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a subframe navigation. This is any content that is automatically\n  /// loaded in a non-toplevel frame. For example, if a page consists of several\n  /// frames containing ads, those ad URLs will have this transition type.\n  /// The user may not even realize the content in these pages is a separate\n  /// frame, so may not care about the URL.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_MANUAL_SUBFRAME", :type "CXType_Int", :name "TT_MANUAL_SUBFRAME", :value 4, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a subframe navigation explicitly requested by the user that will\n  /// generate new navigation entries in the back/forward list. These are\n  /// probably more important than frames that were automatically loaded in\n  /// the background because the user probably cares about the fact that this\n  /// link was loaded.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_GENERATED", :type "CXType_Int", :name "TT_GENERATED", :value 5, :enum "cef_transition_type_t", :raw-comment "///\n  /// User got to this page by typing in the URL bar and selecting an entry\n  /// that did not look like a URL.  For example, a match might have the URL\n  /// of a Google search result page, but appear like \"Search Google for ...\".\n  /// These are not quite the same as EXPLICIT navigations because the user\n  /// didn't type or see the destination URL. Chrome runtime only.\n  /// See also TT_KEYWORD.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_TOPLEVEL", :type "CXType_Int", :name "TT_AUTO_TOPLEVEL", :value 6, :enum "cef_transition_type_t", :raw-comment "///\n  /// This is a toplevel navigation. This is any content that is automatically\n  /// loaded in a toplevel frame.  For example, opening a tab to show the ASH\n  /// screen saver, opening the devtools window, opening the NTP after the safe\n  /// browsing warning, opening web-based dialog boxes are examples of\n  /// AUTO_TOPLEVEL navigations. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FORM_SUBMIT", :type "CXType_Int", :name "TT_FORM_SUBMIT", :value 7, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a form submission by the user. NOTE: In some situations\n  /// submitting a form does not result in this transition type. This can happen\n  /// if the form uses a script to submit the contents.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_RELOAD", :type "CXType_Int", :name "TT_RELOAD", :value 8, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a \"reload\" of the page via the Reload function or by re-visiting\n  /// the same URL. NOTE: This is distinct from the concept of whether a\n  /// particular load uses \"reload semantics\" (i.e. bypasses cached data).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_KEYWORD", :type "CXType_Int", :name "TT_KEYWORD", :value 9, :enum "cef_transition_type_t", :raw-comment "///\n  /// The url was generated from a replaceable keyword other than the default\n  /// search provider. If the user types a keyword (which also applies to\n  /// tab-to-search) in the omnibox this qualifier is applied to the transition\n  /// type of the generated url. TemplateURLModel then may generate an\n  /// additional visit with a transition type of TT_KEYWORD_GENERATED against\n  /// the url 'http://' + keyword. For example, if you do a tab-to-search\n  /// against wikipedia the generated url has a transition qualifer of\n  /// TT_KEYWORD, and TemplateURLModel generates a visit for 'wikipedia.org'\n  /// with a transition type of TT_KEYWORD_GENERATED. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_KEYWORD_GENERATED", :type "CXType_Int", :name "TT_KEYWORD_GENERATED", :value 10, :enum "cef_transition_type_t", :raw-comment "///\n  /// Corresponds to a visit generated for a keyword. See description of\n  /// TT_KEYWORD for more details. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_SOURCE_MASK", :type "CXType_Int", :name "TT_SOURCE_MASK", :value 255, :enum "cef_transition_type_t", :raw-comment "///\n  /// General mask defining the bits used for the source values.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_BLOCKED_FLAG", :type "CXType_Int", :name "TT_BLOCKED_FLAG", :value 8388608, :enum "cef_transition_type_t", :raw-comment "///\n  /// Attempted to visit a URL but was blocked.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FORWARD_BACK_FLAG", :type "CXType_Int", :name "TT_FORWARD_BACK_FLAG", :value 16777216, :enum "cef_transition_type_t", :raw-comment "///\n  /// Used the Forward or Back function to navigate among browsing history.\n  /// Will be ORed to the transition type for the original load.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_DIRECT_LOAD_FLAG", :type "CXType_Int", :name "TT_DIRECT_LOAD_FLAG", :value 33554432, :enum "cef_transition_type_t", :raw-comment "///\n  /// Loaded a URL directly via CreateBrowser, LoadURL or LoadRequest.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_HOME_PAGE_FLAG", :type "CXType_Int", :name "TT_HOME_PAGE_FLAG", :value 67108864, :enum "cef_transition_type_t", :raw-comment "///\n  /// User is navigating to the home page. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FROM_API_FLAG", :type "CXType_Int", :name "TT_FROM_API_FLAG", :value 134217728, :enum "cef_transition_type_t", :raw-comment "///\n  /// The transition originated from an external application; the exact\n  /// definition of this is embedder dependent. Chrome runtime and\n  /// extension system only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CHAIN_START_FLAG", :type "CXType_Int", :name "TT_CHAIN_START_FLAG", :value 268435456, :enum "cef_transition_type_t", :raw-comment "///\n  /// The beginning of a navigation chain.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CHAIN_END_FLAG", :type "CXType_Int", :name "TT_CHAIN_END_FLAG", :value 536870912, :enum "cef_transition_type_t", :raw-comment "///\n  /// The last transition in a redirect chain.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CLIENT_REDIRECT_FLAG", :type "CXType_Int", :name "TT_CLIENT_REDIRECT_FLAG", :value 1073741824, :enum "cef_transition_type_t", :raw-comment "///\n  /// Redirects caused by JavaScript or a meta refresh tag on the page.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_SERVER_REDIRECT_FLAG", :type "CXType_UInt", :name "TT_SERVER_REDIRECT_FLAG", :value -2147483648, :enum "cef_transition_type_t", :raw-comment "///\n  /// Redirects sent from the server by HTTP headers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_IS_REDIRECT_MASK", :type "CXType_UInt", :name "TT_IS_REDIRECT_MASK", :value -1073741824, :enum "cef_transition_type_t", :raw-comment "///\n  /// Used to test whether a transition involves a redirect.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_QUALIFIER_MASK", :type "CXType_UInt", :name "TT_QUALIFIER_MASK", :value -256, :enum "cef_transition_type_t", :raw-comment "///\n  /// General mask defining the bits used for the qualifiers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_LINK", :type "CXType_Int", :name "TT_LINK", :value 0, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a link click or the JavaScript window.open function. This is\n  /// also the default value for requests like sub-resource loads that are not\n  /// navigations.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_EXPLICIT", :type "CXType_Int", :name "TT_EXPLICIT", :value 1, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is some other \"explicit\" navigation. This is the default value for\n  /// navigations where the actual type is unknown. See also\n  /// TT_DIRECT_LOAD_FLAG.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_BOOKMARK", :type "CXType_Int", :name "TT_AUTO_BOOKMARK", :value 2, :enum "cef_transition_type_t", :raw-comment "///\n  /// User got to this page through a suggestion in the UI (for example, via the\n  /// destinations page). Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_SUBFRAME", :type "CXType_Int", :name "TT_AUTO_SUBFRAME", :value 3, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a subframe navigation. This is any content that is automatically\n  /// loaded in a non-toplevel frame. For example, if a page consists of several\n  /// frames containing ads, those ad URLs will have this transition type.\n  /// The user may not even realize the content in these pages is a separate\n  /// frame, so may not care about the URL.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_MANUAL_SUBFRAME", :type "CXType_Int", :name "TT_MANUAL_SUBFRAME", :value 4, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a subframe navigation explicitly requested by the user that will\n  /// generate new navigation entries in the back/forward list. These are\n  /// probably more important than frames that were automatically loaded in\n  /// the background because the user probably cares about the fact that this\n  /// link was loaded.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_GENERATED", :type "CXType_Int", :name "TT_GENERATED", :value 5, :enum "cef_transition_type_t", :raw-comment "///\n  /// User got to this page by typing in the URL bar and selecting an entry\n  /// that did not look like a URL.  For example, a match might have the URL\n  /// of a Google search result page, but appear like \"Search Google for ...\".\n  /// These are not quite the same as EXPLICIT navigations because the user\n  /// didn't type or see the destination URL. Chrome runtime only.\n  /// See also TT_KEYWORD.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_AUTO_TOPLEVEL", :type "CXType_Int", :name "TT_AUTO_TOPLEVEL", :value 6, :enum "cef_transition_type_t", :raw-comment "///\n  /// This is a toplevel navigation. This is any content that is automatically\n  /// loaded in a toplevel frame.  For example, opening a tab to show the ASH\n  /// screen saver, opening the devtools window, opening the NTP after the safe\n  /// browsing warning, opening web-based dialog boxes are examples of\n  /// AUTO_TOPLEVEL navigations. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FORM_SUBMIT", :type "CXType_Int", :name "TT_FORM_SUBMIT", :value 7, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a form submission by the user. NOTE: In some situations\n  /// submitting a form does not result in this transition type. This can happen\n  /// if the form uses a script to submit the contents.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_RELOAD", :type "CXType_Int", :name "TT_RELOAD", :value 8, :enum "cef_transition_type_t", :raw-comment "///\n  /// Source is a \"reload\" of the page via the Reload function or by re-visiting\n  /// the same URL. NOTE: This is distinct from the concept of whether a\n  /// particular load uses \"reload semantics\" (i.e. bypasses cached data).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_KEYWORD", :type "CXType_Int", :name "TT_KEYWORD", :value 9, :enum "cef_transition_type_t", :raw-comment "///\n  /// The url was generated from a replaceable keyword other than the default\n  /// search provider. If the user types a keyword (which also applies to\n  /// tab-to-search) in the omnibox this qualifier is applied to the transition\n  /// type of the generated url. TemplateURLModel then may generate an\n  /// additional visit with a transition type of TT_KEYWORD_GENERATED against\n  /// the url 'http://' + keyword. For example, if you do a tab-to-search\n  /// against wikipedia the generated url has a transition qualifer of\n  /// TT_KEYWORD, and TemplateURLModel generates a visit for 'wikipedia.org'\n  /// with a transition type of TT_KEYWORD_GENERATED. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_KEYWORD_GENERATED", :type "CXType_Int", :name "TT_KEYWORD_GENERATED", :value 10, :enum "cef_transition_type_t", :raw-comment "///\n  /// Corresponds to a visit generated for a keyword. See description of\n  /// TT_KEYWORD for more details. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_SOURCE_MASK", :type "CXType_Int", :name "TT_SOURCE_MASK", :value 255, :enum "cef_transition_type_t", :raw-comment "///\n  /// General mask defining the bits used for the source values.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_BLOCKED_FLAG", :type "CXType_Int", :name "TT_BLOCKED_FLAG", :value 8388608, :enum "cef_transition_type_t", :raw-comment "///\n  /// Attempted to visit a URL but was blocked.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FORWARD_BACK_FLAG", :type "CXType_Int", :name "TT_FORWARD_BACK_FLAG", :value 16777216, :enum "cef_transition_type_t", :raw-comment "///\n  /// Used the Forward or Back function to navigate among browsing history.\n  /// Will be ORed to the transition type for the original load.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_DIRECT_LOAD_FLAG", :type "CXType_Int", :name "TT_DIRECT_LOAD_FLAG", :value 33554432, :enum "cef_transition_type_t", :raw-comment "///\n  /// Loaded a URL directly via CreateBrowser, LoadURL or LoadRequest.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_HOME_PAGE_FLAG", :type "CXType_Int", :name "TT_HOME_PAGE_FLAG", :value 67108864, :enum "cef_transition_type_t", :raw-comment "///\n  /// User is navigating to the home page. Chrome runtime only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_FROM_API_FLAG", :type "CXType_Int", :name "TT_FROM_API_FLAG", :value 134217728, :enum "cef_transition_type_t", :raw-comment "///\n  /// The transition originated from an external application; the exact\n  /// definition of this is embedder dependent. Chrome runtime and\n  /// extension system only.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CHAIN_START_FLAG", :type "CXType_Int", :name "TT_CHAIN_START_FLAG", :value 268435456, :enum "cef_transition_type_t", :raw-comment "///\n  /// The beginning of a navigation chain.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CHAIN_END_FLAG", :type "CXType_Int", :name "TT_CHAIN_END_FLAG", :value 536870912, :enum "cef_transition_type_t", :raw-comment "///\n  /// The last transition in a redirect chain.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_CLIENT_REDIRECT_FLAG", :type "CXType_Int", :name "TT_CLIENT_REDIRECT_FLAG", :value 1073741824, :enum "cef_transition_type_t", :raw-comment "///\n  /// Redirects caused by JavaScript or a meta refresh tag on the page.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_SERVER_REDIRECT_FLAG", :type "CXType_UInt", :name "TT_SERVER_REDIRECT_FLAG", :value -2147483648, :enum "cef_transition_type_t", :raw-comment "///\n  /// Redirects sent from the server by HTTP headers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_IS_REDIRECT_MASK", :type "CXType_UInt", :name "TT_IS_REDIRECT_MASK", :value -1073741824, :enum "cef_transition_type_t", :raw-comment "///\n  /// Used to test whether a transition involves a redirect.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TT_QUALIFIER_MASK", :type "CXType_UInt", :name "TT_QUALIFIER_MASK", :value -256, :enum "cef_transition_type_t", :raw-comment "///\n  /// General mask defining the bits used for the qualifiers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NONE", :type "CXType_Int", :name "UR_FLAG_NONE", :value 0, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// Default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_SKIP_CACHE", :type "CXType_Int", :name "UR_FLAG_SKIP_CACHE", :value 1, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the cache will be skipped when handling the request. Setting this\n  /// value is equivalent to specifying the \"Cache-Control: no-cache\" request\n  /// header. Setting this value in combination with UR_FLAG_ONLY_FROM_CACHE\n  /// will cause the request to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_ONLY_FROM_CACHE", :type "CXType_Int", :name "UR_FLAG_ONLY_FROM_CACHE", :value 2, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the request will fail if it cannot be served from the cache (or\n  /// some equivalent local store). Setting this value is equivalent to\n  /// specifying the \"Cache-Control: only-if-cached\" request header. Setting\n  /// this value in combination with UR_FLAG_SKIP_CACHE or UR_FLAG_DISABLE_CACHE\n  /// will cause the request to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_DISABLE_CACHE", :type "CXType_Int", :name "UR_FLAG_DISABLE_CACHE", :value 4, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the cache will not be used at all. Setting this value is equivalent\n  /// to specifying the \"Cache-Control: no-store\" request header. Setting this\n  /// value in combination with UR_FLAG_ONLY_FROM_CACHE will cause the request\n  /// to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_ALLOW_STORED_CREDENTIALS", :type "CXType_Int", :name "UR_FLAG_ALLOW_STORED_CREDENTIALS", :value 8, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set user name, password, and cookies may be sent with the request, and\n  /// cookies may be saved from the response.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_REPORT_UPLOAD_PROGRESS", :type "CXType_Int", :name "UR_FLAG_REPORT_UPLOAD_PROGRESS", :value 16, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set upload progress events will be generated when a request has a body.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NO_DOWNLOAD_DATA", :type "CXType_Int", :name "UR_FLAG_NO_DOWNLOAD_DATA", :value 32, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the CefURLRequestClient::OnDownloadData method will not be called.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NO_RETRY_ON_5XX", :type "CXType_Int", :name "UR_FLAG_NO_RETRY_ON_5XX", :value 64, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set 5XX redirect errors will be propagated to the observer instead of\n  /// automatically re-tried. This currently only applies for requests\n  /// originated in the browser process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_STOP_ON_REDIRECT", :type "CXType_Int", :name "UR_FLAG_STOP_ON_REDIRECT", :value 128, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set 3XX responses will cause the fetch to halt immediately rather than\n  /// continue through the redirect.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NONE", :type "CXType_Int", :name "UR_FLAG_NONE", :value 0, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// Default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_SKIP_CACHE", :type "CXType_Int", :name "UR_FLAG_SKIP_CACHE", :value 1, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the cache will be skipped when handling the request. Setting this\n  /// value is equivalent to specifying the \"Cache-Control: no-cache\" request\n  /// header. Setting this value in combination with UR_FLAG_ONLY_FROM_CACHE\n  /// will cause the request to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_ONLY_FROM_CACHE", :type "CXType_Int", :name "UR_FLAG_ONLY_FROM_CACHE", :value 2, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the request will fail if it cannot be served from the cache (or\n  /// some equivalent local store). Setting this value is equivalent to\n  /// specifying the \"Cache-Control: only-if-cached\" request header. Setting\n  /// this value in combination with UR_FLAG_SKIP_CACHE or UR_FLAG_DISABLE_CACHE\n  /// will cause the request to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_DISABLE_CACHE", :type "CXType_Int", :name "UR_FLAG_DISABLE_CACHE", :value 4, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the cache will not be used at all. Setting this value is equivalent\n  /// to specifying the \"Cache-Control: no-store\" request header. Setting this\n  /// value in combination with UR_FLAG_ONLY_FROM_CACHE will cause the request\n  /// to fail.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_ALLOW_STORED_CREDENTIALS", :type "CXType_Int", :name "UR_FLAG_ALLOW_STORED_CREDENTIALS", :value 8, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set user name, password, and cookies may be sent with the request, and\n  /// cookies may be saved from the response.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_REPORT_UPLOAD_PROGRESS", :type "CXType_Int", :name "UR_FLAG_REPORT_UPLOAD_PROGRESS", :value 16, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set upload progress events will be generated when a request has a body.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NO_DOWNLOAD_DATA", :type "CXType_Int", :name "UR_FLAG_NO_DOWNLOAD_DATA", :value 32, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set the CefURLRequestClient::OnDownloadData method will not be called.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_NO_RETRY_ON_5XX", :type "CXType_Int", :name "UR_FLAG_NO_RETRY_ON_5XX", :value 64, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set 5XX redirect errors will be propagated to the observer instead of\n  /// automatically re-tried. This currently only applies for requests\n  /// originated in the browser process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FLAG_STOP_ON_REDIRECT", :type "CXType_Int", :name "UR_FLAG_STOP_ON_REDIRECT", :value 128, :enum "cef_urlrequest_flags_t", :raw-comment "///\n  /// If set 3XX responses will cause the fetch to halt immediately rather than\n  /// continue through the redirect.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_UNKNOWN", :type "CXType_Int", :name "UR_UNKNOWN", :value 0, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Unknown status.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_SUCCESS", :type "CXType_Int", :name "UR_SUCCESS", :value 1, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request succeeded.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_IO_PENDING", :type "CXType_Int", :name "UR_IO_PENDING", :value 2, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// An IO request is pending, and the caller will be informed when it is\n  /// completed.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_CANCELED", :type "CXType_Int", :name "UR_CANCELED", :value 3, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request was canceled programatically.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FAILED", :type "CXType_Int", :name "UR_FAILED", :value 4, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request failed for some reason.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_UNKNOWN", :type "CXType_Int", :name "UR_UNKNOWN", :value 0, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Unknown status.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_SUCCESS", :type "CXType_Int", :name "UR_SUCCESS", :value 1, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request succeeded.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_IO_PENDING", :type "CXType_Int", :name "UR_IO_PENDING", :value 2, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// An IO request is pending, and the caller will be informed when it is\n  /// completed.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_CANCELED", :type "CXType_Int", :name "UR_CANCELED", :value 3, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request was canceled programatically.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UR_FAILED", :type "CXType_Int", :name "UR_FAILED", :value 4, :enum "cef_urlrequest_status_t", :raw-comment "///\n  /// Request failed for some reason.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PID_BROWSER", :type "CXType_Int", :name "PID_BROWSER", :value 0, :enum "cef_process_id_t", :raw-comment "///\n  /// Browser process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PID_RENDERER", :type "CXType_Int", :name "PID_RENDERER", :value 1, :enum "cef_process_id_t", :raw-comment "///\n  /// Renderer process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PID_BROWSER", :type "CXType_Int", :name "PID_BROWSER", :value 0, :enum "cef_process_id_t", :raw-comment "///\n  /// Browser process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PID_RENDERER", :type "CXType_Int", :name "PID_RENDERER", :value 1, :enum "cef_process_id_t", :raw-comment "///\n  /// Renderer process.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_UI", :type "CXType_Int", :name "TID_UI", :value 0, :enum "cef_thread_id_t", :raw-comment "///\n  /// The main thread in the browser. This will be the same as the main\n  /// application thread if CefInitialize() is called with a\n  /// CefSettings.multi_threaded_message_loop value of false. Do not perform\n  /// blocking tasks on this thread. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run. This thread will outlive all other CEF threads.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_BACKGROUND", :type "CXType_Int", :name "TID_FILE_BACKGROUND", :value 1, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access where the user won't\n  /// notice if the task takes an arbitrarily long time to complete. All tasks\n  /// posted after CefBrowserProcessHandler::OnContextInitialized() and before\n  /// CefShutdown() are guaranteed to run.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_USER_VISIBLE", :type "CXType_Int", :name "TID_FILE_USER_VISIBLE", :value 2, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access that affect UI or\n  /// responsiveness of future user interactions. Do not use if an immediate\n  /// response to a user interaction is expected. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  /// Examples:\n  /// - Updating the UI to reflect progress on a long task.\n  /// - Loading data that might be shown in the UI after a future user\n  ///   interaction.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_USER_BLOCKING", :type "CXType_Int", :name "TID_FILE_USER_BLOCKING", :value 3, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access that affect UI\n  /// immediately after a user interaction. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  /// Example: Generating data shown in the UI immediately after a click.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_PROCESS_LAUNCHER", :type "CXType_Int", :name "TID_PROCESS_LAUNCHER", :value 4, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used to launch and terminate browser processes.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_IO", :type "CXType_Int", :name "TID_IO", :value 5, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used to process IPC and network messages. Do not perform blocking tasks on\n  /// this thread. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_RENDERER", :type "CXType_Int", :name "TID_RENDERER", :value 6, :enum "cef_thread_id_t", :raw-comment "///\n  /// The main thread in the renderer. Used for all WebKit and V8 interaction.\n  /// Tasks may be posted to this thread after\n  /// CefRenderProcessHandler::OnWebKitInitialized but are not guaranteed to\n  /// run before sub-process termination (sub-processes may be killed at any\n  /// time without warning).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_UI", :type "CXType_Int", :name "TID_UI", :value 0, :enum "cef_thread_id_t", :raw-comment "///\n  /// The main thread in the browser. This will be the same as the main\n  /// application thread if CefInitialize() is called with a\n  /// CefSettings.multi_threaded_message_loop value of false. Do not perform\n  /// blocking tasks on this thread. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run. This thread will outlive all other CEF threads.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_BACKGROUND", :type "CXType_Int", :name "TID_FILE_BACKGROUND", :value 1, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access where the user won't\n  /// notice if the task takes an arbitrarily long time to complete. All tasks\n  /// posted after CefBrowserProcessHandler::OnContextInitialized() and before\n  /// CefShutdown() are guaranteed to run.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_USER_VISIBLE", :type "CXType_Int", :name "TID_FILE_USER_VISIBLE", :value 2, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access that affect UI or\n  /// responsiveness of future user interactions. Do not use if an immediate\n  /// response to a user interaction is expected. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  /// Examples:\n  /// - Updating the UI to reflect progress on a long task.\n  /// - Loading data that might be shown in the UI after a future user\n  ///   interaction.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_FILE_USER_BLOCKING", :type "CXType_Int", :name "TID_FILE_USER_BLOCKING", :value 3, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used for blocking tasks like file system access that affect UI\n  /// immediately after a user interaction. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  /// Example: Generating data shown in the UI immediately after a click.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_PROCESS_LAUNCHER", :type "CXType_Int", :name "TID_PROCESS_LAUNCHER", :value 4, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used to launch and terminate browser processes.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_IO", :type "CXType_Int", :name "TID_IO", :value 5, :enum "cef_thread_id_t", :raw-comment "///\n  /// Used to process IPC and network messages. Do not perform blocking tasks on\n  /// this thread. All tasks posted after\n  /// CefBrowserProcessHandler::OnContextInitialized() and before CefShutdown()\n  /// are guaranteed to run.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TID_RENDERER", :type "CXType_Int", :name "TID_RENDERER", :value 6, :enum "cef_thread_id_t", :raw-comment "///\n  /// The main thread in the renderer. Used for all WebKit and V8 interaction.\n  /// Tasks may be posted to this thread after\n  /// CefRenderProcessHandler::OnWebKitInitialized but are not guaranteed to\n  /// run before sub-process termination (sub-processes may be killed at any\n  /// time without warning).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_BACKGROUND", :type "CXType_Int", :name "TP_BACKGROUND", :value 0, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for threads that shouldn't disrupt high priority work.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_NORMAL", :type "CXType_Int", :name "TP_NORMAL", :value 1, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Default priority level.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_DISPLAY", :type "CXType_Int", :name "TP_DISPLAY", :value 2, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for threads which generate data for the display (at ~60Hz).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_REALTIME_AUDIO", :type "CXType_Int", :name "TP_REALTIME_AUDIO", :value 3, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for low-latency, glitch-resistant audio.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_BACKGROUND", :type "CXType_Int", :name "TP_BACKGROUND", :value 0, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for threads that shouldn't disrupt high priority work.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_NORMAL", :type "CXType_Int", :name "TP_NORMAL", :value 1, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Default priority level.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_DISPLAY", :type "CXType_Int", :name "TP_DISPLAY", :value 2, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for threads which generate data for the display (at ~60Hz).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "TP_REALTIME_AUDIO", :type "CXType_Int", :name "TP_REALTIME_AUDIO", :value 3, :enum "cef_thread_priority_t", :raw-comment "///\n  /// Suitable for low-latency, glitch-resistant audio.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_DEFAULT", :type "CXType_Int", :name "ML_TYPE_DEFAULT", :value 0, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks and timers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_UI", :type "CXType_Int", :name "ML_TYPE_UI", :value 1, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks, timers and native UI events (e.g. Windows messages).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_IO", :type "CXType_Int", :name "ML_TYPE_IO", :value 2, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks, timers and asynchronous IO events.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_DEFAULT", :type "CXType_Int", :name "ML_TYPE_DEFAULT", :value 0, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks and timers.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_UI", :type "CXType_Int", :name "ML_TYPE_UI", :value 1, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks, timers and native UI events (e.g. Windows messages).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "ML_TYPE_IO", :type "CXType_Int", :name "ML_TYPE_IO", :value 2, :enum "cef_message_loop_type_t", :raw-comment "///\n  /// Supports tasks, timers and asynchronous IO events.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_NONE", :type "CXType_Int", :name "COM_INIT_MODE_NONE", :value 0, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// No COM initialization.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_STA", :type "CXType_Int", :name "COM_INIT_MODE_STA", :value 1, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// Initialize COM using single-threaded apartments.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_MTA", :type "CXType_Int", :name "COM_INIT_MODE_MTA", :value 2, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// Initialize COM using multi-threaded apartments.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_NONE", :type "CXType_Int", :name "COM_INIT_MODE_NONE", :value 0, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// No COM initialization.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_STA", :type "CXType_Int", :name "COM_INIT_MODE_STA", :value 1, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// Initialize COM using single-threaded apartments.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COM_INIT_MODE_MTA", :type "CXType_Int", :name "COM_INIT_MODE_MTA", :value 2, :enum "cef_com_init_mode_t", :raw-comment "///\n  /// Initialize COM using multi-threaded apartments.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_INVALID", :type "CXType_Int", :name "VTYPE_INVALID", :value 0, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_NULL", :type "CXType_Int", :name "VTYPE_NULL", :value 1, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_BOOL", :type "CXType_Int", :name "VTYPE_BOOL", :value 2, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_INT", :type "CXType_Int", :name "VTYPE_INT", :value 3, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_DOUBLE", :type "CXType_Int", :name "VTYPE_DOUBLE", :value 4, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_STRING", :type "CXType_Int", :name "VTYPE_STRING", :value 5, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_BINARY", :type "CXType_Int", :name "VTYPE_BINARY", :value 6, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_DICTIONARY", :type "CXType_Int", :name "VTYPE_DICTIONARY", :value 7, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_LIST", :type "CXType_Int", :name "VTYPE_LIST", :value 8, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_INVALID", :type "CXType_Int", :name "VTYPE_INVALID", :value 0, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_NULL", :type "CXType_Int", :name "VTYPE_NULL", :value 1, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_BOOL", :type "CXType_Int", :name "VTYPE_BOOL", :value 2, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_INT", :type "CXType_Int", :name "VTYPE_INT", :value 3, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_DOUBLE", :type "CXType_Int", :name "VTYPE_DOUBLE", :value 4, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_STRING", :type "CXType_Int", :name "VTYPE_STRING", :value 5, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_BINARY", :type "CXType_Int", :name "VTYPE_BINARY", :value 6, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_DICTIONARY", :type "CXType_Int", :name "VTYPE_DICTIONARY", :value 7, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "VTYPE_LIST", :type "CXType_Int", :name "VTYPE_LIST", :value 8, :enum "cef_value_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_ALERT", :type "CXType_Int", :name "JSDIALOGTYPE_ALERT", :value 0, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_CONFIRM", :type "CXType_Int", :name "JSDIALOGTYPE_CONFIRM", :value 1, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_PROMPT", :type "CXType_Int", :name "JSDIALOGTYPE_PROMPT", :value 2, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_ALERT", :type "CXType_Int", :name "JSDIALOGTYPE_ALERT", :value 0, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_CONFIRM", :type "CXType_Int", :name "JSDIALOGTYPE_CONFIRM", :value 1, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "JSDIALOGTYPE_PROMPT", :type "CXType_Int", :name "JSDIALOGTYPE_PROMPT", :value 2, :enum "cef_jsdialog_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_BACK", :type "CXType_Int", :name "MENU_ID_BACK", :value 100, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_FORWARD", :type "CXType_Int", :name "MENU_ID_FORWARD", :value 101, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_RELOAD", :type "CXType_Int", :name "MENU_ID_RELOAD", :value 102, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_RELOAD_NOCACHE", :type "CXType_Int", :name "MENU_ID_RELOAD_NOCACHE", :value 103, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_STOPLOAD", :type "CXType_Int", :name "MENU_ID_STOPLOAD", :value 104, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_UNDO", :type "CXType_Int", :name "MENU_ID_UNDO", :value 110, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_REDO", :type "CXType_Int", :name "MENU_ID_REDO", :value 111, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUT", :type "CXType_Int", :name "MENU_ID_CUT", :value 112, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_COPY", :type "CXType_Int", :name "MENU_ID_COPY", :value 113, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_PASTE", :type "CXType_Int", :name "MENU_ID_PASTE", :value 114, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_DELETE", :type "CXType_Int", :name "MENU_ID_DELETE", :value 115, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SELECT_ALL", :type "CXType_Int", :name "MENU_ID_SELECT_ALL", :value 116, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_FIND", :type "CXType_Int", :name "MENU_ID_FIND", :value 130, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_PRINT", :type "CXType_Int", :name "MENU_ID_PRINT", :value 131, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_VIEW_SOURCE", :type "CXType_Int", :name "MENU_ID_VIEW_SOURCE", :value 132, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_0", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_0", :value 200, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_1", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_1", :value 201, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_2", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_2", :value 202, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_3", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_3", :value 203, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_4", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_4", :value 204, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_LAST", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_LAST", :value 204, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_NO_SPELLING_SUGGESTIONS", :type "CXType_Int", :name "MENU_ID_NO_SPELLING_SUGGESTIONS", :value 205, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_ADD_TO_DICTIONARY", :type "CXType_Int", :name "MENU_ID_ADD_TO_DICTIONARY", :value 206, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUSTOM_FIRST", :type "CXType_Int", :name "MENU_ID_CUSTOM_FIRST", :value 220, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUSTOM_LAST", :type "CXType_Int", :name "MENU_ID_CUSTOM_LAST", :value 250, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_USER_FIRST", :type "CXType_Int", :name "MENU_ID_USER_FIRST", :value 26500, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_USER_LAST", :type "CXType_Int", :name "MENU_ID_USER_LAST", :value 28500, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_BACK", :type "CXType_Int", :name "MENU_ID_BACK", :value 100, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_FORWARD", :type "CXType_Int", :name "MENU_ID_FORWARD", :value 101, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_RELOAD", :type "CXType_Int", :name "MENU_ID_RELOAD", :value 102, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_RELOAD_NOCACHE", :type "CXType_Int", :name "MENU_ID_RELOAD_NOCACHE", :value 103, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_STOPLOAD", :type "CXType_Int", :name "MENU_ID_STOPLOAD", :value 104, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_UNDO", :type "CXType_Int", :name "MENU_ID_UNDO", :value 110, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_REDO", :type "CXType_Int", :name "MENU_ID_REDO", :value 111, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUT", :type "CXType_Int", :name "MENU_ID_CUT", :value 112, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_COPY", :type "CXType_Int", :name "MENU_ID_COPY", :value 113, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_PASTE", :type "CXType_Int", :name "MENU_ID_PASTE", :value 114, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_DELETE", :type "CXType_Int", :name "MENU_ID_DELETE", :value 115, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SELECT_ALL", :type "CXType_Int", :name "MENU_ID_SELECT_ALL", :value 116, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_FIND", :type "CXType_Int", :name "MENU_ID_FIND", :value 130, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_PRINT", :type "CXType_Int", :name "MENU_ID_PRINT", :value 131, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_VIEW_SOURCE", :type "CXType_Int", :name "MENU_ID_VIEW_SOURCE", :value 132, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_0", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_0", :value 200, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_1", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_1", :value 201, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_2", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_2", :value 202, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_3", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_3", :value 203, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_4", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_4", :value 204, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_SPELLCHECK_SUGGESTION_LAST", :type "CXType_Int", :name "MENU_ID_SPELLCHECK_SUGGESTION_LAST", :value 204, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_NO_SPELLING_SUGGESTIONS", :type "CXType_Int", :name "MENU_ID_NO_SPELLING_SUGGESTIONS", :value 205, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_ADD_TO_DICTIONARY", :type "CXType_Int", :name "MENU_ID_ADD_TO_DICTIONARY", :value 206, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUSTOM_FIRST", :type "CXType_Int", :name "MENU_ID_CUSTOM_FIRST", :value 220, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_CUSTOM_LAST", :type "CXType_Int", :name "MENU_ID_CUSTOM_LAST", :value 250, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_USER_FIRST", :type "CXType_Int", :name "MENU_ID_USER_FIRST", :value 26500, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENU_ID_USER_LAST", :type "CXType_Int", :name "MENU_ID_USER_LAST", :value 28500, :enum "cef_menu_id_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_LEFT", :type "CXType_Int", :name "MBT_LEFT", :value 0, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_MIDDLE", :type "CXType_Int", :name "MBT_MIDDLE", :value 1, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_RIGHT", :type "CXType_Int", :name "MBT_RIGHT", :value 2, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_LEFT", :type "CXType_Int", :name "MBT_LEFT", :value 0, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_MIDDLE", :type "CXType_Int", :name "MBT_MIDDLE", :value 1, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MBT_RIGHT", :type "CXType_Int", :name "MBT_RIGHT", :value 2, :enum "cef_mouse_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_RELEASED", :type "CXType_Int", :name "CEF_TET_RELEASED", :value 0, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_PRESSED", :type "CXType_Int", :name "CEF_TET_PRESSED", :value 1, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_MOVED", :type "CXType_Int", :name "CEF_TET_MOVED", :value 2, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_CANCELLED", :type "CXType_Int", :name "CEF_TET_CANCELLED", :value 3, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_RELEASED", :type "CXType_Int", :name "CEF_TET_RELEASED", :value 0, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_PRESSED", :type "CXType_Int", :name "CEF_TET_PRESSED", :value 1, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_MOVED", :type "CXType_Int", :name "CEF_TET_MOVED", :value 2, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TET_CANCELLED", :type "CXType_Int", :name "CEF_TET_CANCELLED", :value 3, :enum "cef_touch_event_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_TOUCH", :type "CXType_Int", :name "CEF_POINTER_TYPE_TOUCH", :value 0, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_MOUSE", :type "CXType_Int", :name "CEF_POINTER_TYPE_MOUSE", :value 1, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_PEN", :type "CXType_Int", :name "CEF_POINTER_TYPE_PEN", :value 2, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_ERASER", :type "CXType_Int", :name "CEF_POINTER_TYPE_ERASER", :value 3, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_UNKNOWN", :type "CXType_Int", :name "CEF_POINTER_TYPE_UNKNOWN", :value 4, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_TOUCH", :type "CXType_Int", :name "CEF_POINTER_TYPE_TOUCH", :value 0, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_MOUSE", :type "CXType_Int", :name "CEF_POINTER_TYPE_MOUSE", :value 1, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_PEN", :type "CXType_Int", :name "CEF_POINTER_TYPE_PEN", :value 2, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_ERASER", :type "CXType_Int", :name "CEF_POINTER_TYPE_ERASER", :value 3, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_POINTER_TYPE_UNKNOWN", :type "CXType_Int", :name "CEF_POINTER_TYPE_UNKNOWN", :value 4, :enum "cef_pointer_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PET_VIEW", :type "CXType_Int", :name "PET_VIEW", :value 0, :enum "cef_paint_element_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PET_POPUP", :type "CXType_Int", :name "PET_POPUP", :value 1, :enum "cef_paint_element_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PET_VIEW", :type "CXType_Int", :name "PET_VIEW", :value 0, :enum "cef_paint_element_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "PET_POPUP", :type "CXType_Int", :name "PET_POPUP", :value 1, :enum "cef_paint_element_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_NONE", :type "CXType_Int", :name "EVENTFLAG_NONE", :value 0, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_CAPS_LOCK_ON", :type "CXType_Int", :name "EVENTFLAG_CAPS_LOCK_ON", :value 1, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_SHIFT_DOWN", :type "CXType_Int", :name "EVENTFLAG_SHIFT_DOWN", :value 2, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_CONTROL_DOWN", :type "CXType_Int", :name "EVENTFLAG_CONTROL_DOWN", :value 4, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_ALT_DOWN", :type "CXType_Int", :name "EVENTFLAG_ALT_DOWN", :value 8, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_LEFT_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_LEFT_MOUSE_BUTTON", :value 16, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_MIDDLE_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_MIDDLE_MOUSE_BUTTON", :value 32, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_RIGHT_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_RIGHT_MOUSE_BUTTON", :value 64, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_COMMAND_DOWN", :type "CXType_Int", :name "EVENTFLAG_COMMAND_DOWN", :value 128, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_NUM_LOCK_ON", :type "CXType_Int", :name "EVENTFLAG_NUM_LOCK_ON", :value 256, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_KEY_PAD", :type "CXType_Int", :name "EVENTFLAG_IS_KEY_PAD", :value 512, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_LEFT", :type "CXType_Int", :name "EVENTFLAG_IS_LEFT", :value 1024, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_RIGHT", :type "CXType_Int", :name "EVENTFLAG_IS_RIGHT", :value 2048, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_ALTGR_DOWN", :type "CXType_Int", :name "EVENTFLAG_ALTGR_DOWN", :value 4096, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_REPEAT", :type "CXType_Int", :name "EVENTFLAG_IS_REPEAT", :value 8192, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_NONE", :type "CXType_Int", :name "EVENTFLAG_NONE", :value 0, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_CAPS_LOCK_ON", :type "CXType_Int", :name "EVENTFLAG_CAPS_LOCK_ON", :value 1, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_SHIFT_DOWN", :type "CXType_Int", :name "EVENTFLAG_SHIFT_DOWN", :value 2, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_CONTROL_DOWN", :type "CXType_Int", :name "EVENTFLAG_CONTROL_DOWN", :value 4, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_ALT_DOWN", :type "CXType_Int", :name "EVENTFLAG_ALT_DOWN", :value 8, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_LEFT_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_LEFT_MOUSE_BUTTON", :value 16, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_MIDDLE_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_MIDDLE_MOUSE_BUTTON", :value 32, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_RIGHT_MOUSE_BUTTON", :type "CXType_Int", :name "EVENTFLAG_RIGHT_MOUSE_BUTTON", :value 64, :enum "cef_event_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_COMMAND_DOWN", :type "CXType_Int", :name "EVENTFLAG_COMMAND_DOWN", :value 128, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_NUM_LOCK_ON", :type "CXType_Int", :name "EVENTFLAG_NUM_LOCK_ON", :value 256, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_KEY_PAD", :type "CXType_Int", :name "EVENTFLAG_IS_KEY_PAD", :value 512, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_LEFT", :type "CXType_Int", :name "EVENTFLAG_IS_LEFT", :value 1024, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_RIGHT", :type "CXType_Int", :name "EVENTFLAG_IS_RIGHT", :value 2048, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_ALTGR_DOWN", :type "CXType_Int", :name "EVENTFLAG_ALTGR_DOWN", :value 4096, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "EVENTFLAG_IS_REPEAT", :type "CXType_Int", :name "EVENTFLAG_IS_REPEAT", :value 8192, :enum "cef_event_flags_t", :raw-comment "/// Mac OS-X command key."} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_NONE", :type "CXType_Int", :name "MENUITEMTYPE_NONE", :value 0, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_COMMAND", :type "CXType_Int", :name "MENUITEMTYPE_COMMAND", :value 1, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_CHECK", :type "CXType_Int", :name "MENUITEMTYPE_CHECK", :value 2, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_RADIO", :type "CXType_Int", :name "MENUITEMTYPE_RADIO", :value 3, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_SEPARATOR", :type "CXType_Int", :name "MENUITEMTYPE_SEPARATOR", :value 4, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_SUBMENU", :type "CXType_Int", :name "MENUITEMTYPE_SUBMENU", :value 5, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_NONE", :type "CXType_Int", :name "MENUITEMTYPE_NONE", :value 0, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_COMMAND", :type "CXType_Int", :name "MENUITEMTYPE_COMMAND", :value 1, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_CHECK", :type "CXType_Int", :name "MENUITEMTYPE_CHECK", :value 2, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_RADIO", :type "CXType_Int", :name "MENUITEMTYPE_RADIO", :value 3, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_SEPARATOR", :type "CXType_Int", :name "MENUITEMTYPE_SEPARATOR", :value 4, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "MENUITEMTYPE_SUBMENU", :type "CXType_Int", :name "MENUITEMTYPE_SUBMENU", :value 5, :enum "cef_menu_item_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_NONE", :type "CXType_Int", :name "CM_TYPEFLAG_NONE", :value 0, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// No node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_PAGE", :type "CXType_Int", :name "CM_TYPEFLAG_PAGE", :value 1, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// The top page is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_FRAME", :type "CXType_Int", :name "CM_TYPEFLAG_FRAME", :value 2, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A subframe page is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_LINK", :type "CXType_Int", :name "CM_TYPEFLAG_LINK", :value 4, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A link is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_MEDIA", :type "CXType_Int", :name "CM_TYPEFLAG_MEDIA", :value 8, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A media node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_SELECTION", :type "CXType_Int", :name "CM_TYPEFLAG_SELECTION", :value 16, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// There is a textual or mixed selection that is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_EDITABLE", :type "CXType_Int", :name "CM_TYPEFLAG_EDITABLE", :value 32, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// An editable element is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_NONE", :type "CXType_Int", :name "CM_TYPEFLAG_NONE", :value 0, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// No node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_PAGE", :type "CXType_Int", :name "CM_TYPEFLAG_PAGE", :value 1, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// The top page is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_FRAME", :type "CXType_Int", :name "CM_TYPEFLAG_FRAME", :value 2, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A subframe page is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_LINK", :type "CXType_Int", :name "CM_TYPEFLAG_LINK", :value 4, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A link is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_MEDIA", :type "CXType_Int", :name "CM_TYPEFLAG_MEDIA", :value 8, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// A media node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_SELECTION", :type "CXType_Int", :name "CM_TYPEFLAG_SELECTION", :value 16, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// There is a textual or mixed selection that is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_TYPEFLAG_EDITABLE", :type "CXType_Int", :name "CM_TYPEFLAG_EDITABLE", :value 32, :enum "cef_context_menu_type_flags_t", :raw-comment "///\n  /// An editable element is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_NONE", :type "CXType_Int", :name "CM_MEDIATYPE_NONE", :value 0, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// No special node is in context.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_IMAGE", :type "CXType_Int", :name "CM_MEDIATYPE_IMAGE", :value 1, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An image node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_VIDEO", :type "CXType_Int", :name "CM_MEDIATYPE_VIDEO", :value 2, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A video node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_AUDIO", :type "CXType_Int", :name "CM_MEDIATYPE_AUDIO", :value 3, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An audio node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_CANVAS", :type "CXType_Int", :name "CM_MEDIATYPE_CANVAS", :value 4, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An canvas node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_FILE", :type "CXType_Int", :name "CM_MEDIATYPE_FILE", :value 5, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A file node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_PLUGIN", :type "CXType_Int", :name "CM_MEDIATYPE_PLUGIN", :value 6, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A plugin node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_NONE", :type "CXType_Int", :name "CM_MEDIATYPE_NONE", :value 0, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// No special node is in context.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_IMAGE", :type "CXType_Int", :name "CM_MEDIATYPE_IMAGE", :value 1, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An image node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_VIDEO", :type "CXType_Int", :name "CM_MEDIATYPE_VIDEO", :value 2, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A video node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_AUDIO", :type "CXType_Int", :name "CM_MEDIATYPE_AUDIO", :value 3, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An audio node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_CANVAS", :type "CXType_Int", :name "CM_MEDIATYPE_CANVAS", :value 4, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// An canvas node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_FILE", :type "CXType_Int", :name "CM_MEDIATYPE_FILE", :value 5, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A file node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIATYPE_PLUGIN", :type "CXType_Int", :name "CM_MEDIATYPE_PLUGIN", :value 6, :enum "cef_context_menu_media_type_t", :raw-comment "///\n  /// A plugin node is selected.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_NONE", :type "CXType_Int", :name "CM_MEDIAFLAG_NONE", :value 0, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_IN_ERROR", :type "CXType_Int", :name "CM_MEDIAFLAG_IN_ERROR", :value 1, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_PAUSED", :type "CXType_Int", :name "CM_MEDIAFLAG_PAUSED", :value 2, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_MUTED", :type "CXType_Int", :name "CM_MEDIAFLAG_MUTED", :value 4, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_LOOP", :type "CXType_Int", :name "CM_MEDIAFLAG_LOOP", :value 8, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_SAVE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_SAVE", :value 16, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_HAS_AUDIO", :type "CXType_Int", :name "CM_MEDIAFLAG_HAS_AUDIO", :value 32, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_TOGGLE_CONTROLS", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_TOGGLE_CONTROLS", :value 64, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CONTROLS", :type "CXType_Int", :name "CM_MEDIAFLAG_CONTROLS", :value 128, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_PRINT", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_PRINT", :value 256, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_ROTATE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_ROTATE", :value 512, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_PICTURE_IN_PICTURE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_PICTURE_IN_PICTURE", :value 1024, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_PICTURE_IN_PICTURE", :type "CXType_Int", :name "CM_MEDIAFLAG_PICTURE_IN_PICTURE", :value 2048, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_LOOP", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_LOOP", :value 4096, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_NONE", :type "CXType_Int", :name "CM_MEDIAFLAG_NONE", :value 0, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_IN_ERROR", :type "CXType_Int", :name "CM_MEDIAFLAG_IN_ERROR", :value 1, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_PAUSED", :type "CXType_Int", :name "CM_MEDIAFLAG_PAUSED", :value 2, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_MUTED", :type "CXType_Int", :name "CM_MEDIAFLAG_MUTED", :value 4, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_LOOP", :type "CXType_Int", :name "CM_MEDIAFLAG_LOOP", :value 8, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_SAVE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_SAVE", :value 16, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_HAS_AUDIO", :type "CXType_Int", :name "CM_MEDIAFLAG_HAS_AUDIO", :value 32, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_TOGGLE_CONTROLS", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_TOGGLE_CONTROLS", :value 64, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CONTROLS", :type "CXType_Int", :name "CM_MEDIAFLAG_CONTROLS", :value 128, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_PRINT", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_PRINT", :value 256, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_ROTATE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_ROTATE", :value 512, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_PICTURE_IN_PICTURE", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_PICTURE_IN_PICTURE", :value 1024, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_PICTURE_IN_PICTURE", :type "CXType_Int", :name "CM_MEDIAFLAG_PICTURE_IN_PICTURE", :value 2048, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_MEDIAFLAG_CAN_LOOP", :type "CXType_Int", :name "CM_MEDIAFLAG_CAN_LOOP", :value 4096, :enum "cef_context_menu_media_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_NONE", :type "CXType_Int", :name "CM_EDITFLAG_NONE", :value 0, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_UNDO", :type "CXType_Int", :name "CM_EDITFLAG_CAN_UNDO", :value 1, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_REDO", :type "CXType_Int", :name "CM_EDITFLAG_CAN_REDO", :value 2, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_CUT", :type "CXType_Int", :name "CM_EDITFLAG_CAN_CUT", :value 4, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_COPY", :type "CXType_Int", :name "CM_EDITFLAG_CAN_COPY", :value 8, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_PASTE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_PASTE", :value 16, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_DELETE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_DELETE", :value 32, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_SELECT_ALL", :type "CXType_Int", :name "CM_EDITFLAG_CAN_SELECT_ALL", :value 64, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_TRANSLATE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_TRANSLATE", :value 128, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_EDIT_RICHLY", :type "CXType_Int", :name "CM_EDITFLAG_CAN_EDIT_RICHLY", :value 256, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_NONE", :type "CXType_Int", :name "CM_EDITFLAG_NONE", :value 0, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_UNDO", :type "CXType_Int", :name "CM_EDITFLAG_CAN_UNDO", :value 1, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_REDO", :type "CXType_Int", :name "CM_EDITFLAG_CAN_REDO", :value 2, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_CUT", :type "CXType_Int", :name "CM_EDITFLAG_CAN_CUT", :value 4, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_COPY", :type "CXType_Int", :name "CM_EDITFLAG_CAN_COPY", :value 8, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_PASTE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_PASTE", :value 16, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_DELETE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_DELETE", :value 32, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_SELECT_ALL", :type "CXType_Int", :name "CM_EDITFLAG_CAN_SELECT_ALL", :value 64, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_TRANSLATE", :type "CXType_Int", :name "CM_EDITFLAG_CAN_TRANSLATE", :value 128, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CM_EDITFLAG_CAN_EDIT_RICHLY", :type "CXType_Int", :name "CM_EDITFLAG_CAN_EDIT_RICHLY", :value 256, :enum "cef_context_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_NONE", :type "CXType_Int", :name "QM_EDITFLAG_NONE", :value 0, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_ELLIPSIS", :type "CXType_Int", :name "QM_EDITFLAG_CAN_ELLIPSIS", :value 1, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_CUT", :type "CXType_Int", :name "QM_EDITFLAG_CAN_CUT", :value 2, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_COPY", :type "CXType_Int", :name "QM_EDITFLAG_CAN_COPY", :value 4, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_PASTE", :type "CXType_Int", :name "QM_EDITFLAG_CAN_PASTE", :value 8, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_NONE", :type "CXType_Int", :name "QM_EDITFLAG_NONE", :value 0, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_ELLIPSIS", :type "CXType_Int", :name "QM_EDITFLAG_CAN_ELLIPSIS", :value 1, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_CUT", :type "CXType_Int", :name "QM_EDITFLAG_CAN_CUT", :value 2, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_COPY", :type "CXType_Int", :name "QM_EDITFLAG_CAN_COPY", :value 4, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "QM_EDITFLAG_CAN_PASTE", :type "CXType_Int", :name "QM_EDITFLAG_CAN_PASTE", :value 8, :enum "cef_quick_menu_edit_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_RAWKEYDOWN", :type "CXType_Int", :name "KEYEVENT_RAWKEYDOWN", :value 0, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key transitioned from \"up\" to \"down\".\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_KEYDOWN", :type "CXType_Int", :name "KEYEVENT_KEYDOWN", :value 1, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key was pressed. This does not necessarily correspond\n  /// to a character depending on the key and language. Use KEYEVENT_CHAR for\n  /// character input.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_KEYUP", :type "CXType_Int", :name "KEYEVENT_KEYUP", :value 2, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key was released.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_CHAR", :type "CXType_Int", :name "KEYEVENT_CHAR", :value 3, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a character was typed. Use this for text input. Key\n  /// down events may generate 0, 1, or more than one character event depending\n  /// on the key, locale, and operating system.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_RAWKEYDOWN", :type "CXType_Int", :name "KEYEVENT_RAWKEYDOWN", :value 0, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key transitioned from \"up\" to \"down\".\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_KEYDOWN", :type "CXType_Int", :name "KEYEVENT_KEYDOWN", :value 1, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key was pressed. This does not necessarily correspond\n  /// to a character depending on the key and language. Use KEYEVENT_CHAR for\n  /// character input.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_KEYUP", :type "CXType_Int", :name "KEYEVENT_KEYUP", :value 2, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a key was released.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "KEYEVENT_CHAR", :type "CXType_Int", :name "KEYEVENT_CHAR", :value 3, :enum "cef_key_event_type_t", :raw-comment "///\n  /// Notification that a character was typed. Use this for text input. Key\n  /// down events may generate 0, 1, or more than one character event depending\n  /// on the key, locale, and operating system.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FOCUS_SOURCE_NAVIGATION", :type "CXType_Int", :name "FOCUS_SOURCE_NAVIGATION", :value 0, :enum "cef_focus_source_t", :raw-comment "///\n  /// The source is explicit navigation via the API (LoadURL(), etc).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FOCUS_SOURCE_SYSTEM", :type "CXType_Int", :name "FOCUS_SOURCE_SYSTEM", :value 1, :enum "cef_focus_source_t", :raw-comment "///\n  /// The source is a system-generated focus event.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FOCUS_SOURCE_NAVIGATION", :type "CXType_Int", :name "FOCUS_SOURCE_NAVIGATION", :value 0, :enum "cef_focus_source_t", :raw-comment "///\n  /// The source is explicit navigation via the API (LoadURL(), etc).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FOCUS_SOURCE_SYSTEM", :type "CXType_Int", :name "FOCUS_SOURCE_SYSTEM", :value 1, :enum "cef_focus_source_t", :raw-comment "///\n  /// The source is a system-generated focus event.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_LINK_CLICKED", :type "CXType_Int", :name "NAVIGATION_LINK_CLICKED", :value 0, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_FORM_SUBMITTED", :type "CXType_Int", :name "NAVIGATION_FORM_SUBMITTED", :value 1, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_BACK_FORWARD", :type "CXType_Int", :name "NAVIGATION_BACK_FORWARD", :value 2, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_RELOAD", :type "CXType_Int", :name "NAVIGATION_RELOAD", :value 3, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_FORM_RESUBMITTED", :type "CXType_Int", :name "NAVIGATION_FORM_RESUBMITTED", :value 4, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_OTHER", :type "CXType_Int", :name "NAVIGATION_OTHER", :value 5, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_LINK_CLICKED", :type "CXType_Int", :name "NAVIGATION_LINK_CLICKED", :value 0, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_FORM_SUBMITTED", :type "CXType_Int", :name "NAVIGATION_FORM_SUBMITTED", :value 1, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_BACK_FORWARD", :type "CXType_Int", :name "NAVIGATION_BACK_FORWARD", :value 2, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_RELOAD", :type "CXType_Int", :name "NAVIGATION_RELOAD", :value 3, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_FORM_RESUBMITTED", :type "CXType_Int", :name "NAVIGATION_FORM_RESUBMITTED", :value 4, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "NAVIGATION_OTHER", :type "CXType_Int", :name "NAVIGATION_OTHER", :value 5, :enum "cef_navigation_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_NONE", :type "CXType_Int", :name "XML_ENCODING_NONE", :value 0, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF8", :type "CXType_Int", :name "XML_ENCODING_UTF8", :value 1, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF16LE", :type "CXType_Int", :name "XML_ENCODING_UTF16LE", :value 2, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF16BE", :type "CXType_Int", :name "XML_ENCODING_UTF16BE", :value 3, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_ASCII", :type "CXType_Int", :name "XML_ENCODING_ASCII", :value 4, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_NONE", :type "CXType_Int", :name "XML_ENCODING_NONE", :value 0, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF8", :type "CXType_Int", :name "XML_ENCODING_UTF8", :value 1, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF16LE", :type "CXType_Int", :name "XML_ENCODING_UTF16LE", :value 2, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_UTF16BE", :type "CXType_Int", :name "XML_ENCODING_UTF16BE", :value 3, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_ENCODING_ASCII", :type "CXType_Int", :name "XML_ENCODING_ASCII", :value 4, :enum "cef_xml_encoding_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_UNSUPPORTED", :type "CXType_Int", :name "XML_NODE_UNSUPPORTED", :value 0, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_PROCESSING_INSTRUCTION", :type "CXType_Int", :name "XML_NODE_PROCESSING_INSTRUCTION", :value 1, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_DOCUMENT_TYPE", :type "CXType_Int", :name "XML_NODE_DOCUMENT_TYPE", :value 2, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ELEMENT_START", :type "CXType_Int", :name "XML_NODE_ELEMENT_START", :value 3, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ELEMENT_END", :type "CXType_Int", :name "XML_NODE_ELEMENT_END", :value 4, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ATTRIBUTE", :type "CXType_Int", :name "XML_NODE_ATTRIBUTE", :value 5, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_TEXT", :type "CXType_Int", :name "XML_NODE_TEXT", :value 6, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_CDATA", :type "CXType_Int", :name "XML_NODE_CDATA", :value 7, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ENTITY_REFERENCE", :type "CXType_Int", :name "XML_NODE_ENTITY_REFERENCE", :value 8, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_WHITESPACE", :type "CXType_Int", :name "XML_NODE_WHITESPACE", :value 9, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_COMMENT", :type "CXType_Int", :name "XML_NODE_COMMENT", :value 10, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_UNSUPPORTED", :type "CXType_Int", :name "XML_NODE_UNSUPPORTED", :value 0, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_PROCESSING_INSTRUCTION", :type "CXType_Int", :name "XML_NODE_PROCESSING_INSTRUCTION", :value 1, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_DOCUMENT_TYPE", :type "CXType_Int", :name "XML_NODE_DOCUMENT_TYPE", :value 2, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ELEMENT_START", :type "CXType_Int", :name "XML_NODE_ELEMENT_START", :value 3, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ELEMENT_END", :type "CXType_Int", :name "XML_NODE_ELEMENT_END", :value 4, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ATTRIBUTE", :type "CXType_Int", :name "XML_NODE_ATTRIBUTE", :value 5, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_TEXT", :type "CXType_Int", :name "XML_NODE_TEXT", :value 6, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_CDATA", :type "CXType_Int", :name "XML_NODE_CDATA", :value 7, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_ENTITY_REFERENCE", :type "CXType_Int", :name "XML_NODE_ENTITY_REFERENCE", :value 8, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_WHITESPACE", :type "CXType_Int", :name "XML_NODE_WHITESPACE", :value 9, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "XML_NODE_COMMENT", :type "CXType_Int", :name "XML_NODE_COMMENT", :value 10, :enum "cef_xml_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_UNKNOWN", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_UNKNOWN", :value 0, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_HTML", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_HTML", :value 1, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_XHTML", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_XHTML", :value 2, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_PLUGIN", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_PLUGIN", :value 3, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_UNKNOWN", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_UNKNOWN", :value 0, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_HTML", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_HTML", :value 1, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_XHTML", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_XHTML", :value 2, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_DOCUMENT_TYPE_PLUGIN", :type "CXType_Int", :name "DOM_DOCUMENT_TYPE_PLUGIN", :value 3, :enum "cef_dom_document_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_UNKNOWN", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_UNKNOWN", :value 0, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_UI", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_UI", :value 1, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MOUSE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MOUSE", :value 2, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MUTATION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MUTATION", :value 4, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_KEYBOARD", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_KEYBOARD", :value 8, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_TEXT", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_TEXT", :value 16, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_COMPOSITION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_COMPOSITION", :value 32, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_DRAG", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_DRAG", :value 64, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_CLIPBOARD", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_CLIPBOARD", :value 128, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MESSAGE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MESSAGE", :value 256, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_WHEEL", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_WHEEL", :value 512, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_BEFORE_TEXT_INSERTED", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_BEFORE_TEXT_INSERTED", :value 1024, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_OVERFLOW", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_OVERFLOW", :value 2048, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_PAGE_TRANSITION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_PAGE_TRANSITION", :value 4096, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_POPSTATE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_POPSTATE", :value 8192, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_PROGRESS", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_PROGRESS", :value 16384, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_XMLHTTPREQUEST_PROGRESS", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_XMLHTTPREQUEST_PROGRESS", :value 32768, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_UNKNOWN", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_UNKNOWN", :value 0, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_UI", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_UI", :value 1, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MOUSE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MOUSE", :value 2, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MUTATION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MUTATION", :value 4, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_KEYBOARD", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_KEYBOARD", :value 8, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_TEXT", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_TEXT", :value 16, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_COMPOSITION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_COMPOSITION", :value 32, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_DRAG", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_DRAG", :value 64, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_CLIPBOARD", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_CLIPBOARD", :value 128, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_MESSAGE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_MESSAGE", :value 256, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_WHEEL", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_WHEEL", :value 512, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_BEFORE_TEXT_INSERTED", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_BEFORE_TEXT_INSERTED", :value 1024, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_OVERFLOW", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_OVERFLOW", :value 2048, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_PAGE_TRANSITION", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_PAGE_TRANSITION", :value 4096, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_POPSTATE", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_POPSTATE", :value 8192, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_PROGRESS", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_PROGRESS", :value 16384, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_CATEGORY_XMLHTTPREQUEST_PROGRESS", :type "CXType_Int", :name "DOM_EVENT_CATEGORY_XMLHTTPREQUEST_PROGRESS", :value 32768, :enum "cef_dom_event_category_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_UNKNOWN", :type "CXType_Int", :name "DOM_EVENT_PHASE_UNKNOWN", :value 0, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_CAPTURING", :type "CXType_Int", :name "DOM_EVENT_PHASE_CAPTURING", :value 1, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_AT_TARGET", :type "CXType_Int", :name "DOM_EVENT_PHASE_AT_TARGET", :value 2, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_BUBBLING", :type "CXType_Int", :name "DOM_EVENT_PHASE_BUBBLING", :value 3, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_UNKNOWN", :type "CXType_Int", :name "DOM_EVENT_PHASE_UNKNOWN", :value 0, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_CAPTURING", :type "CXType_Int", :name "DOM_EVENT_PHASE_CAPTURING", :value 1, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_AT_TARGET", :type "CXType_Int", :name "DOM_EVENT_PHASE_AT_TARGET", :value 2, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_EVENT_PHASE_BUBBLING", :type "CXType_Int", :name "DOM_EVENT_PHASE_BUBBLING", :value 3, :enum "cef_dom_event_phase_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_UNSUPPORTED", :type "CXType_Int", :name "DOM_NODE_TYPE_UNSUPPORTED", :value 0, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_ELEMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_ELEMENT", :value 1, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_ATTRIBUTE", :type "CXType_Int", :name "DOM_NODE_TYPE_ATTRIBUTE", :value 2, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_TEXT", :type "CXType_Int", :name "DOM_NODE_TYPE_TEXT", :value 3, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_CDATA_SECTION", :type "CXType_Int", :name "DOM_NODE_TYPE_CDATA_SECTION", :value 4, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_PROCESSING_INSTRUCTIONS", :type "CXType_Int", :name "DOM_NODE_TYPE_PROCESSING_INSTRUCTIONS", :value 5, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_COMMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_COMMENT", :value 6, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT", :value 7, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT_TYPE", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT_TYPE", :value 8, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT_FRAGMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT_FRAGMENT", :value 9, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_UNSUPPORTED", :type "CXType_Int", :name "DOM_NODE_TYPE_UNSUPPORTED", :value 0, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_ELEMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_ELEMENT", :value 1, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_ATTRIBUTE", :type "CXType_Int", :name "DOM_NODE_TYPE_ATTRIBUTE", :value 2, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_TEXT", :type "CXType_Int", :name "DOM_NODE_TYPE_TEXT", :value 3, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_CDATA_SECTION", :type "CXType_Int", :name "DOM_NODE_TYPE_CDATA_SECTION", :value 4, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_PROCESSING_INSTRUCTIONS", :type "CXType_Int", :name "DOM_NODE_TYPE_PROCESSING_INSTRUCTIONS", :value 5, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_COMMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_COMMENT", :value 6, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT", :value 7, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT_TYPE", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT_TYPE", :value 8, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DOM_NODE_TYPE_DOCUMENT_FRAGMENT", :type "CXType_Int", :name "DOM_NODE_TYPE_DOCUMENT_FRAGMENT", :value 9, :enum "cef_dom_node_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN", :type "CXType_Int", :name "FILE_DIALOG_OPEN", :value 0, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Requires that the file exists before allowing the user to pick it.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN_MULTIPLE", :type "CXType_Int", :name "FILE_DIALOG_OPEN_MULTIPLE", :value 1, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Like Open, but allows picking multiple files to open.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN_FOLDER", :type "CXType_Int", :name "FILE_DIALOG_OPEN_FOLDER", :value 2, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Like Open, but selects a folder to open.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_SAVE", :type "CXType_Int", :name "FILE_DIALOG_SAVE", :value 3, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Allows picking a nonexistent file, and prompts to overwrite if the file\n  /// already exists.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN", :type "CXType_Int", :name "FILE_DIALOG_OPEN", :value 0, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Requires that the file exists before allowing the user to pick it.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN_MULTIPLE", :type "CXType_Int", :name "FILE_DIALOG_OPEN_MULTIPLE", :value 1, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Like Open, but allows picking multiple files to open.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_OPEN_FOLDER", :type "CXType_Int", :name "FILE_DIALOG_OPEN_FOLDER", :value 2, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Like Open, but selects a folder to open.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "FILE_DIALOG_SAVE", :type "CXType_Int", :name "FILE_DIALOG_SAVE", :value 3, :enum "cef_file_dialog_mode_t", :raw-comment "///\n  /// Allows picking a nonexistent file, and prompts to overwrite if the file\n  /// already exists.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_UNKNOWN", :type "CXType_Int", :name "COLOR_MODEL_UNKNOWN", :value 0, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_GRAY", :type "CXType_Int", :name "COLOR_MODEL_GRAY", :value 1, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLOR", :type "CXType_Int", :name "COLOR_MODEL_COLOR", :value 2, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMYK", :type "CXType_Int", :name "COLOR_MODEL_CMYK", :value 3, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMY", :type "CXType_Int", :name "COLOR_MODEL_CMY", :value 4, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_KCMY", :type "CXType_Int", :name "COLOR_MODEL_KCMY", :value 5, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMY_K", :type "CXType_Int", :name "COLOR_MODEL_CMY_K", :value 6, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_BLACK", :type "CXType_Int", :name "COLOR_MODEL_BLACK", :value 7, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_GRAYSCALE", :type "CXType_Int", :name "COLOR_MODEL_GRAYSCALE", :value 8, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGB", :type "CXType_Int", :name "COLOR_MODEL_RGB", :value 9, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGB16", :type "CXType_Int", :name "COLOR_MODEL_RGB16", :value 10, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGBA", :type "CXType_Int", :name "COLOR_MODEL_RGBA", :value 11, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLORMODE_COLOR", :type "CXType_Int", :name "COLOR_MODEL_COLORMODE_COLOR", :value 12, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLORMODE_MONOCHROME", :type "CXType_Int", :name "COLOR_MODEL_COLORMODE_MONOCHROME", :value 13, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_HP_COLOR_COLOR", :type "CXType_Int", :name "COLOR_MODEL_HP_COLOR_COLOR", :value 14, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_HP_COLOR_BLACK", :type "CXType_Int", :name "COLOR_MODEL_HP_COLOR_BLACK", :value 15, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PRINTOUTMODE_NORMAL", :type "CXType_Int", :name "COLOR_MODEL_PRINTOUTMODE_NORMAL", :value 16, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY", :type "CXType_Int", :name "COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY", :value 17, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_CMYK", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_CMYK", :value 18, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE", :value 19, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_RGB", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_RGB", :value 20, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_UNKNOWN", :type "CXType_Int", :name "COLOR_MODEL_UNKNOWN", :value 0, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_GRAY", :type "CXType_Int", :name "COLOR_MODEL_GRAY", :value 1, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLOR", :type "CXType_Int", :name "COLOR_MODEL_COLOR", :value 2, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMYK", :type "CXType_Int", :name "COLOR_MODEL_CMYK", :value 3, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMY", :type "CXType_Int", :name "COLOR_MODEL_CMY", :value 4, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_KCMY", :type "CXType_Int", :name "COLOR_MODEL_KCMY", :value 5, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_CMY_K", :type "CXType_Int", :name "COLOR_MODEL_CMY_K", :value 6, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_BLACK", :type "CXType_Int", :name "COLOR_MODEL_BLACK", :value 7, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_GRAYSCALE", :type "CXType_Int", :name "COLOR_MODEL_GRAYSCALE", :value 8, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGB", :type "CXType_Int", :name "COLOR_MODEL_RGB", :value 9, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGB16", :type "CXType_Int", :name "COLOR_MODEL_RGB16", :value 10, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_RGBA", :type "CXType_Int", :name "COLOR_MODEL_RGBA", :value 11, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLORMODE_COLOR", :type "CXType_Int", :name "COLOR_MODEL_COLORMODE_COLOR", :value 12, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_COLORMODE_MONOCHROME", :type "CXType_Int", :name "COLOR_MODEL_COLORMODE_MONOCHROME", :value 13, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_HP_COLOR_COLOR", :type "CXType_Int", :name "COLOR_MODEL_HP_COLOR_COLOR", :value 14, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_HP_COLOR_BLACK", :type "CXType_Int", :name "COLOR_MODEL_HP_COLOR_BLACK", :value 15, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PRINTOUTMODE_NORMAL", :type "CXType_Int", :name "COLOR_MODEL_PRINTOUTMODE_NORMAL", :value 16, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY", :type "CXType_Int", :name "COLOR_MODEL_PRINTOUTMODE_NORMAL_GRAY", :value 17, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_CMYK", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_CMYK", :value 18, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_GREYSCALE", :value 19, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "COLOR_MODEL_PROCESSCOLORMODEL_RGB", :type "CXType_Int", :name "COLOR_MODEL_PROCESSCOLORMODEL_RGB", :value 20, :enum "cef_color_model_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_UNKNOWN", :type "CXType_Int", :name "DUPLEX_MODE_UNKNOWN", :value -1, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_SIMPLEX", :type "CXType_Int", :name "DUPLEX_MODE_SIMPLEX", :value 0, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_LONG_EDGE", :type "CXType_Int", :name "DUPLEX_MODE_LONG_EDGE", :value 1, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_SHORT_EDGE", :type "CXType_Int", :name "DUPLEX_MODE_SHORT_EDGE", :value 2, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_UNKNOWN", :type "CXType_Int", :name "DUPLEX_MODE_UNKNOWN", :value -1, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_SIMPLEX", :type "CXType_Int", :name "DUPLEX_MODE_SIMPLEX", :value 0, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_LONG_EDGE", :type "CXType_Int", :name "DUPLEX_MODE_LONG_EDGE", :value 1, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "DUPLEX_MODE_SHORT_EDGE", :type "CXType_Int", :name "DUPLEX_MODE_SHORT_EDGE", :value 2, :enum "cef_duplex_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_POINTER", :type "CXType_Int", :name "CT_POINTER", :value 0, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CROSS", :type "CXType_Int", :name "CT_CROSS", :value 1, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_HAND", :type "CXType_Int", :name "CT_HAND", :value 2, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_IBEAM", :type "CXType_Int", :name "CT_IBEAM", :value 3, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WAIT", :type "CXType_Int", :name "CT_WAIT", :value 4, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_HELP", :type "CXType_Int", :name "CT_HELP", :value 5, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTRESIZE", :type "CXType_Int", :name "CT_EASTRESIZE", :value 6, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHRESIZE", :type "CXType_Int", :name "CT_NORTHRESIZE", :value 7, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTRESIZE", :type "CXType_Int", :name "CT_NORTHEASTRESIZE", :value 8, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTRESIZE", :type "CXType_Int", :name "CT_NORTHWESTRESIZE", :value 9, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHRESIZE", :type "CXType_Int", :name "CT_SOUTHRESIZE", :value 10, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHEASTRESIZE", :type "CXType_Int", :name "CT_SOUTHEASTRESIZE", :value 11, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHWESTRESIZE", :type "CXType_Int", :name "CT_SOUTHWESTRESIZE", :value 12, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WESTRESIZE", :type "CXType_Int", :name "CT_WESTRESIZE", :value 13, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHSOUTHRESIZE", :type "CXType_Int", :name "CT_NORTHSOUTHRESIZE", :value 14, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTWESTRESIZE", :type "CXType_Int", :name "CT_EASTWESTRESIZE", :value 15, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTSOUTHWESTRESIZE", :type "CXType_Int", :name "CT_NORTHEASTSOUTHWESTRESIZE", :value 16, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTSOUTHEASTRESIZE", :type "CXType_Int", :name "CT_NORTHWESTSOUTHEASTRESIZE", :value 17, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_COLUMNRESIZE", :type "CXType_Int", :name "CT_COLUMNRESIZE", :value 18, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ROWRESIZE", :type "CXType_Int", :name "CT_ROWRESIZE", :value 19, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLEPANNING", :type "CXType_Int", :name "CT_MIDDLEPANNING", :value 20, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTPANNING", :type "CXType_Int", :name "CT_EASTPANNING", :value 21, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHPANNING", :type "CXType_Int", :name "CT_NORTHPANNING", :value 22, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTPANNING", :type "CXType_Int", :name "CT_NORTHEASTPANNING", :value 23, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTPANNING", :type "CXType_Int", :name "CT_NORTHWESTPANNING", :value 24, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHPANNING", :type "CXType_Int", :name "CT_SOUTHPANNING", :value 25, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHEASTPANNING", :type "CXType_Int", :name "CT_SOUTHEASTPANNING", :value 26, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHWESTPANNING", :type "CXType_Int", :name "CT_SOUTHWESTPANNING", :value 27, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WESTPANNING", :type "CXType_Int", :name "CT_WESTPANNING", :value 28, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MOVE", :type "CXType_Int", :name "CT_MOVE", :value 29, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_VERTICALTEXT", :type "CXType_Int", :name "CT_VERTICALTEXT", :value 30, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CELL", :type "CXType_Int", :name "CT_CELL", :value 31, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CONTEXTMENU", :type "CXType_Int", :name "CT_CONTEXTMENU", :value 32, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ALIAS", :type "CXType_Int", :name "CT_ALIAS", :value 33, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_PROGRESS", :type "CXType_Int", :name "CT_PROGRESS", :value 34, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NODROP", :type "CXType_Int", :name "CT_NODROP", :value 35, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_COPY", :type "CXType_Int", :name "CT_COPY", :value 36, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NONE", :type "CXType_Int", :name "CT_NONE", :value 37, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NOTALLOWED", :type "CXType_Int", :name "CT_NOTALLOWED", :value 38, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ZOOMIN", :type "CXType_Int", :name "CT_ZOOMIN", :value 39, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ZOOMOUT", :type "CXType_Int", :name "CT_ZOOMOUT", :value 40, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_GRAB", :type "CXType_Int", :name "CT_GRAB", :value 41, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_GRABBING", :type "CXType_Int", :name "CT_GRABBING", :value 42, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLE_PANNING_VERTICAL", :type "CXType_Int", :name "CT_MIDDLE_PANNING_VERTICAL", :value 43, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLE_PANNING_HORIZONTAL", :type "CXType_Int", :name "CT_MIDDLE_PANNING_HORIZONTAL", :value 44, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CUSTOM", :type "CXType_Int", :name "CT_CUSTOM", :value 45, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_NONE", :type "CXType_Int", :name "CT_DND_NONE", :value 46, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_MOVE", :type "CXType_Int", :name "CT_DND_MOVE", :value 47, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_COPY", :type "CXType_Int", :name "CT_DND_COPY", :value 48, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_LINK", :type "CXType_Int", :name "CT_DND_LINK", :value 49, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_POINTER", :type "CXType_Int", :name "CT_POINTER", :value 0, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CROSS", :type "CXType_Int", :name "CT_CROSS", :value 1, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_HAND", :type "CXType_Int", :name "CT_HAND", :value 2, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_IBEAM", :type "CXType_Int", :name "CT_IBEAM", :value 3, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WAIT", :type "CXType_Int", :name "CT_WAIT", :value 4, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_HELP", :type "CXType_Int", :name "CT_HELP", :value 5, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTRESIZE", :type "CXType_Int", :name "CT_EASTRESIZE", :value 6, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHRESIZE", :type "CXType_Int", :name "CT_NORTHRESIZE", :value 7, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTRESIZE", :type "CXType_Int", :name "CT_NORTHEASTRESIZE", :value 8, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTRESIZE", :type "CXType_Int", :name "CT_NORTHWESTRESIZE", :value 9, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHRESIZE", :type "CXType_Int", :name "CT_SOUTHRESIZE", :value 10, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHEASTRESIZE", :type "CXType_Int", :name "CT_SOUTHEASTRESIZE", :value 11, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHWESTRESIZE", :type "CXType_Int", :name "CT_SOUTHWESTRESIZE", :value 12, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WESTRESIZE", :type "CXType_Int", :name "CT_WESTRESIZE", :value 13, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHSOUTHRESIZE", :type "CXType_Int", :name "CT_NORTHSOUTHRESIZE", :value 14, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTWESTRESIZE", :type "CXType_Int", :name "CT_EASTWESTRESIZE", :value 15, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTSOUTHWESTRESIZE", :type "CXType_Int", :name "CT_NORTHEASTSOUTHWESTRESIZE", :value 16, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTSOUTHEASTRESIZE", :type "CXType_Int", :name "CT_NORTHWESTSOUTHEASTRESIZE", :value 17, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_COLUMNRESIZE", :type "CXType_Int", :name "CT_COLUMNRESIZE", :value 18, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ROWRESIZE", :type "CXType_Int", :name "CT_ROWRESIZE", :value 19, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLEPANNING", :type "CXType_Int", :name "CT_MIDDLEPANNING", :value 20, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_EASTPANNING", :type "CXType_Int", :name "CT_EASTPANNING", :value 21, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHPANNING", :type "CXType_Int", :name "CT_NORTHPANNING", :value 22, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHEASTPANNING", :type "CXType_Int", :name "CT_NORTHEASTPANNING", :value 23, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NORTHWESTPANNING", :type "CXType_Int", :name "CT_NORTHWESTPANNING", :value 24, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHPANNING", :type "CXType_Int", :name "CT_SOUTHPANNING", :value 25, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHEASTPANNING", :type "CXType_Int", :name "CT_SOUTHEASTPANNING", :value 26, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_SOUTHWESTPANNING", :type "CXType_Int", :name "CT_SOUTHWESTPANNING", :value 27, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_WESTPANNING", :type "CXType_Int", :name "CT_WESTPANNING", :value 28, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MOVE", :type "CXType_Int", :name "CT_MOVE", :value 29, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_VERTICALTEXT", :type "CXType_Int", :name "CT_VERTICALTEXT", :value 30, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CELL", :type "CXType_Int", :name "CT_CELL", :value 31, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CONTEXTMENU", :type "CXType_Int", :name "CT_CONTEXTMENU", :value 32, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ALIAS", :type "CXType_Int", :name "CT_ALIAS", :value 33, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_PROGRESS", :type "CXType_Int", :name "CT_PROGRESS", :value 34, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NODROP", :type "CXType_Int", :name "CT_NODROP", :value 35, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_COPY", :type "CXType_Int", :name "CT_COPY", :value 36, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NONE", :type "CXType_Int", :name "CT_NONE", :value 37, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_NOTALLOWED", :type "CXType_Int", :name "CT_NOTALLOWED", :value 38, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ZOOMIN", :type "CXType_Int", :name "CT_ZOOMIN", :value 39, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_ZOOMOUT", :type "CXType_Int", :name "CT_ZOOMOUT", :value 40, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_GRAB", :type "CXType_Int", :name "CT_GRAB", :value 41, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_GRABBING", :type "CXType_Int", :name "CT_GRABBING", :value 42, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLE_PANNING_VERTICAL", :type "CXType_Int", :name "CT_MIDDLE_PANNING_VERTICAL", :value 43, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_MIDDLE_PANNING_HORIZONTAL", :type "CXType_Int", :name "CT_MIDDLE_PANNING_HORIZONTAL", :value 44, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_CUSTOM", :type "CXType_Int", :name "CT_CUSTOM", :value 45, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_NONE", :type "CXType_Int", :name "CT_DND_NONE", :value 46, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_MOVE", :type "CXType_Int", :name "CT_DND_MOVE", :value 47, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_COPY", :type "CXType_Int", :name "CT_DND_COPY", :value 48, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CT_DND_LINK", :type "CXType_Int", :name "CT_DND_LINK", :value 49, :enum "cef_cursor_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_NONE", :type "CXType_Int", :name "UU_NONE", :value 0, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Don't unescape anything at all.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_NORMAL", :type "CXType_Int", :name "UU_NORMAL", :value 1, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Don't unescape anything special, but all normal unescaping will happen.\n  /// This is a placeholder and can't be combined with other flags (since it's\n  /// just the absence of them). All other unescape rules imply \"normal\" in\n  /// addition to their special meaning. Things like escaped letters, digits,\n  /// and most symbols will get unescaped with this mode.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_SPACES", :type "CXType_Int", :name "UU_SPACES", :value 2, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Convert %20 to spaces. In some places where we're showing URLs, we may\n  /// want this. In places where the URL may be copied and pasted out, then\n  /// you wouldn't want this since it might not be interpreted in one piece\n  /// by other applications.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_PATH_SEPARATORS", :type "CXType_Int", :name "UU_PATH_SEPARATORS", :value 4, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Unescapes '/' and '\\\\'. If these characters were unescaped, the resulting\n  /// URL won't be the same as the source one. Moreover, they are dangerous to\n  /// unescape in strings that will be used as file paths or names. This value\n  /// should only be used when slashes don't have special meaning, like data\n  /// URLs.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_URL_SPECIAL_CHARS_EXCEPT_PATH_SEPARATORS", :type "CXType_Int", :name "UU_URL_SPECIAL_CHARS_EXCEPT_PATH_SEPARATORS", :value 8, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Unescapes various characters that will change the meaning of URLs,\n  /// including '%', '+', '&', '#'. Does not unescape path separators.\n  /// If these characters were unescaped, the resulting URL won't be the same\n  /// as the source one. This flag is used when generating final output like\n  /// filenames for URLs where we won't be interpreting as a URL and want to do\n  /// as much unescaping as possible.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_REPLACE_PLUS_WITH_SPACE", :type "CXType_Int", :name "UU_REPLACE_PLUS_WITH_SPACE", :value 16, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// URL queries use \"+\" for space. This flag controls that replacement.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_NONE", :type "CXType_Int", :name "UU_NONE", :value 0, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Don't unescape anything at all.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_NORMAL", :type "CXType_Int", :name "UU_NORMAL", :value 1, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Don't unescape anything special, but all normal unescaping will happen.\n  /// This is a placeholder and can't be combined with other flags (since it's\n  /// just the absence of them). All other unescape rules imply \"normal\" in\n  /// addition to their special meaning. Things like escaped letters, digits,\n  /// and most symbols will get unescaped with this mode.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_SPACES", :type "CXType_Int", :name "UU_SPACES", :value 2, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Convert %20 to spaces. In some places where we're showing URLs, we may\n  /// want this. In places where the URL may be copied and pasted out, then\n  /// you wouldn't want this since it might not be interpreted in one piece\n  /// by other applications.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_PATH_SEPARATORS", :type "CXType_Int", :name "UU_PATH_SEPARATORS", :value 4, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Unescapes '/' and '\\\\'. If these characters were unescaped, the resulting\n  /// URL won't be the same as the source one. Moreover, they are dangerous to\n  /// unescape in strings that will be used as file paths or names. This value\n  /// should only be used when slashes don't have special meaning, like data\n  /// URLs.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_URL_SPECIAL_CHARS_EXCEPT_PATH_SEPARATORS", :type "CXType_Int", :name "UU_URL_SPECIAL_CHARS_EXCEPT_PATH_SEPARATORS", :value 8, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// Unescapes various characters that will change the meaning of URLs,\n  /// including '%', '+', '&', '#'. Does not unescape path separators.\n  /// If these characters were unescaped, the resulting URL won't be the same\n  /// as the source one. This flag is used when generating final output like\n  /// filenames for URLs where we won't be interpreting as a URL and want to do\n  /// as much unescaping as possible.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "UU_REPLACE_PLUS_WITH_SPACE", :type "CXType_Int", :name "UU_REPLACE_PLUS_WITH_SPACE", :value 16, :enum "cef_uri_unescape_rule_t", :raw-comment "///\n  /// URL queries use \"+\" for space. This flag controls that replacement.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_PARSER_RFC", :type "CXType_Int", :name "JSON_PARSER_RFC", :value 0, :enum "cef_json_parser_options_t", :raw-comment "///\n  /// Parses the input strictly according to RFC 4627. See comments in\n  /// Chromium's base/json/json_reader.h file for known limitations/\n  /// deviations from the RFC.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_PARSER_ALLOW_TRAILING_COMMAS", :type "CXType_Int", :name "JSON_PARSER_ALLOW_TRAILING_COMMAS", :value 1, :enum "cef_json_parser_options_t", :raw-comment "///\n  /// Allows commas to exist after the last element in structures.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_PARSER_RFC", :type "CXType_Int", :name "JSON_PARSER_RFC", :value 0, :enum "cef_json_parser_options_t", :raw-comment "///\n  /// Parses the input strictly according to RFC 4627. See comments in\n  /// Chromium's base/json/json_reader.h file for known limitations/\n  /// deviations from the RFC.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_PARSER_ALLOW_TRAILING_COMMAS", :type "CXType_Int", :name "JSON_PARSER_ALLOW_TRAILING_COMMAS", :value 1, :enum "cef_json_parser_options_t", :raw-comment "///\n  /// Allows commas to exist after the last element in structures.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_DEFAULT", :type "CXType_Int", :name "JSON_WRITER_DEFAULT", :value 0, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// Default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_OMIT_BINARY_VALUES", :type "CXType_Int", :name "JSON_WRITER_OMIT_BINARY_VALUES", :value 1, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// This option instructs the writer that if a Binary value is encountered,\n  /// the value (and key if within a dictionary) will be omitted from the\n  /// output, and success will be returned. Otherwise, if a binary value is\n  /// encountered, failure will be returned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_OMIT_DOUBLE_TYPE_PRESERVATION", :type "CXType_Int", :name "JSON_WRITER_OMIT_DOUBLE_TYPE_PRESERVATION", :value 2, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// This option instructs the writer to write doubles that have no fractional\n  /// part as a normal integer (i.e., without using exponential notation\n  /// or appending a '.0') as long as the value is within the range of a\n  /// 64-bit int.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_PRETTY_PRINT", :type "CXType_Int", :name "JSON_WRITER_PRETTY_PRINT", :value 4, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// Return a slightly nicer formatted json string (pads with whitespace to\n  /// help with readability).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_DEFAULT", :type "CXType_Int", :name "JSON_WRITER_DEFAULT", :value 0, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// Default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_OMIT_BINARY_VALUES", :type "CXType_Int", :name "JSON_WRITER_OMIT_BINARY_VALUES", :value 1, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// This option instructs the writer that if a Binary value is encountered,\n  /// the value (and key if within a dictionary) will be omitted from the\n  /// output, and success will be returned. Otherwise, if a binary value is\n  /// encountered, failure will be returned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_OMIT_DOUBLE_TYPE_PRESERVATION", :type "CXType_Int", :name "JSON_WRITER_OMIT_DOUBLE_TYPE_PRESERVATION", :value 2, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// This option instructs the writer to write doubles that have no fractional\n  /// part as a normal integer (i.e., without using exponential notation\n  /// or appending a '.0') as long as the value is within the range of a\n  /// 64-bit int.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "JSON_WRITER_PRETTY_PRINT", :type "CXType_Int", :name "JSON_WRITER_PRETTY_PRINT", :value 4, :enum "cef_json_writer_options_t", :raw-comment "///\n  /// Return a slightly nicer formatted json string (pads with whitespace to\n  /// help with readability).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_DEFAULT", :type "CXType_Int", :name "PDF_PRINT_MARGIN_DEFAULT", :value 0, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// Default margins of 1cm (~0.4 inches).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_NONE", :type "CXType_Int", :name "PDF_PRINT_MARGIN_NONE", :value 1, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// No margins.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_CUSTOM", :type "CXType_Int", :name "PDF_PRINT_MARGIN_CUSTOM", :value 2, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// Custom margins using the |margin_*| values from cef_pdf_print_settings_t.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_DEFAULT", :type "CXType_Int", :name "PDF_PRINT_MARGIN_DEFAULT", :value 0, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// Default margins of 1cm (~0.4 inches).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_NONE", :type "CXType_Int", :name "PDF_PRINT_MARGIN_NONE", :value 1, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// No margins.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "PDF_PRINT_MARGIN_CUSTOM", :type "CXType_Int", :name "PDF_PRINT_MARGIN_CUSTOM", :value 2, :enum "cef_pdf_print_margin_type_t", :raw-comment "///\n  /// Custom margins using the |margin_*| values from cef_pdf_print_settings_t.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_NONE", :type "CXType_Int", :name "SCALE_FACTOR_NONE", :value 0, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_100P", :type "CXType_Int", :name "SCALE_FACTOR_100P", :value 1, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_125P", :type "CXType_Int", :name "SCALE_FACTOR_125P", :value 2, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_133P", :type "CXType_Int", :name "SCALE_FACTOR_133P", :value 3, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_140P", :type "CXType_Int", :name "SCALE_FACTOR_140P", :value 4, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_150P", :type "CXType_Int", :name "SCALE_FACTOR_150P", :value 5, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_180P", :type "CXType_Int", :name "SCALE_FACTOR_180P", :value 6, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_200P", :type "CXType_Int", :name "SCALE_FACTOR_200P", :value 7, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_250P", :type "CXType_Int", :name "SCALE_FACTOR_250P", :value 8, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_300P", :type "CXType_Int", :name "SCALE_FACTOR_300P", :value 9, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_NONE", :type "CXType_Int", :name "SCALE_FACTOR_NONE", :value 0, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_100P", :type "CXType_Int", :name "SCALE_FACTOR_100P", :value 1, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_125P", :type "CXType_Int", :name "SCALE_FACTOR_125P", :value 2, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_133P", :type "CXType_Int", :name "SCALE_FACTOR_133P", :value 3, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_140P", :type "CXType_Int", :name "SCALE_FACTOR_140P", :value 4, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_150P", :type "CXType_Int", :name "SCALE_FACTOR_150P", :value 5, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_180P", :type "CXType_Int", :name "SCALE_FACTOR_180P", :value 6, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_200P", :type "CXType_Int", :name "SCALE_FACTOR_200P", :value 7, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_250P", :type "CXType_Int", :name "SCALE_FACTOR_250P", :value 8, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SCALE_FACTOR_300P", :type "CXType_Int", :name "SCALE_FACTOR_300P", :value 9, :enum "cef_scale_factor_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :type "CXType_Int", :name "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :value 0, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer header if the header value is HTTPS but the request\n  /// destination is HTTP. This is the default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_DEFAULT", :type "CXType_Int", :name "REFERRER_POLICY_DEFAULT", :value 0, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer header if the header value is HTTPS but the request\n  /// destination is HTTP. This is the default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_REDUCE_REFERRER_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_REDUCE_REFERRER_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN", :value 1, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// A slight variant on CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE:\n  /// If the request destination is HTTP, an HTTPS referrer will be cleared. If\n  /// the request's destination is cross-origin with the referrer (but does not\n  /// downgrade), the referrer's granularity will be stripped down to an origin\n  /// rather than a full URL. Same-origin requests will send the full referrer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN_ONLY_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN_ONLY_ON_TRANSITION_CROSS_ORIGIN", :value 2, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to an origin when the origin of the referrer is\n  /// different from the destination's origin.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_NEVER_CLEAR_REFERRER", :type "CXType_Int", :name "REFERRER_POLICY_NEVER_CLEAR_REFERRER", :value 3, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Never change the referrer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN", :value 4, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to the origin regardless of the redirect location.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_CROSS_ORIGIN", :value 5, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer when the request's referrer is cross-origin with the\n  /// request's destination.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN_CLEAR_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN_CLEAR_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :value 6, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to the origin, but clear it entirely if the\n  /// referrer value is HTTPS and the destination is HTTP.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_NO_REFERRER", :type "CXType_Int", :name "REFERRER_POLICY_NO_REFERRER", :value 7, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Always clear the referrer regardless of the request destination.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_LAST_VALUE", :type "CXType_Int", :name "REFERRER_POLICY_LAST_VALUE", :value 7, :enum "cef_referrer_policy_t", :raw-comment "/// Always the last value in this enumeration."} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :type "CXType_Int", :name "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :value 0, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer header if the header value is HTTPS but the request\n  /// destination is HTTP. This is the default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_DEFAULT", :type "CXType_Int", :name "REFERRER_POLICY_DEFAULT", :value 0, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer header if the header value is HTTPS but the request\n  /// destination is HTTP. This is the default behavior.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_REDUCE_REFERRER_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_REDUCE_REFERRER_GRANULARITY_ON_TRANSITION_CROSS_ORIGIN", :value 1, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// A slight variant on CLEAR_REFERRER_ON_TRANSITION_FROM_SECURE_TO_INSECURE:\n  /// If the request destination is HTTP, an HTTPS referrer will be cleared. If\n  /// the request's destination is cross-origin with the referrer (but does not\n  /// downgrade), the referrer's granularity will be stripped down to an origin\n  /// rather than a full URL. Same-origin requests will send the full referrer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN_ONLY_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN_ONLY_ON_TRANSITION_CROSS_ORIGIN", :value 2, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to an origin when the origin of the referrer is\n  /// different from the destination's origin.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_NEVER_CLEAR_REFERRER", :type "CXType_Int", :name "REFERRER_POLICY_NEVER_CLEAR_REFERRER", :value 3, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Never change the referrer.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN", :value 4, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to the origin regardless of the redirect location.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_CROSS_ORIGIN", :type "CXType_Int", :name "REFERRER_POLICY_CLEAR_REFERRER_ON_TRANSITION_CROSS_ORIGIN", :value 5, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Clear the referrer when the request's referrer is cross-origin with the\n  /// request's destination.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_ORIGIN_CLEAR_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :type "CXType_Int", :name "REFERRER_POLICY_ORIGIN_CLEAR_ON_TRANSITION_FROM_SECURE_TO_INSECURE", :value 6, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Strip the referrer down to the origin, but clear it entirely if the\n  /// referrer value is HTTPS and the destination is HTTP.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_NO_REFERRER", :type "CXType_Int", :name "REFERRER_POLICY_NO_REFERRER", :value 7, :enum "cef_referrer_policy_t", :raw-comment "///\n  /// Always clear the referrer regardless of the request destination.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "REFERRER_POLICY_LAST_VALUE", :type "CXType_Int", :name "REFERRER_POLICY_LAST_VALUE", :value 7, :enum "cef_referrer_policy_t", :raw-comment "/// Always the last value in this enumeration."} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_NEED_MORE_DATA", :type "CXType_Int", :name "RESPONSE_FILTER_NEED_MORE_DATA", :value 0, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// Some or all of the pre-filter data was read successfully but more data is\n  /// needed in order to continue filtering (filtered output is pending).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_DONE", :type "CXType_Int", :name "RESPONSE_FILTER_DONE", :value 1, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// Some or all of the pre-filter data was read successfully and all available\n  /// filtered output has been written.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_ERROR", :type "CXType_Int", :name "RESPONSE_FILTER_ERROR", :value 2, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// An error occurred during filtering.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_NEED_MORE_DATA", :type "CXType_Int", :name "RESPONSE_FILTER_NEED_MORE_DATA", :value 0, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// Some or all of the pre-filter data was read successfully but more data is\n  /// needed in order to continue filtering (filtered output is pending).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_DONE", :type "CXType_Int", :name "RESPONSE_FILTER_DONE", :value 1, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// Some or all of the pre-filter data was read successfully and all available\n  /// filtered output has been written.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "RESPONSE_FILTER_ERROR", :type "CXType_Int", :name "RESPONSE_FILTER_ERROR", :value 2, :enum "cef_response_filter_status_t", :raw-comment "///\n  /// An error occurred during filtering.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COLOR_TYPE_RGBA_8888", :type "CXType_Int", :name "CEF_COLOR_TYPE_RGBA_8888", :value 0, :enum "cef_color_type_t", :raw-comment "///\n  /// RGBA with 8 bits per pixel (32bits total).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COLOR_TYPE_BGRA_8888", :type "CXType_Int", :name "CEF_COLOR_TYPE_BGRA_8888", :value 1, :enum "cef_color_type_t", :raw-comment "///\n  /// BGRA with 8 bits per pixel (32bits total).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COLOR_TYPE_RGBA_8888", :type "CXType_Int", :name "CEF_COLOR_TYPE_RGBA_8888", :value 0, :enum "cef_color_type_t", :raw-comment "///\n  /// RGBA with 8 bits per pixel (32bits total).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_COLOR_TYPE_BGRA_8888", :type "CXType_Int", :name "CEF_COLOR_TYPE_BGRA_8888", :value 1, :enum "cef_color_type_t", :raw-comment "///\n  /// BGRA with 8 bits per pixel (32bits total).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_OPAQUE", :type "CXType_Int", :name "CEF_ALPHA_TYPE_OPAQUE", :value 0, :enum "cef_alpha_type_t", :raw-comment "///\n  /// No transparency. The alpha component is ignored.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_PREMULTIPLIED", :type "CXType_Int", :name "CEF_ALPHA_TYPE_PREMULTIPLIED", :value 1, :enum "cef_alpha_type_t", :raw-comment "///\n  /// Transparency with pre-multiplied alpha component.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_POSTMULTIPLIED", :type "CXType_Int", :name "CEF_ALPHA_TYPE_POSTMULTIPLIED", :value 2, :enum "cef_alpha_type_t", :raw-comment "///\n  /// Transparency with post-multiplied alpha component.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_OPAQUE", :type "CXType_Int", :name "CEF_ALPHA_TYPE_OPAQUE", :value 0, :enum "cef_alpha_type_t", :raw-comment "///\n  /// No transparency. The alpha component is ignored.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_PREMULTIPLIED", :type "CXType_Int", :name "CEF_ALPHA_TYPE_PREMULTIPLIED", :value 1, :enum "cef_alpha_type_t", :raw-comment "///\n  /// Transparency with pre-multiplied alpha component.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_ALPHA_TYPE_POSTMULTIPLIED", :type "CXType_Int", :name "CEF_ALPHA_TYPE_POSTMULTIPLIED", :value 2, :enum "cef_alpha_type_t", :raw-comment "///\n  /// Transparency with post-multiplied alpha component.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_BOLD", :type "CXType_Int", :name "CEF_TEXT_STYLE_BOLD", :value 0, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_ITALIC", :type "CXType_Int", :name "CEF_TEXT_STYLE_ITALIC", :value 1, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_STRIKE", :type "CXType_Int", :name "CEF_TEXT_STYLE_STRIKE", :value 2, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_DIAGONAL_STRIKE", :type "CXType_Int", :name "CEF_TEXT_STYLE_DIAGONAL_STRIKE", :value 3, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_UNDERLINE", :type "CXType_Int", :name "CEF_TEXT_STYLE_UNDERLINE", :value 4, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_BOLD", :type "CXType_Int", :name "CEF_TEXT_STYLE_BOLD", :value 0, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_ITALIC", :type "CXType_Int", :name "CEF_TEXT_STYLE_ITALIC", :value 1, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_STRIKE", :type "CXType_Int", :name "CEF_TEXT_STYLE_STRIKE", :value 2, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_DIAGONAL_STRIKE", :type "CXType_Int", :name "CEF_TEXT_STYLE_DIAGONAL_STRIKE", :value 3, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEXT_STYLE_UNDERLINE", :type "CXType_Int", :name "CEF_TEXT_STYLE_UNDERLINE", :value 4, :enum "cef_text_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_START", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_START", :value 0, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be left-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_CENTER", :value 1, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be center-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_END", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_END", :value 2, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be right-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_START", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_START", :value 0, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be left-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_CENTER", :value 1, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be center-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MAIN_AXIS_ALIGNMENT_END", :type "CXType_Int", :name "CEF_MAIN_AXIS_ALIGNMENT_END", :value 2, :enum "cef_main_axis_alignment_t", :raw-comment "///\n  /// Child views will be right-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_STRETCH", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_STRETCH", :value 0, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be stretched to fit.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_START", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_START", :value 1, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be left-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_CENTER", :value 2, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be center-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_END", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_END", :value 3, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be right-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_STRETCH", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_STRETCH", :value 0, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be stretched to fit.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_START", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_START", :value 1, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be left-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_CENTER", :value 2, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be center-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CROSS_AXIS_ALIGNMENT_END", :type "CXType_Int", :name "CEF_CROSS_AXIS_ALIGNMENT_END", :value 3, :enum "cef_cross_axis_alignment_t", :raw-comment "///\n  /// Child views will be right-aligned.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_NORMAL", :type "CXType_Int", :name "CEF_BUTTON_STATE_NORMAL", :value 0, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_HOVERED", :type "CXType_Int", :name "CEF_BUTTON_STATE_HOVERED", :value 1, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_PRESSED", :type "CXType_Int", :name "CEF_BUTTON_STATE_PRESSED", :value 2, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_DISABLED", :type "CXType_Int", :name "CEF_BUTTON_STATE_DISABLED", :value 3, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_NORMAL", :type "CXType_Int", :name "CEF_BUTTON_STATE_NORMAL", :value 0, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_HOVERED", :type "CXType_Int", :name "CEF_BUTTON_STATE_HOVERED", :value 1, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_PRESSED", :type "CXType_Int", :name "CEF_BUTTON_STATE_PRESSED", :value 2, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_BUTTON_STATE_DISABLED", :type "CXType_Int", :name "CEF_BUTTON_STATE_DISABLED", :value 3, :enum "cef_button_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_LEFT", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_LEFT", :value 0, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's left edge with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_CENTER", :value 1, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's center with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_RIGHT", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_RIGHT", :value 2, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's right edge with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_LEFT", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_LEFT", :value 0, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's left edge with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_CENTER", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_CENTER", :value 1, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's center with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_HORIZONTAL_ALIGNMENT_RIGHT", :type "CXType_Int", :name "CEF_HORIZONTAL_ALIGNMENT_RIGHT", :value 2, :enum "cef_horizontal_alignment_t", :raw-comment "///\n  /// Align the text's right edge with that of its display area.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_TOPLEFT", :type "CXType_Int", :name "CEF_MENU_ANCHOR_TOPLEFT", :value 0, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_TOPRIGHT", :type "CXType_Int", :name "CEF_MENU_ANCHOR_TOPRIGHT", :value 1, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_BOTTOMCENTER", :type "CXType_Int", :name "CEF_MENU_ANCHOR_BOTTOMCENTER", :value 2, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_TOPLEFT", :type "CXType_Int", :name "CEF_MENU_ANCHOR_TOPLEFT", :value 0, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_TOPRIGHT", :type "CXType_Int", :name "CEF_MENU_ANCHOR_TOPRIGHT", :value 1, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_ANCHOR_BOTTOMCENTER", :type "CXType_Int", :name "CEF_MENU_ANCHOR_BOTTOMCENTER", :value 2, :enum "cef_menu_anchor_position_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT", :value 0, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_HOVERED", :value 1, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_ACCELERATOR", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_ACCELERATOR", :value 2, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_ACCELERATOR_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_ACCELERATOR_HOVERED", :value 3, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_BACKGROUND", :type "CXType_Int", :name "CEF_MENU_COLOR_BACKGROUND", :value 4, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_BACKGROUND_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_BACKGROUND_HOVERED", :value 5, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_COUNT", :type "CXType_Int", :name "CEF_MENU_COLOR_COUNT", :value 6, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT", :value 0, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_HOVERED", :value 1, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_ACCELERATOR", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_ACCELERATOR", :value 2, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_TEXT_ACCELERATOR_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_TEXT_ACCELERATOR_HOVERED", :value 3, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_BACKGROUND", :type "CXType_Int", :name "CEF_MENU_COLOR_BACKGROUND", :value 4, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_BACKGROUND_HOVERED", :type "CXType_Int", :name "CEF_MENU_COLOR_BACKGROUND_HOVERED", :value 5, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MENU_COLOR_COUNT", :type "CXType_Int", :name "CEF_MENU_COLOR_COUNT", :value 6, :enum "cef_menu_color_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_UNKNOWN", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_UNKNOWN", :value 0, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_SSL2", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_SSL2", :value 1, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_SSL3", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_SSL3", :value 2, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1", :value 3, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_1", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_1", :value 4, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_2", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_2", :value 5, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_3", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_3", :value 6, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_QUIC", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_QUIC", :value 7, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_UNKNOWN", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_UNKNOWN", :value 0, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_SSL2", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_SSL2", :value 1, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_SSL3", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_SSL3", :value 2, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1", :value 3, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_1", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_1", :value 4, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_2", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_2", :value 5, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_TLS1_3", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_TLS1_3", :value 6, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONNECTION_VERSION_QUIC", :type "CXType_Int", :name "SSL_CONNECTION_VERSION_QUIC", :value 7, :enum "cef_ssl_version_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_NORMAL_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_NORMAL_CONTENT", :value 0, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_DISPLAYED_INSECURE_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_DISPLAYED_INSECURE_CONTENT", :value 1, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_RAN_INSECURE_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_RAN_INSECURE_CONTENT", :value 2, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_NORMAL_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_NORMAL_CONTENT", :value 0, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_DISPLAYED_INSECURE_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_DISPLAYED_INSECURE_CONTENT", :value 1, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "SSL_CONTENT_RAN_INSECURE_CONTENT", :type "CXType_Int", :name "SSL_CONTENT_RAN_INSECURE_CONTENT", :value 2, :enum "cef_ssl_content_status_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_NONE", :type "CXType_Int", :name "CEF_SCHEME_OPTION_NONE", :value 0, :enum "cef_scheme_options_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_STANDARD", :type "CXType_Int", :name "CEF_SCHEME_OPTION_STANDARD", :value 1, :enum "cef_scheme_options_t", :raw-comment "/// For non-standard scheme URLs only the \"scheme:\" component is parsed and\n  /// canonicalized. The remainder of the URL will be passed to the handler as-\n  /// is. For example, \"scheme:///some%20text\" will remain the same.\n  /// Non-standard scheme URLs cannot be used as a target for form submission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_LOCAL", :type "CXType_Int", :name "CEF_SCHEME_OPTION_LOCAL", :value 2, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_LOCAL is set the scheme will be treated with the same\n  /// security rules as those applied to \"file\" URLs. Normal pages cannot link\n  /// to or access local URLs. Also, by default, local URLs can only perform\n  /// XMLHttpRequest calls to the same URL (origin + path) that originated the\n  /// request. To allow XMLHttpRequest calls from a local URL to other URLs with\n  /// the same origin set the CefSettings.file_access_from_file_urls_allowed\n  /// value to true (1). To allow XMLHttpRequest calls from a local URL to all\n  /// origins set the CefSettings.universal_access_from_file_urls_allowed value\n  /// to true (1).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_DISPLAY_ISOLATED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_DISPLAY_ISOLATED", :value 4, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_DISPLAY_ISOLATED is set the scheme can only be\n  /// displayed from other content hosted with the same scheme. For example,\n  /// pages in other origins cannot create iframes or hyperlinks to URLs with\n  /// the scheme. For schemes that must be accessible from other schemes don't\n  /// set this, set CEF_SCHEME_OPTION_CORS_ENABLED, and use CORS\n  /// \"Access-Control-Allow-Origin\" headers to further restrict access.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_SECURE", :type "CXType_Int", :name "CEF_SCHEME_OPTION_SECURE", :value 8, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_SECURE is set the scheme will be treated with the\n  /// same security rules as those applied to \"https\" URLs. For example, loading\n  /// this scheme from other secure schemes will not trigger mixed content\n  /// warnings.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_CORS_ENABLED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_CORS_ENABLED", :value 16, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_CORS_ENABLED is set the scheme can be sent CORS\n  /// requests. This value should be set in most cases where\n  /// CEF_SCHEME_OPTION_STANDARD is set.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_CSP_BYPASSING", :type "CXType_Int", :name "CEF_SCHEME_OPTION_CSP_BYPASSING", :value 32, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_CSP_BYPASSING is set the scheme can bypass Content-\n  /// Security-Policy (CSP) checks. This value should not be set in most cases\n  /// where CEF_SCHEME_OPTION_STANDARD is set.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_FETCH_ENABLED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_FETCH_ENABLED", :value 64, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_FETCH_ENABLED is set the scheme can perform Fetch API\n  /// requests.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_NONE", :type "CXType_Int", :name "CEF_SCHEME_OPTION_NONE", :value 0, :enum "cef_scheme_options_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_STANDARD", :type "CXType_Int", :name "CEF_SCHEME_OPTION_STANDARD", :value 1, :enum "cef_scheme_options_t", :raw-comment "/// For non-standard scheme URLs only the \"scheme:\" component is parsed and\n  /// canonicalized. The remainder of the URL will be passed to the handler as-\n  /// is. For example, \"scheme:///some%20text\" will remain the same.\n  /// Non-standard scheme URLs cannot be used as a target for form submission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_LOCAL", :type "CXType_Int", :name "CEF_SCHEME_OPTION_LOCAL", :value 2, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_LOCAL is set the scheme will be treated with the same\n  /// security rules as those applied to \"file\" URLs. Normal pages cannot link\n  /// to or access local URLs. Also, by default, local URLs can only perform\n  /// XMLHttpRequest calls to the same URL (origin + path) that originated the\n  /// request. To allow XMLHttpRequest calls from a local URL to other URLs with\n  /// the same origin set the CefSettings.file_access_from_file_urls_allowed\n  /// value to true (1). To allow XMLHttpRequest calls from a local URL to all\n  /// origins set the CefSettings.universal_access_from_file_urls_allowed value\n  /// to true (1).\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_DISPLAY_ISOLATED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_DISPLAY_ISOLATED", :value 4, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_DISPLAY_ISOLATED is set the scheme can only be\n  /// displayed from other content hosted with the same scheme. For example,\n  /// pages in other origins cannot create iframes or hyperlinks to URLs with\n  /// the scheme. For schemes that must be accessible from other schemes don't\n  /// set this, set CEF_SCHEME_OPTION_CORS_ENABLED, and use CORS\n  /// \"Access-Control-Allow-Origin\" headers to further restrict access.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_SECURE", :type "CXType_Int", :name "CEF_SCHEME_OPTION_SECURE", :value 8, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_SECURE is set the scheme will be treated with the\n  /// same security rules as those applied to \"https\" URLs. For example, loading\n  /// this scheme from other secure schemes will not trigger mixed content\n  /// warnings.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_CORS_ENABLED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_CORS_ENABLED", :value 16, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_CORS_ENABLED is set the scheme can be sent CORS\n  /// requests. This value should be set in most cases where\n  /// CEF_SCHEME_OPTION_STANDARD is set.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_CSP_BYPASSING", :type "CXType_Int", :name "CEF_SCHEME_OPTION_CSP_BYPASSING", :value 32, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_CSP_BYPASSING is set the scheme can bypass Content-\n  /// Security-Policy (CSP) checks. This value should not be set in most cases\n  /// where CEF_SCHEME_OPTION_STANDARD is set.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SCHEME_OPTION_FETCH_ENABLED", :type "CXType_Int", :name "CEF_SCHEME_OPTION_FETCH_ENABLED", :value 64, :enum "cef_scheme_options_t", :raw-comment "///\n  /// If CEF_SCHEME_OPTION_FETCH_ENABLED is set the scheme can perform Fetch API\n  /// requests.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_SOLID", :type "CXType_Int", :name "CEF_CUS_SOLID", :value 0, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_DOT", :type "CXType_Int", :name "CEF_CUS_DOT", :value 1, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_DASH", :type "CXType_Int", :name "CEF_CUS_DASH", :value 2, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_NONE", :type "CXType_Int", :name "CEF_CUS_NONE", :value 3, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_SOLID", :type "CXType_Int", :name "CEF_CUS_SOLID", :value 0, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_DOT", :type "CXType_Int", :name "CEF_CUS_DOT", :value 1, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_DASH", :type "CXType_Int", :name "CEF_CUS_DASH", :value 2, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CUS_NONE", :type "CXType_Int", :name "CEF_CUS_NONE", :value 3, :enum "cef_composition_underline_style_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_NONE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_NONE", :value 0, :enum "cef_channel_layout_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_UNSUPPORTED", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_UNSUPPORTED", :value 1, :enum "cef_channel_layout_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_MONO", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_MONO", :value 2, :enum "cef_channel_layout_t", :raw-comment "/// Front C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO", :value 3, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2_1", :value 4, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_SURROUND", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_SURROUND", :value 5, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_0", :value 6, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2_2", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2_2", :value 7, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_QUAD", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_QUAD", :value 8, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_0", :value 9, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1", :value 10, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_0_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_0_BACK", :value 11, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1_BACK", :value 12, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_0", :value 13, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1", :value 14, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1_WIDE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1_WIDE", :value 15, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO_DOWNMIX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO_DOWNMIX", :value 16, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2POINT1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2POINT1", :value 17, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_3_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_3_1", :value 18, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_1", :value 19, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Rear C, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_0", :value 20, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Side L, Side R, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_0_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_0_FRONT", :value 21, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_HEXAGONAL", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_HEXAGONAL", :value 22, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Rear L, Rear R, Rear C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1", :value 23, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE, Side L, Side R, Rear Center"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1_BACK", :value 24, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE, Back L, Back R, Rear Center"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1_FRONT", :value 25, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_0_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_0_FRONT", :value 26, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1_WIDE_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1_WIDE_BACK", :value 27, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Back L, Back R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_OCTAGONAL", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_OCTAGONAL", :value 28, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Rear L, Back R, Back C."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_DISCRETE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_DISCRETE", :value 29, :enum "cef_channel_layout_t", :raw-comment "/// Channels are not explicitly mapped to speakers."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC", :value 30, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C. Front C contains the keyboard mic audio. This\n  /// layout is only intended for input for WebRTC. The Front C channel\n  /// is stripped away in the WebRTC audio input pipeline and never seen outside\n  /// of that."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_1_QUAD_SIDE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_1_QUAD_SIDE", :value 31, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Side L, Side R, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_BITSTREAM", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_BITSTREAM", :value 32, :enum "cef_channel_layout_t", :raw-comment "/// Actual channel layout is specified in the bitstream and the actual channel\n  /// count is unknown at Chromium media pipeline level (useful for audio\n  /// pass-through mode)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1_4_DOWNMIX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1_4_DOWNMIX", :value 33, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R,\n  /// Front Height L, Front Height R, Rear Height L, Rear Height R\n  /// Will be represented as six channels (5.1) due to eight channel limit\n  /// kMaxConcurrentChannels"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_MAX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_MAX", :value 33, :enum "cef_channel_layout_t", :raw-comment "/// Max value, must always equal the largest entry ever logged."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_NONE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_NONE", :value 0, :enum "cef_channel_layout_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_UNSUPPORTED", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_UNSUPPORTED", :value 1, :enum "cef_channel_layout_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_MONO", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_MONO", :value 2, :enum "cef_channel_layout_t", :raw-comment "/// Front C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO", :value 3, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2_1", :value 4, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_SURROUND", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_SURROUND", :value 5, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_0", :value 6, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2_2", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2_2", :value 7, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_QUAD", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_QUAD", :value 8, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_0", :value 9, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1", :value 10, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_0_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_0_BACK", :value 11, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1_BACK", :value 12, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_0", :value 13, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1", :value 14, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R, Back L, Back R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1_WIDE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1_WIDE", :value 15, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO_DOWNMIX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO_DOWNMIX", :value 16, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_2POINT1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_2POINT1", :value 17, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_3_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_3_1", :value 18, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_1", :value 19, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Rear C, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_0", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_0", :value 20, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Side L, Side R, Back C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_0_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_0_FRONT", :value 21, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_HEXAGONAL", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_HEXAGONAL", :value 22, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, Rear L, Rear R, Rear C"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1", :value 23, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE, Side L, Side R, Rear Center"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1_BACK", :value 24, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Front C, LFE, Back L, Back R, Rear Center"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_6_1_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_6_1_FRONT", :value 25, :enum "cef_channel_layout_t", :raw-comment "/// Stereo L, Stereo R, Side L, Side R, Front LofC, Front RofC, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_0_FRONT", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_0_FRONT", :value 26, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_7_1_WIDE_BACK", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_7_1_WIDE_BACK", :value 27, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Back L, Back R, Front LofC, Front RofC"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_OCTAGONAL", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_OCTAGONAL", :value 28, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, Side L, Side R, Rear L, Back R, Back C."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_DISCRETE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_DISCRETE", :value 29, :enum "cef_channel_layout_t", :raw-comment "/// Channels are not explicitly mapped to speakers."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC", :value 30, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C. Front C contains the keyboard mic audio. This\n  /// layout is only intended for input for WebRTC. The Front C channel\n  /// is stripped away in the WebRTC audio input pipeline and never seen outside\n  /// of that."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_4_1_QUAD_SIDE", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_4_1_QUAD_SIDE", :value 31, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Side L, Side R, LFE"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_BITSTREAM", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_BITSTREAM", :value 32, :enum "cef_channel_layout_t", :raw-comment "/// Actual channel layout is specified in the bitstream and the actual channel\n  /// count is unknown at Chromium media pipeline level (useful for audio\n  /// pass-through mode)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_5_1_4_DOWNMIX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_5_1_4_DOWNMIX", :value 33, :enum "cef_channel_layout_t", :raw-comment "/// Front L, Front R, Front C, LFE, Side L, Side R,\n  /// Front Height L, Front Height R, Rear Height L, Rear Height R\n  /// Will be represented as six channels (5.1) due to eight channel limit\n  /// kMaxConcurrentChannels"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CHANNEL_LAYOUT_MAX", :type "CXType_Int", :name "CEF_CHANNEL_LAYOUT_MAX", :value 33, :enum "cef_channel_layout_t", :raw-comment "/// Max value, must always equal the largest entry ever logged."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_UNKNOWN_ERROR", :type "CXType_Int", :name "CEF_MRCR_UNKNOWN_ERROR", :value 0, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_OK", :type "CXType_Int", :name "CEF_MRCR_OK", :value 1, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_TIMED_OUT", :type "CXType_Int", :name "CEF_MRCR_TIMED_OUT", :value 2, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_NOT_FOUND", :type "CXType_Int", :name "CEF_MRCR_ROUTE_NOT_FOUND", :value 3, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_SINK_NOT_FOUND", :type "CXType_Int", :name "CEF_MRCR_SINK_NOT_FOUND", :value 4, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_INVALID_ORIGIN", :type "CXType_Int", :name "CEF_MRCR_INVALID_ORIGIN", :value 5, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_NO_SUPPORTED_PROVIDER", :type "CXType_Int", :name "CEF_MRCR_NO_SUPPORTED_PROVIDER", :value 7, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_CANCELLED", :type "CXType_Int", :name "CEF_MRCR_CANCELLED", :value 8, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_ALREADY_EXISTS", :type "CXType_Int", :name "CEF_MRCR_ROUTE_ALREADY_EXISTS", :value 9, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_ALREADY_TERMINATED", :type "CXType_Int", :name "CEF_MRCR_ROUTE_ALREADY_TERMINATED", :value 11, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_UNKNOWN_ERROR", :type "CXType_Int", :name "CEF_MRCR_UNKNOWN_ERROR", :value 0, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_OK", :type "CXType_Int", :name "CEF_MRCR_OK", :value 1, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_TIMED_OUT", :type "CXType_Int", :name "CEF_MRCR_TIMED_OUT", :value 2, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_NOT_FOUND", :type "CXType_Int", :name "CEF_MRCR_ROUTE_NOT_FOUND", :value 3, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_SINK_NOT_FOUND", :type "CXType_Int", :name "CEF_MRCR_SINK_NOT_FOUND", :value 4, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_INVALID_ORIGIN", :type "CXType_Int", :name "CEF_MRCR_INVALID_ORIGIN", :value 5, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_NO_SUPPORTED_PROVIDER", :type "CXType_Int", :name "CEF_MRCR_NO_SUPPORTED_PROVIDER", :value 7, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_CANCELLED", :type "CXType_Int", :name "CEF_MRCR_CANCELLED", :value 8, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_ALREADY_EXISTS", :type "CXType_Int", :name "CEF_MRCR_ROUTE_ALREADY_EXISTS", :value 9, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCR_ROUTE_ALREADY_TERMINATED", :type "CXType_Int", :name "CEF_MRCR_ROUTE_ALREADY_TERMINATED", :value 11, :enum "cef_media_route_create_result_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_UNKNOWN", :type "CXType_Int", :name "CEF_MRCS_UNKNOWN", :value 0, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CONNECTING", :type "CXType_Int", :name "CEF_MRCS_CONNECTING", :value 1, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CONNECTED", :type "CXType_Int", :name "CEF_MRCS_CONNECTED", :value 2, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CLOSED", :type "CXType_Int", :name "CEF_MRCS_CLOSED", :value 3, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_TERMINATED", :type "CXType_Int", :name "CEF_MRCS_TERMINATED", :value 4, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_UNKNOWN", :type "CXType_Int", :name "CEF_MRCS_UNKNOWN", :value 0, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CONNECTING", :type "CXType_Int", :name "CEF_MRCS_CONNECTING", :value 1, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CONNECTED", :type "CXType_Int", :name "CEF_MRCS_CONNECTED", :value 2, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_CLOSED", :type "CXType_Int", :name "CEF_MRCS_CLOSED", :value 3, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MRCS_TERMINATED", :type "CXType_Int", :name "CEF_MRCS_TERMINATED", :value 4, :enum "cef_media_route_connection_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST", :type "CXType_Int", :name "CEF_MSIT_CAST", :value 0, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST_AUDIO_GROUP", :type "CXType_Int", :name "CEF_MSIT_CAST_AUDIO_GROUP", :value 1, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST_AUDIO", :type "CXType_Int", :name "CEF_MSIT_CAST_AUDIO", :value 2, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_MEETING", :type "CXType_Int", :name "CEF_MSIT_MEETING", :value 3, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_HANGOUT", :type "CXType_Int", :name "CEF_MSIT_HANGOUT", :value 4, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_EDUCATION", :type "CXType_Int", :name "CEF_MSIT_EDUCATION", :value 5, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_WIRED_DISPLAY", :type "CXType_Int", :name "CEF_MSIT_WIRED_DISPLAY", :value 6, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_GENERIC", :type "CXType_Int", :name "CEF_MSIT_GENERIC", :value 7, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_TOTAL_COUNT", :type "CXType_Int", :name "CEF_MSIT_TOTAL_COUNT", :value 8, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST", :type "CXType_Int", :name "CEF_MSIT_CAST", :value 0, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST_AUDIO_GROUP", :type "CXType_Int", :name "CEF_MSIT_CAST_AUDIO_GROUP", :value 1, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_CAST_AUDIO", :type "CXType_Int", :name "CEF_MSIT_CAST_AUDIO", :value 2, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_MEETING", :type "CXType_Int", :name "CEF_MSIT_MEETING", :value 3, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_HANGOUT", :type "CXType_Int", :name "CEF_MSIT_HANGOUT", :value 4, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_EDUCATION", :type "CXType_Int", :name "CEF_MSIT_EDUCATION", :value 5, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_WIRED_DISPLAY", :type "CXType_Int", :name "CEF_MSIT_WIRED_DISPLAY", :value 6, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_GENERIC", :type "CXType_Int", :name "CEF_MSIT_GENERIC", :value 7, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MSIT_TOTAL_COUNT", :type "CXType_Int", :name "CEF_MSIT_TOTAL_COUNT", :value 8, :enum "cef_media_sink_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_CUT", :type "CXType_Int", :name "CEF_TFC_CUT", :value 1, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_COPY", :type "CXType_Int", :name "CEF_TFC_COPY", :value 2, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_PASTE", :type "CXType_Int", :name "CEF_TFC_PASTE", :value 3, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_UNDO", :type "CXType_Int", :name "CEF_TFC_UNDO", :value 4, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_DELETE", :type "CXType_Int", :name "CEF_TFC_DELETE", :value 5, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_SELECT_ALL", :type "CXType_Int", :name "CEF_TFC_SELECT_ALL", :value 6, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_CUT", :type "CXType_Int", :name "CEF_TFC_CUT", :value 1, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_COPY", :type "CXType_Int", :name "CEF_TFC_COPY", :value 2, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_PASTE", :type "CXType_Int", :name "CEF_TFC_PASTE", :value 3, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_UNDO", :type "CXType_Int", :name "CEF_TFC_UNDO", :value 4, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_DELETE", :type "CXType_Int", :name "CEF_TFC_DELETE", :value 5, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TFC_SELECT_ALL", :type "CXType_Int", :name "CEF_TFC_SELECT_ALL", :value 6, :enum "cef_text_field_commands_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_NONE", :type "CXType_Int", :name "CEF_CTT_NONE", :value 1, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_NORMAL", :type "CXType_Int", :name "CEF_CTT_NORMAL", :value 2, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_LOCATION", :type "CXType_Int", :name "CEF_CTT_LOCATION", :value 3, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_NONE", :type "CXType_Int", :name "CEF_CTT_NONE", :value 1, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_NORMAL", :type "CXType_Int", :name "CEF_CTT_NORMAL", :value 2, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTT_LOCATION", :type "CXType_Int", :name "CEF_CTT_LOCATION", :value 3, :enum "cef_chrome_toolbar_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_BOOKMARK_STAR", :type "CXType_Int", :name "CEF_CPAIT_BOOKMARK_STAR", :value 0, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_CLICK_TO_CALL", :type "CXType_Int", :name "CEF_CPAIT_CLICK_TO_CALL", :value 1, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_COOKIE_CONTROLS", :type "CXType_Int", :name "CEF_CPAIT_COOKIE_CONTROLS", :value 2, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_FILE_SYSTEM_ACCESS", :type "CXType_Int", :name "CEF_CPAIT_FILE_SYSTEM_ACCESS", :value 3, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_FIND", :type "CXType_Int", :name "CEF_CPAIT_FIND", :value 4, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_HIGH_EFFICIENCY", :type "CXType_Int", :name "CEF_CPAIT_HIGH_EFFICIENCY", :value 5, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_INTENT_PICKER", :type "CXType_Int", :name "CEF_CPAIT_INTENT_PICKER", :value 6, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_LOCAL_CARD_MIGRATION", :type "CXType_Int", :name "CEF_CPAIT_LOCAL_CARD_MIGRATION", :value 7, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MANAGE_PASSWORDS", :type "CXType_Int", :name "CEF_CPAIT_MANAGE_PASSWORDS", :value 8, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PAYMENTS_OFFER_NOTIFICATION", :type "CXType_Int", :name "CEF_CPAIT_PAYMENTS_OFFER_NOTIFICATION", :value 9, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PRICE_TRACKING", :type "CXType_Int", :name "CEF_CPAIT_PRICE_TRACKING", :value 10, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PWA_INSTALL", :type "CXType_Int", :name "CEF_CPAIT_PWA_INSTALL", :value 11, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_QR_CODE_GENERATOR", :type "CXType_Int", :name "CEF_CPAIT_QR_CODE_GENERATOR", :value 12, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_READER_MODE", :type "CXType_Int", :name "CEF_CPAIT_READER_MODE", :value 13, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_AUTOFILL_ADDRESS", :type "CXType_Int", :name "CEF_CPAIT_SAVE_AUTOFILL_ADDRESS", :value 14, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_CARD", :type "CXType_Int", :name "CEF_CPAIT_SAVE_CARD", :value 15, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SEND_TAB_TO_SELF", :type "CXType_Int", :name "CEF_CPAIT_SEND_TAB_TO_SELF", :value 16, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SHARING_HUB", :type "CXType_Int", :name "CEF_CPAIT_SHARING_HUB", :value 17, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SIDE_SEARCH", :type "CXType_Int", :name "CEF_CPAIT_SIDE_SEARCH", :value 18, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SMS_REMOTE_FETCHER", :type "CXType_Int", :name "CEF_CPAIT_SMS_REMOTE_FETCHER", :value 19, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_TRANSLATE", :type "CXType_Int", :name "CEF_CPAIT_TRANSLATE", :value 20, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_VIRTUAL_CARD_ENROLL", :type "CXType_Int", :name "CEF_CPAIT_VIRTUAL_CARD_ENROLL", :value 21, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_VIRTUAL_CARD_MANUAL_FALLBACK", :type "CXType_Int", :name "CEF_CPAIT_VIRTUAL_CARD_MANUAL_FALLBACK", :value 22, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_ZOOM", :type "CXType_Int", :name "CEF_CPAIT_ZOOM", :value 23, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_IBAN", :type "CXType_Int", :name "CEF_CPAIT_SAVE_IBAN", :value 24, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MANDATORY_REAUTH", :type "CXType_Int", :name "CEF_CPAIT_MANDATORY_REAUTH", :value 25, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PRICE_INSIGHTS", :type "CXType_Int", :name "CEF_CPAIT_PRICE_INSIGHTS", :value 26, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MAX_VALUE", :type "CXType_Int", :name "CEF_CPAIT_MAX_VALUE", :value 26, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_BOOKMARK_STAR", :type "CXType_Int", :name "CEF_CPAIT_BOOKMARK_STAR", :value 0, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_CLICK_TO_CALL", :type "CXType_Int", :name "CEF_CPAIT_CLICK_TO_CALL", :value 1, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_COOKIE_CONTROLS", :type "CXType_Int", :name "CEF_CPAIT_COOKIE_CONTROLS", :value 2, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_FILE_SYSTEM_ACCESS", :type "CXType_Int", :name "CEF_CPAIT_FILE_SYSTEM_ACCESS", :value 3, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_FIND", :type "CXType_Int", :name "CEF_CPAIT_FIND", :value 4, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_HIGH_EFFICIENCY", :type "CXType_Int", :name "CEF_CPAIT_HIGH_EFFICIENCY", :value 5, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_INTENT_PICKER", :type "CXType_Int", :name "CEF_CPAIT_INTENT_PICKER", :value 6, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_LOCAL_CARD_MIGRATION", :type "CXType_Int", :name "CEF_CPAIT_LOCAL_CARD_MIGRATION", :value 7, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MANAGE_PASSWORDS", :type "CXType_Int", :name "CEF_CPAIT_MANAGE_PASSWORDS", :value 8, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PAYMENTS_OFFER_NOTIFICATION", :type "CXType_Int", :name "CEF_CPAIT_PAYMENTS_OFFER_NOTIFICATION", :value 9, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PRICE_TRACKING", :type "CXType_Int", :name "CEF_CPAIT_PRICE_TRACKING", :value 10, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PWA_INSTALL", :type "CXType_Int", :name "CEF_CPAIT_PWA_INSTALL", :value 11, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_QR_CODE_GENERATOR", :type "CXType_Int", :name "CEF_CPAIT_QR_CODE_GENERATOR", :value 12, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_READER_MODE", :type "CXType_Int", :name "CEF_CPAIT_READER_MODE", :value 13, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_AUTOFILL_ADDRESS", :type "CXType_Int", :name "CEF_CPAIT_SAVE_AUTOFILL_ADDRESS", :value 14, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_CARD", :type "CXType_Int", :name "CEF_CPAIT_SAVE_CARD", :value 15, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SEND_TAB_TO_SELF", :type "CXType_Int", :name "CEF_CPAIT_SEND_TAB_TO_SELF", :value 16, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SHARING_HUB", :type "CXType_Int", :name "CEF_CPAIT_SHARING_HUB", :value 17, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SIDE_SEARCH", :type "CXType_Int", :name "CEF_CPAIT_SIDE_SEARCH", :value 18, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SMS_REMOTE_FETCHER", :type "CXType_Int", :name "CEF_CPAIT_SMS_REMOTE_FETCHER", :value 19, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_TRANSLATE", :type "CXType_Int", :name "CEF_CPAIT_TRANSLATE", :value 20, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_VIRTUAL_CARD_ENROLL", :type "CXType_Int", :name "CEF_CPAIT_VIRTUAL_CARD_ENROLL", :value 21, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_VIRTUAL_CARD_MANUAL_FALLBACK", :type "CXType_Int", :name "CEF_CPAIT_VIRTUAL_CARD_MANUAL_FALLBACK", :value 22, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_ZOOM", :type "CXType_Int", :name "CEF_CPAIT_ZOOM", :value 23, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_SAVE_IBAN", :type "CXType_Int", :name "CEF_CPAIT_SAVE_IBAN", :value 24, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MANDATORY_REAUTH", :type "CXType_Int", :name "CEF_CPAIT_MANDATORY_REAUTH", :value 25, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_PRICE_INSIGHTS", :type "CXType_Int", :name "CEF_CPAIT_PRICE_INSIGHTS", :value 26, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CPAIT_MAX_VALUE", :type "CXType_Int", :name "CEF_CPAIT_MAX_VALUE", :value 26, :enum "cef_chrome_page_action_icon_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_CAST", :type "CXType_Int", :name "CEF_CTBT_CAST", :value 0, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_DOWNLOAD", :type "CXType_Int", :name "CEF_CTBT_DOWNLOAD", :value 1, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_SEND_TAB_TO_SELF", :type "CXType_Int", :name "CEF_CTBT_SEND_TAB_TO_SELF", :value 2, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_SIDE_PANEL", :type "CXType_Int", :name "CEF_CTBT_SIDE_PANEL", :value 3, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_MAX_VALUE", :type "CXType_Int", :name "CEF_CTBT_MAX_VALUE", :value 3, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_CAST", :type "CXType_Int", :name "CEF_CTBT_CAST", :value 0, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_DOWNLOAD", :type "CXType_Int", :name "CEF_CTBT_DOWNLOAD", :value 1, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_SEND_TAB_TO_SELF", :type "CXType_Int", :name "CEF_CTBT_SEND_TAB_TO_SELF", :value 2, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_SIDE_PANEL", :type "CXType_Int", :name "CEF_CTBT_SIDE_PANEL", :value 3, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_CTBT_MAX_VALUE", :type "CXType_Int", :name "CEF_CTBT_MAX_VALUE", :value 3, :enum "cef_chrome_toolbar_button_type_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_TOP_LEFT", :type "CXType_Int", :name "CEF_DOCKING_MODE_TOP_LEFT", :value 1, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_TOP_RIGHT", :type "CXType_Int", :name "CEF_DOCKING_MODE_TOP_RIGHT", :value 2, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_BOTTOM_LEFT", :type "CXType_Int", :name "CEF_DOCKING_MODE_BOTTOM_LEFT", :value 3, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_BOTTOM_RIGHT", :type "CXType_Int", :name "CEF_DOCKING_MODE_BOTTOM_RIGHT", :value 4, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_CUSTOM", :type "CXType_Int", :name "CEF_DOCKING_MODE_CUSTOM", :value 5, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_TOP_LEFT", :type "CXType_Int", :name "CEF_DOCKING_MODE_TOP_LEFT", :value 1, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_TOP_RIGHT", :type "CXType_Int", :name "CEF_DOCKING_MODE_TOP_RIGHT", :value 2, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_BOTTOM_LEFT", :type "CXType_Int", :name "CEF_DOCKING_MODE_BOTTOM_LEFT", :value 3, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_BOTTOM_RIGHT", :type "CXType_Int", :name "CEF_DOCKING_MODE_BOTTOM_RIGHT", :value 4, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOCKING_MODE_CUSTOM", :type "CXType_Int", :name "CEF_DOCKING_MODE_CUSTOM", :value 5, :enum "cef_docking_mode_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_NORMAL", :type "CXType_Int", :name "CEF_SHOW_STATE_NORMAL", :value 1, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_MINIMIZED", :type "CXType_Int", :name "CEF_SHOW_STATE_MINIMIZED", :value 2, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_MAXIMIZED", :type "CXType_Int", :name "CEF_SHOW_STATE_MAXIMIZED", :value 3, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_FULLSCREEN", :type "CXType_Int", :name "CEF_SHOW_STATE_FULLSCREEN", :value 4, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_NORMAL", :type "CXType_Int", :name "CEF_SHOW_STATE_NORMAL", :value 1, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_MINIMIZED", :type "CXType_Int", :name "CEF_SHOW_STATE_MINIMIZED", :value 2, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_MAXIMIZED", :type "CXType_Int", :name "CEF_SHOW_STATE_MAXIMIZED", :value 3, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_SHOW_STATE_FULLSCREEN", :type "CXType_Int", :name "CEF_SHOW_STATE_FULLSCREEN", :value 4, :enum "cef_show_state_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_NONE", :type "CXType_Int", :name "CEF_THS_FLAG_NONE", :value 0, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ENABLED", :type "CXType_Int", :name "CEF_THS_FLAG_ENABLED", :value 1, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ORIENTATION", :type "CXType_Int", :name "CEF_THS_FLAG_ORIENTATION", :value 2, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ORIGIN", :type "CXType_Int", :name "CEF_THS_FLAG_ORIGIN", :value 4, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ALPHA", :type "CXType_Int", :name "CEF_THS_FLAG_ALPHA", :value 8, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_NONE", :type "CXType_Int", :name "CEF_THS_FLAG_NONE", :value 0, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ENABLED", :type "CXType_Int", :name "CEF_THS_FLAG_ENABLED", :value 1, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ORIENTATION", :type "CXType_Int", :name "CEF_THS_FLAG_ORIENTATION", :value 2, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ORIGIN", :type "CXType_Int", :name "CEF_THS_FLAG_ORIGIN", :value 4, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_THS_FLAG_ALPHA", :type "CXType_Int", :name "CEF_THS_FLAG_ALPHA", :value 8, :enum "cef_touch_handle_state_flags_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_NONE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_NONE", :value 0, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// No permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DEVICE_AUDIO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DEVICE_AUDIO_CAPTURE", :value 1, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Device audio capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DEVICE_VIDEO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DEVICE_VIDEO_CAPTURE", :value 2, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Device video capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DESKTOP_AUDIO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DESKTOP_AUDIO_CAPTURE", :value 4, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Desktop audio capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DESKTOP_VIDEO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DESKTOP_VIDEO_CAPTURE", :value 8, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Desktop video capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_NONE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_NONE", :value 0, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// No permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DEVICE_AUDIO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DEVICE_AUDIO_CAPTURE", :value 1, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Device audio capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DEVICE_VIDEO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DEVICE_VIDEO_CAPTURE", :value 2, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Device video capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DESKTOP_AUDIO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DESKTOP_AUDIO_CAPTURE", :value 4, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Desktop audio capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_MEDIA_PERMISSION_DESKTOP_VIDEO_CAPTURE", :type "CXType_Int", :name "CEF_MEDIA_PERMISSION_DESKTOP_VIDEO_CAPTURE", :value 8, :enum "cef_media_access_permission_types_t", :raw-comment "///\n  /// Desktop video capture permission.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_NONE", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_NONE", :value 0, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_ACCESSIBILITY_EVENTS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_ACCESSIBILITY_EVENTS", :value 1, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_AR_SESSION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_AR_SESSION", :value 2, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CAMERA_PAN_TILT_ZOOM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CAMERA_PAN_TILT_ZOOM", :value 4, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CAMERA_STREAM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CAMERA_STREAM", :value 8, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CLIPBOARD", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CLIPBOARD", :value 16, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_TOP_LEVEL_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_TOP_LEVEL_STORAGE_ACCESS", :value 32, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_DISK_QUOTA", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_DISK_QUOTA", :value 64, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_LOCAL_FONTS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_LOCAL_FONTS", :value 128, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_GEOLOCATION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_GEOLOCATION", :value 256, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_IDLE_DETECTION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_IDLE_DETECTION", :value 512, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIC_STREAM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIC_STREAM", :value 1024, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIDI", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIDI", :value 2048, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIDI_SYSEX", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIDI_SYSEX", :value 4096, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MULTIPLE_DOWNLOADS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MULTIPLE_DOWNLOADS", :value 8192, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_NOTIFICATIONS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_NOTIFICATIONS", :value 16384, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_PROTECTED_MEDIA_IDENTIFIER", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_PROTECTED_MEDIA_IDENTIFIER", :value 32768, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_REGISTER_PROTOCOL_HANDLER", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_REGISTER_PROTOCOL_HANDLER", :value 65536, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_STORAGE_ACCESS", :value 131072, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_VR_SESSION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_VR_SESSION", :value 262144, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_WINDOW_MANAGEMENT", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_WINDOW_MANAGEMENT", :value 524288, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_NONE", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_NONE", :value 0, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_ACCESSIBILITY_EVENTS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_ACCESSIBILITY_EVENTS", :value 1, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_AR_SESSION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_AR_SESSION", :value 2, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CAMERA_PAN_TILT_ZOOM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CAMERA_PAN_TILT_ZOOM", :value 4, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CAMERA_STREAM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CAMERA_STREAM", :value 8, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_CLIPBOARD", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_CLIPBOARD", :value 16, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_TOP_LEVEL_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_TOP_LEVEL_STORAGE_ACCESS", :value 32, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_DISK_QUOTA", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_DISK_QUOTA", :value 64, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_LOCAL_FONTS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_LOCAL_FONTS", :value 128, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_GEOLOCATION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_GEOLOCATION", :value 256, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_IDLE_DETECTION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_IDLE_DETECTION", :value 512, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIC_STREAM", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIC_STREAM", :value 1024, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIDI", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIDI", :value 2048, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MIDI_SYSEX", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MIDI_SYSEX", :value 4096, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_MULTIPLE_DOWNLOADS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_MULTIPLE_DOWNLOADS", :value 8192, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_NOTIFICATIONS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_NOTIFICATIONS", :value 16384, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_PROTECTED_MEDIA_IDENTIFIER", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_PROTECTED_MEDIA_IDENTIFIER", :value 32768, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_REGISTER_PROTOCOL_HANDLER", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_REGISTER_PROTOCOL_HANDLER", :value 65536, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_STORAGE_ACCESS", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_STORAGE_ACCESS", :value 131072, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_VR_SESSION", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_VR_SESSION", :value 262144, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_TYPE_WINDOW_MANAGEMENT", :type "CXType_Int", :name "CEF_PERMISSION_TYPE_WINDOW_MANAGEMENT", :value 524288, :enum "cef_permission_request_types_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_ACCEPT", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_ACCEPT", :value 0, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Accept the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_DENY", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_DENY", :value 1, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Deny the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_DISMISS", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_DISMISS", :value 2, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Dismiss the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_IGNORE", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_IGNORE", :value 3, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Ignore the permission request. If the prompt remains unhandled (e.g.\n  /// OnShowPermissionPrompt returns false and there is no default permissions\n  /// UI) then any related promises may remain unresolved.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_ACCEPT", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_ACCEPT", :value 0, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Accept the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_DENY", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_DENY", :value 1, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Deny the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_DISMISS", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_DISMISS", :value 2, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Dismiss the permission request as an explicit user action.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PERMISSION_RESULT_IGNORE", :type "CXType_Int", :name "CEF_PERMISSION_RESULT_IGNORE", :value 3, :enum "cef_permission_request_result_t", :raw-comment "///\n  /// Ignore the permission request. If the prompt remains unhandled (e.g.\n  /// OnShowPermissionPrompt returns false and there is no default permissions\n  /// UI) then any related promises may remain unresolved.\n  ///"} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_OK_IP", :type "CXType_Int", :name "CEF_TEST_CERT_OK_IP", :value 0, :enum "cef_test_cert_type_t", :raw-comment "/// Valid certificate using the IP (127.0.0.1). Loads the \"ok_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_OK_DOMAIN", :type "CXType_Int", :name "CEF_TEST_CERT_OK_DOMAIN", :value 1, :enum "cef_test_cert_type_t", :raw-comment "/// Valid certificate using the domain (\"localhost\"). Loads the\n  /// \"localhost_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_EXPIRED", :type "CXType_Int", :name "CEF_TEST_CERT_EXPIRED", :value 2, :enum "cef_test_cert_type_t", :raw-comment "/// Expired certificate. Loads the \"expired_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_OK_IP", :type "CXType_Int", :name "CEF_TEST_CERT_OK_IP", :value 0, :enum "cef_test_cert_type_t", :raw-comment "/// Valid certificate using the IP (127.0.0.1). Loads the \"ok_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_OK_DOMAIN", :type "CXType_Int", :name "CEF_TEST_CERT_OK_DOMAIN", :value 1, :enum "cef_test_cert_type_t", :raw-comment "/// Valid certificate using the domain (\"localhost\"). Loads the\n  /// \"localhost_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_TEST_CERT_EXPIRED", :type "CXType_Int", :name "CEF_TEST_CERT_EXPIRED", :value 2, :enum "cef_test_cert_type_t", :raw-comment "/// Expired certificate. Loads the \"expired_cert.pem\" file."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PREFERENCES_TYPE_GLOBAL", :type "CXType_Int", :name "CEF_PREFERENCES_TYPE_GLOBAL", :value 0, :enum "cef_preferences_type_t", :raw-comment "/// Global preferences registered a single time at application startup."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PREFERENCES_TYPE_REQUEST_CONTEXT", :type "CXType_Int", :name "CEF_PREFERENCES_TYPE_REQUEST_CONTEXT", :value 1, :enum "cef_preferences_type_t", :raw-comment "/// Request context preferences registered each time a new CefRequestContext\n  /// is created."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PREFERENCES_TYPE_GLOBAL", :type "CXType_Int", :name "CEF_PREFERENCES_TYPE_GLOBAL", :value 0, :enum "cef_preferences_type_t", :raw-comment "/// Global preferences registered a single time at application startup."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_PREFERENCES_TYPE_REQUEST_CONTEXT", :type "CXType_Int", :name "CEF_PREFERENCES_TYPE_REQUEST_CONTEXT", :value 1, :enum "cef_preferences_type_t", :raw-comment "/// Request context preferences registered each time a new CefRequestContext\n  /// is created."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NONE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NONE", :value 0, :enum "cef_download_interrupt_reason_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED", :value 1, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Generic file operation failure."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED", :value 2, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file cannot be accessed due to security restrictions."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE", :value 3, :enum "cef_download_interrupt_reason_t", :raw-comment "/// There is not enough room on the drive."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG", :value 5, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The directory or file name is too long."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE", :value 6, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file is too large for the file system to handle."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_VIRUS_INFECTED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_VIRUS_INFECTED", :value 7, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file contains a virus."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR", :value 10, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file was in use. Too many files are opened at once. We have run out of\n  /// memory."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED", :value 11, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file was blocked due to local policy."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED", :value 12, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An attempt to check the safety of the download failed due to unexpected\n  /// reasons. See http://crbug.com/153212."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT", :value 13, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An attempt was made to seek past the end of a file in opening\n  /// a file (as part of resuming a previously interrupted download)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH", :value 14, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The partial file didn't match the expected hash."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SAME_AS_SOURCE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SAME_AS_SOURCE", :value 15, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The source and the target of the download were the same."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED", :value 20, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Generic network failure."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT", :value 21, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network operation timed out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED", :value 22, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network connection has been lost."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN", :value 23, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server has gone down."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST", :value 24, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network request was invalid. This may be due to the original URL or a\n  /// redirected URL:\n  /// - Having an unsupported scheme.\n  /// - Being an invalid URL.\n  /// - Being disallowed by policy."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED", :value 30, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server indicates that the operation has failed (generic)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE", :value 31, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server does not support range requests.\n  /// Internal use only:  must restart from the beginning."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT", :value 33, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server does not have the requested data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED", :value 34, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server didn't authorize access to resource."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CERT_PROBLEM", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CERT_PROBLEM", :value 35, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server certificate problem."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN", :value 36, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server access forbidden."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNREACHABLE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNREACHABLE", :value 37, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Unexpected server response. This might indicate that the responding server\n  /// may not be the intended server."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH", :value 38, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server sent fewer bytes than the content-length header. It may\n  /// indicate that the connection was closed prematurely, or the Content-Length\n  /// header was invalid. The download is only interrupted if strong validators\n  /// are present. Otherwise, it is treated as finished."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT", :value 39, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An unexpected cross-origin redirect happened."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED", :value 40, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The user canceled the download."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN", :value 41, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The user shut down the browser.\n  /// Internal use only:  resume pending downloads if possible."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_CRASH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_CRASH", :value 50, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The browser crashed.\n  /// Internal use only:  resume pending downloads if possible."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NONE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NONE", :value 0, :enum "cef_download_interrupt_reason_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED", :value 1, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Generic file operation failure."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED", :value 2, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file cannot be accessed due to security restrictions."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE", :value 3, :enum "cef_download_interrupt_reason_t", :raw-comment "/// There is not enough room on the drive."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG", :value 5, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The directory or file name is too long."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE", :value 6, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file is too large for the file system to handle."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_VIRUS_INFECTED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_VIRUS_INFECTED", :value 7, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file contains a virus."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR", :value 10, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file was in use. Too many files are opened at once. We have run out of\n  /// memory."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED", :value 11, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The file was blocked due to local policy."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED", :value 12, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An attempt to check the safety of the download failed due to unexpected\n  /// reasons. See http://crbug.com/153212."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT", :value 13, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An attempt was made to seek past the end of a file in opening\n  /// a file (as part of resuming a previously interrupted download)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH", :value 14, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The partial file didn't match the expected hash."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SAME_AS_SOURCE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_FILE_SAME_AS_SOURCE", :value 15, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The source and the target of the download were the same."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED", :value 20, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Generic network failure."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT", :value 21, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network operation timed out."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED", :value 22, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network connection has been lost."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN", :value 23, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server has gone down."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST", :value 24, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The network request was invalid. This may be due to the original URL or a\n  /// redirected URL:\n  /// - Having an unsupported scheme.\n  /// - Being an invalid URL.\n  /// - Being disallowed by policy."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED", :value 30, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server indicates that the operation has failed (generic)."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE", :value 31, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server does not support range requests.\n  /// Internal use only:  must restart from the beginning."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT", :value 33, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server does not have the requested data."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED", :value 34, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server didn't authorize access to resource."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CERT_PROBLEM", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CERT_PROBLEM", :value 35, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server certificate problem."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN", :value 36, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Server access forbidden."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNREACHABLE", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_UNREACHABLE", :value 37, :enum "cef_download_interrupt_reason_t", :raw-comment "/// Unexpected server response. This might indicate that the responding server\n  /// may not be the intended server."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH", :value 38, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The server sent fewer bytes than the content-length header. It may\n  /// indicate that the connection was closed prematurely, or the Content-Length\n  /// header was invalid. The download is only interrupted if strong validators\n  /// are present. Otherwise, it is treated as finished."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT", :value 39, :enum "cef_download_interrupt_reason_t", :raw-comment "/// An unexpected cross-origin redirect happened."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED", :value 40, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The user canceled the download."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN", :value 41, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The user shut down the browser.\n  /// Internal use only:  resume pending downloads if possible."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_DOWNLOAD_INTERRUPT_REASON_CRASH", :type "CXType_Int", :name "CEF_DOWNLOAD_INTERRUPT_REASON_CRASH", :value 50, :enum "cef_download_interrupt_reason_t", :raw-comment "/// The browser crashed.\n  /// Internal use only:  resume pending downloads if possible."} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_GESTURE_COMMAND_BACK", :type "CXType_Int", :name "CEF_GESTURE_COMMAND_BACK", :value 0, :enum "cef_gesture_command_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_GESTURE_COMMAND_FORWARD", :type "CXType_Int", :name "CEF_GESTURE_COMMAND_FORWARD", :value 1, :enum "cef_gesture_command_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_GESTURE_COMMAND_BACK", :type "CXType_Int", :name "CEF_GESTURE_COMMAND_BACK", :value 0, :enum "cef_gesture_command_t", :raw-comment nil} {:kind "CXCursor_EnumConstantDecl", :spelling "CEF_GESTURE_COMMAND_FORWARD", :type "CXType_Int", :name "CEF_GESTURE_COMMAND_FORWARD", :value 1, :enum "cef_gesture_command_t", :raw-comment nil})}